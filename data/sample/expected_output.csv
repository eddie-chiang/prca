project_id,project_url,pull_request_id,pullreq_id,user_id,comment_id,position,body,commit_id,created_at,dialogue_act_classification_ml,pr_comments_cnt,pr_review_comments_cnt,pr_commits_cnt,pr_additions,pr_deletions,pr_changed_files,pr_merged_by_user_id,comment_author_association,comment_is_by_author,comment_updated_at,comment_html_url,pr_commits_cnt_prior_to_comment,commit_file_status,commit_file_additions,commit_file_deletions,commit_file_changes
10505039,https://api.github.com/repos/OpenClinica/OpenClinica,4723215,56,1034239,18054141,19,Remove underscores,157932086,2014-09-25 17:29:41 UTC,Statement,0,3,3,105,33,4,Not Available,CONTRIBUTOR,False,2014-09-28T23:40:22Z,https://github.com/OpenClinica/OpenClinica/pull/56#discussion_r18054141,1,added,64,0,64
10505039,https://api.github.com/repos/OpenClinica/OpenClinica,21002082,738,4386270,104763417,1,"line 163 has the words ""Study Event"" hardcoded as well.  This should use the property file.",611198266,2017-03-07 19:56:20 UTC,Clarify,4,16,3,457,425,23,Not Available,CONTRIBUTOR,False,2017-03-13T17:25:07Z,https://github.com/OpenClinica/OpenClinica/pull/738#discussion_r104763417,1,modified,8,8,16
30940386,https://api.github.com/repos/eclipse/rdf4j,21327610,758,20394,106820873,551,Use try-with-resources for this GraphQueryResult,630425039,2017-03-19 22:27:29 UTC,Statement,11,66,35,2048,406,27,881923,CONTRIBUTOR,False,2017-07-26T18:43:16Z,https://github.com/eclipse/rdf4j/pull/758#discussion_r106820873,8,added,914,0,914
30940386,https://api.github.com/repos/eclipse/rdf4j,18242744,631,20394,85229672,47,"I am not familiar enough with the semantics of isHeldByCurrentThread to know whether this will work. Ie, will it return false if a lock is held but by another thread? Obtaining an exclusive lock implies to me that there should be no lock held.",542598271,2016-10-26 21:59:07 UTC,nAnswer,5,7,3,12,27,2,Not Available,CONTRIBUTOR,False,2016-10-26T22:44:40Z,https://github.com/eclipse/rdf4j/pull/631#discussion_r85229672,0,modified,5,10,15
30940386,https://api.github.com/repos/eclipse/rdf4j,17059653,571,648104,78863056,342,This should probably be private or at least protected,512635283,2016-09-14 23:24:45 UTC,Clarify,6,19,4,64,41,1,728776,CONTRIBUTOR,False,2016-09-16T07:46:12Z,https://github.com/eclipse/rdf4j/pull/571#discussion_r78863056,1,modified,22,16,38
30940386,https://api.github.com/repos/eclipse/rdf4j,17445585,584,7714043,89170725,31,Convenience constructor for common use case.,555522662,2016-11-22 17:42:03 UTC,Reject,29,23,30,1527,146,33,728776,NONE,True,2016-12-14T22:22:42Z,https://github.com/eclipse/rdf4j/pull/584#discussion_r89170725,22,modified,4,2,6
30940386,https://api.github.com/repos/eclipse/rdf4j,19125291,666,648104,89428839,2,wrong copyright header.,562550988,2016-11-24 02:49:02 UTC,Reject,0,11,5,201,33,6,728776,CONTRIBUTOR,False,2016-11-24T22:00:41Z,https://github.com/eclipse/rdf4j/pull/666#discussion_r89428839,1,added,101,0,101
30940386,https://api.github.com/repos/eclipse/rdf4j,18615733,642,20394,95276924,173,"This should call ```this(data, schema, DEFAULT_USE_RDFS_RULES)```, with a new constant, rather than relying on the initialiser to set it to true, given the constructors set it up in most cases.",593645145,2017-01-10 00:15:32 UTC,Clarify,108,106,84,4615,4,39,728776,CONTRIBUTOR,False,2017-01-31T07:55:29Z,https://github.com/eclipse/rdf4j/pull/642#discussion_r95276924,48,modified,19,15,34
30940386,https://api.github.com/repos/eclipse/rdf4j,18242744,631,648104,85235292,43,I synchronized this to bring it in line with the same method in NativeSailStore. You're right though that we should probably look at the calling public methods. I'll have a closer look and adapt where necessary. ,542598271,2016-10-26 22:35:27 UTC,Clarify,5,7,3,12,27,2,Not Available,CONTRIBUTOR,True,2016-10-26T22:44:40Z,https://github.com/eclipse/rdf4j/pull/631#discussion_r85235292,0,modified,5,10,15
30940386,https://api.github.com/repos/eclipse/rdf4j,19414748,687,20394,91011251,79,"The dependentClient stuff can't be helped though, that is how we know if we should be closing it ourselves or leaving it open when it goes out of scope.",570282623,2016-12-06 04:43:32 UTC,Clarify,5,28,4,1033,520,29,728776,CONTRIBUTOR,True,2016-12-21T02:19:18Z,https://github.com/eclipse/rdf4j/pull/687#discussion_r91011251,Not Available,Not Available,Not Available,Not Available,Not Available
30940386,https://api.github.com/repos/eclipse/rdf4j,17445585,584,7714043,89175671,10,"It doesn't, I just checked: https://github.com/eclipse/rdf4j/blob/master/eclipse-settings/codetemplates.xml",555522662,2016-11-22 18:07:57 UTC,Emphasis,29,23,30,1527,146,33,728776,NONE,True,2016-12-14T22:22:42Z,https://github.com/eclipse/rdf4j/pull/584#discussion_r89175671,22,modified,3,3,6
30940386,https://api.github.com/repos/eclipse/rdf4j,19414748,687,648104,93342886,70,"Just to be clear the problem is not that `hasActiveOperations` can be called concurrently (that is by design), but that it inspects the list of Futures. It needs to lock access to that list to avoid concurrent threads modifying it _while it is looping over it_. ",579593345,2016-12-20 22:52:38 UTC,nAnswer,5,28,4,1033,520,29,728776,CONTRIBUTOR,False,2016-12-21T02:19:18Z,https://github.com/eclipse/rdf4j/pull/687#discussion_r93342886,0,modified,114,108,222
30940386,https://api.github.com/repos/eclipse/rdf4j,18615733,642,20394,95280570,437,Can you reuse one of the existing Model implementations for this?,593645145,2017-01-10 00:48:01 UTC,ynQuestion,108,106,84,4615,4,39,728776,CONTRIBUTOR,False,2017-01-31T07:55:29Z,https://github.com/eclipse/rdf4j/pull/642#discussion_r95280570,48,modified,0,2,2
30940386,https://api.github.com/repos/eclipse/rdf4j,15682407,224,7714043,71192955,21,I wasn't sure about whether is was desirable to couple the base class with this feature. General consensus seems to be that it would be acceptable so I'll push it up.,470893718,2016-07-18 17:39:44 UTC,Clarify,1,16,7,853,429,127,Not Available,NONE,True,2016-07-18T18:54:14Z,https://github.com/eclipse/rdf4j/pull/224#discussion_r71192955,Not Available,Not Available,Not Available,Not Available,Not Available
30940386,https://api.github.com/repos/eclipse/rdf4j,14473845,47,20394,62133714,18,"If you want to use the basic mvn clean deploy without the release/nexus plugins you will need it, but I have never used the nexus plugin, so it may define all of that internally and you may be fine. :)",439334022,2016-05-04 23:54:03 UTC,Reject,0,5,4,66,6,1,728776,CONTRIBUTOR,False,2016-05-04T23:54:03Z,https://github.com/eclipse/rdf4j/pull/47#discussion_r62133714,3,modified,17,0,17
30940386,https://api.github.com/repos/eclipse/rdf4j,17612944,595,20394,82328468,13,What obstacles are there to having this take EvaluationStrategy instead of a specific implementation?,525274907,2016-10-07 04:47:13 UTC,whQuestion,4,9,6,2452,2077,28,728776,CONTRIBUTOR,False,2016-10-14T00:57:27Z,https://github.com/eclipse/rdf4j/pull/595#discussion_r82328468,3,modified,2,2,4
76384,https://api.github.com/repos/stripe/stripe-java,36060041,462,31982380,178269137,13,"I'm fine with adding a new helper method in `APIResource` for this, but we should ensure its usage is consistent. Obviously that shouldn't fall on you, but can you just add a ""TODO"" comment to update other model classes with subresources to use this method as well?
",960669408,2018-03-30 10:19:05 UTC,nAnswer,14,19,1,429,2,12,32648269,CONTRIBUTOR,False,2018-04-04T18:23:05Z,https://github.com/stripe/stripe-java/pull/462#discussion_r178269137,Not Available,Not Available,Not Available,Not Available,Not Available
76384,https://api.github.com/repos/stripe/stripe-java,30379765,417,32041691,147170181,9,"Would you mind giving this a slightly more specific name and adding a doc block explaining roughly what it does to the class? I think that ""type data deserializer"" is just a little too generic given that this is all related to sources.

Sorry definitely a nit given that you were not the one to originally cause these issues :$",819313926,2017-10-26 15:00:27 UTC,Clarify,4,2,1,294,57,10,23105990,MEMBER,False,2017-10-26T21:32:12Z,https://github.com/stripe/stripe-java/pull/417#discussion_r147170181,Not Available,Not Available,Not Available,Not Available,Not Available
76384,https://api.github.com/repos/stripe/stripe-java,25273543,374,32015086,118389056,4,Update: that test doesn't even support the old `user_id` key so I guess we're good though testing it explicitly might be worth it.,709684184,2017-05-24 23:33:39 UTC,Clarify,2,4,2,15,1,3,23105990,CONTRIBUTOR,False,2017-06-07T20:43:16Z,https://github.com/stripe/stripe-java/pull/374#discussion_r118389056,0,modified,1,1,2
76384,https://api.github.com/repos/stripe/stripe-java,23400333,365,1025662,112307096,71,See my comment above on why expandable fields would not work in this case.,672943536,2017-04-19 20:35:07 UTC,Clarify,14,12,4,121,19,4,23105990,CONTRIBUTOR,True,2017-06-09T15:49:13Z,https://github.com/stripe/stripe-java/pull/365#discussion_r112307096,2,modified,8,6,14
76384,https://api.github.com/repos/stripe/stripe-java,37141770,487,32041691,178311453,6,And same question here.,961227760,2018-03-30 15:26:01 UTC,Statement,2,3,1,585,627,67,23086931,MEMBER,False,2018-03-30T15:36:46Z,https://github.com/stripe/stripe-java/pull/487#discussion_r178311453,Not Available,Not Available,Not Available,Not Available,Not Available
76384,https://api.github.com/repos/stripe/stripe-java,35204953,452,31982380,177815449,21,"I don't think it's necessary to check the value of every field (especially if you're using stripe-mock instead of an embedded fixture file). Mostly what we're testing here is that `fromJson` does not raise an exception.

In the other deserialization tests, I used just two asserts: `assertNotNull(resource)` + `assertNotNul(resource.getId())` to check for the unlikely case where deserialization would not raise an exception but return `null`, or return an instance with `null` values in attributes.

For models with submodels (e.g. `AccountPayoutSchedule`), we should create a separate deserialization test for the submodel, e.g. in `model/AccountPayoutScheduleTest.java`:
```java
String accountData = getFixture(""/v1/accounts/acct_123"");
String data = getDataAt(accountData, ""payout_schedule"");
AccountPayoutSchedule object = APIResource.GSON.fromJson(data, AccountPayoutSchedule.class);
assertNotNull(object);
assertNotNull(object.getInterval());
```

(cf. `ChargeOutcomeTest.java` in the first commit)",959272755,2018-03-28 16:46:33 UTC,Clarify,10,81,1,4627,7094,157,23086931,CONTRIBUTOR,True,2018-06-07T21:35:18Z,https://github.com/stripe/stripe-java/pull/452#discussion_r177815449,Not Available,Not Available,Not Available,Not Available,Not Available
76384,https://api.github.com/repos/stripe/stripe-java,35204953,452,31982380,177812438,110,Rename to `testReject()`,959272755,2018-03-28 16:36:14 UTC,Statement,10,81,1,4627,7094,157,23086931,CONTRIBUTOR,True,2018-06-07T21:35:18Z,https://github.com/stripe/stripe-java/pull/452#discussion_r177812438,Not Available,Not Available,Not Available,Not Available,Not Available
76384,https://api.github.com/repos/stripe/stripe-java,16719659,309,7942,77237022,5,"@dukehoops By default these fields get a modifier called ""package-private"" which means that they can only be used internally to the package. It's true that private might be a little better, but at least we aren't leaking an API. ",503836379,2016-09-01 19:21:06 UTC,Clarify,13,2,4,150,150,31,96890,CONTRIBUTOR,False,2016-10-17T22:35:30Z,https://github.com/stripe/stripe-java/pull/309#discussion_r77237022,Not Available,Not Available,Not Available,Not Available,Not Available
76384,https://api.github.com/repos/stripe/stripe-java,5595882,130,128223,22009625,294,nit: normal in method names only makes sense with respect to multipart. You can probably remove it or indicate how it's different than multipart.    a. `getStripeResponse`  b. `getSinglePartStripeResponse`    are both fine,196226418,2014-12-17 21:22:05 UTC,Clarify,1,11,1,413,40,10,679197,CONTRIBUTOR,False,2014-12-18T20:36:10Z,https://github.com/stripe/stripe-java/pull/130#discussion_r22009625,Not Available,Not Available,Not Available,Not Available,Not Available
76384,https://api.github.com/repos/stripe/stripe-java,6694219,149,128223,26638594,65,AssertNull,231658517,2015-03-18 04:10:14 UTC,Statement,6,23,1,760,26,14,935063,CONTRIBUTOR,False,2015-03-19T03:10:21Z,https://github.com/stripe/stripe-java/pull/149#discussion_r26638594,Not Available,Not Available,Not Available,Not Available,Not Available
76384,https://api.github.com/repos/stripe/stripe-java,7361740,166,373987,29540697,16,How about a comment here describing what this is / why it is?,252162623,2015-05-01 21:20:28 UTC,whQuestion,0,4,1,462,23,8,28023,CONTRIBUTOR,False,2015-05-04T21:48:50Z,https://github.com/stripe/stripe-java/pull/166#discussion_r29540697,Not Available,Not Available,Not Available,Not Available,Not Available
76384,https://api.github.com/repos/stripe/stripe-java,16769652,311,7942,77834466,17,Committed a small patch in ad217ff to give these getter/setters a little more breathing room.,505863596,2016-09-07 14:36:22 UTC,nAnswer,2,5,3,30,0,1,96890,CONTRIBUTOR,False,2016-09-07T14:36:22Z,https://github.com/stripe/stripe-java/pull/311#discussion_r77834466,0,modified,18,0,18
76384,https://api.github.com/repos/stripe/stripe-java,25273543,374,32041691,120739474,4,"Alright, I updated the fixture in 304fc78.",709684184,2017-06-07 20:43:37 UTC,nAnswer,2,4,2,15,1,3,23105990,MEMBER,True,2017-06-07T20:43:37Z,https://github.com/stripe/stripe-java/pull/374#discussion_r120739474,0,modified,1,1,2
76384,https://api.github.com/repos/stripe/stripe-java,18450942,330,32041691,86189947,4,"Hah, sorry for the nit, but just check leading whitespace here again (tabs).",547087598,2016-11-02 16:54:52 UTC,Clarify,2,1,3,64,0,5,23113967,MEMBER,False,2016-11-02T16:59:25Z,https://github.com/stripe/stripe-java/pull/330#discussion_r86189947,1,added,22,0,22
76384,https://api.github.com/repos/stripe/stripe-java,35231919,453,32041691,169504053,37,"Nit, but can we use `tu_123` instead? It's a convention that's at least starting to be established.",922927518,2018-02-21 00:28:18 UTC,Reject,6,16,1,491,0,6,23086931,MEMBER,False,2018-02-21T17:50:14Z,https://github.com/stripe/stripe-java/pull/453#discussion_r169504053,Not Available,Not Available,Not Available,Not Available,Not Available
76384,https://api.github.com/repos/stripe/stripe-java,5595882,130,128223,22009852,118,Please check & throw an explicit exception for nullity,196226418,2014-12-17 21:25:19 UTC,Other,1,11,1,413,40,10,679197,CONTRIBUTOR,False,2014-12-18T20:36:10Z,https://github.com/stripe/stripe-java/pull/130#discussion_r22009852,Not Available,Not Available,Not Available,Not Available,Not Available
76384,https://api.github.com/repos/stripe/stripe-java,13963563,283,7942,60063487,26,"Just in the interest of convention, would you mind adding setters for these as well? (e.g. `setAlipayAccount`) They won't be used in any production paths, but could be useful for testing and such.",427663554,2016-04-18 14:05:05 UTC,Clarify,6,3,1,197,1,3,96890,CONTRIBUTOR,False,2016-04-18T15:23:10Z,https://github.com/stripe/stripe-java/pull/283#discussion_r60063487,Not Available,Not Available,Not Available,Not Available,Not Available
76384,https://api.github.com/repos/stripe/stripe-java,8918114,206,918752,37562564,26,"yes, the default impl is returning a null PasswordAuthentication. and i've verified.
```
scala> import java.net._
import java.net._
scala> import com.stripe._
import com.stripe._
scala> import com.stripe.model._
import com.stripe.model._
scala> val m = new java.util.HashMap[String, Object]
m: java.util.HashMap[String,Object] = {}
scala> m.put(""description"", ""xbwu.enable.proxy.test"")
res0: Object = null
scala> Stripe.apiKey=""sk_test_...""
Stripe.apiKey: String = sk_test_...
scala> Stripe.setConnectionProxy(new Proxy(Proxy.Type.HTTP, new InetSocketAddress(""localhost"", 3128)))
scala> Customer.create(m)
com.stripe.exception.APIConnectionException: IOException during API request to Stripe (https://api.stripe.com): Unable to tunnel through proxy. Proxy returns ""HTTP/1.1 407 Proxy Authentication Required"" Please check your internet connection and try again. If this problem persists,you should check Stripe's service status at https://twitter.com/stripestatus, or let us know at support@stripe.com.
scala> Stripe.setProxyCredential(new PasswordAuthentication(""payment"", ""......"".toCharArray))
scala> Customer.create(m)
res12: com.stripe.model.Customer =
<com.stripe.model.Customer@1074821682 id=cus_6pcgy8R2GZ0D7w> JSON: {......}
scala> Stripe.setProxyCredential(null)
scala> Stripe.setConnectionProxy(new Proxy(Proxy.Type.HTTP, new InetSocketAddress(""192.168.199.199"", 3128)))
scala> Customer.create(m)
res29: com.stripe.model.Customer =
<com.stripe.model.Customer@589773472 id=cus_6pclJkgE5yM3N6> JSON: {......}
```
in my environment, localhost:3128 is tunneling to a proxy server which requires authorization, while 192.168.199.199:3128 is a proxy server doesn't need auth

",299344387,2015-08-20 16:15:52 UTC,Clarify,4,2,3,47,4,2,34893,CONTRIBUTOR,True,2015-08-20T18:15:52Z,https://github.com/stripe/stripe-java/pull/206#discussion_r37562564,2,modified,6,8,14
76384,https://api.github.com/repos/stripe/stripe-java,25467252,382,32041691,122030777,111,"So I think it's convention to have all models (even submodels) at the top level of the `model` package (for example, `EventData` and `ChargeOutcomeRule`). Just to keep inline with that pattern, I think we should rename this to something like `EphemeralKeyAssociatedObject`and put it there.",714115760,2017-06-14 18:37:24 UTC,Clarify,3,2,7,283,3,6,23323746,MEMBER,False,2017-06-15T00:57:59Z,https://github.com/stripe/stripe-java/pull/382#discussion_r122030777,3,modified,4,0,4
76384,https://api.github.com/repos/stripe/stripe-java,18312166,328,7942,85590216,30,"And similarly here. e.g. ""Check if the JSON data is an object. If it is, it's an indication that the field has been expanded in the response.""",543959005,2016-10-28 18:53:31 UTC,Statement,9,20,18,1274,260,9,23113967,CONTRIBUTOR,False,2016-11-01T20:26:41Z,https://github.com/stripe/stripe-java/pull/328#discussion_r85590216,13,modified,3,4,7
76384,https://api.github.com/repos/stripe/stripe-java,2777046,55,373987,8808910,4,our currencies are lowercase,80785261,2014-01-11 04:18:42 UTC,Statement,2,1,2,9,2,3,139962,CONTRIBUTOR,False,2014-01-11T07:57:15Z,https://github.com/stripe/stripe-java/pull/55#discussion_r8808910,0,modified,2,1,3
76384,https://api.github.com/repos/stripe/stripe-java,5595882,130,128223,22009413,20,"It looks like you're not modifying these lines.     To add a file by hunk, use git interactive mode (`git add -p`)",196226418,2014-12-17 21:18:45 UTC,Clarify,1,11,1,413,40,10,679197,CONTRIBUTOR,False,2014-12-18T20:36:10Z,https://github.com/stripe/stripe-java/pull/130#discussion_r22009413,Not Available,Not Available,Not Available,Not Available,Not Available
76384,https://api.github.com/repos/stripe/stripe-java,21389423,346,34112337,101567576,35,"Assertion order reversed on both of these assertions. Should be `assertEquals(expect, actual)` http://junit.sourceforge.net/javadoc/org/junit/Assert.html#assertEquals(java.lang.Object, java.lang.Object)",619397286,2017-02-16 16:44:21 UTC,Other,7,7,1,88,1,4,23105990,CONTRIBUTOR,False,2017-02-16T18:37:51Z,https://github.com/stripe/stripe-java/pull/346#discussion_r101567576,Not Available,Not Available,Not Available,Not Available,Not Available
76384,https://api.github.com/repos/stripe/stripe-java,5595882,130,128223,22010474,35,"Can you implement hashCode && equals on the `FileUpload` class, then:    1. Remove URL and any other dynamic fields - check that they match a regex.  2. call `assertEquals` on the two `FileUpload` objects",196226418,2014-12-17 21:33:29 UTC,Clarify,1,11,1,413,40,10,679197,CONTRIBUTOR,False,2014-12-18T20:36:10Z,https://github.com/stripe/stripe-java/pull/130#discussion_r22010474,Not Available,Not Available,Not Available,Not Available,Not Available
76384,https://api.github.com/repos/stripe/stripe-java,5595882,130,128223,22009794,5,"Per IRL, I meant to say `uploadApiBase`. This is fine too, but unrelated.",196226418,2014-12-17 21:24:29 UTC,Clarify,1,11,1,413,40,10,679197,CONTRIBUTOR,False,2014-12-18T20:36:10Z,https://github.com/stripe/stripe-java/pull/130#discussion_r22009794,Not Available,Not Available,Not Available,Not Available,Not Available
76384,https://api.github.com/repos/stripe/stripe-java,5595882,130,128223,22009759,121,"> ""Empty Stripe apiBase specified!""",196226418,2014-12-17 21:24:02 UTC,Other,1,11,1,413,40,10,679197,CONTRIBUTOR,False,2014-12-18T20:36:10Z,https://github.com/stripe/stripe-java/pull/130#discussion_r22009759,Not Available,Not Available,Not Available,Not Available,Not Available
76384,https://api.github.com/repos/stripe/stripe-java,35231919,453,41385502,169456620,10,I think the convention from some of @jkakar-stripe PRs has been to alphabetize these but leave `id` and `object` on top?,922822677,2018-02-20 20:57:22 UTC,Clarify,6,16,1,491,0,6,23086931,NONE,False,2018-02-21T17:50:14Z,https://github.com/stripe/stripe-java/pull/453#discussion_r169456620,Not Available,Not Available,Not Available,Not Available,Not Available
37843,https://api.github.com/repos/DSpace/DSpace,691127,101,146836,1853990,13,"@KevinVdV, one minor comment.

I'm assuming that we should also remove the ""VersionHistoryForm.title"" and ""VersionHistoryForm.trail"" from the corresponding i18n messages.xml file? 
https://github.com/DSpace/DSpace/blob/master/dspace-xmlui/src/main/webapp/i18n/messages.xml#L2259",18495681,2012-10-16 11:48:59 UTC,Clarify,0,2,2,0,20,2,483997,MEMBER,False,2012-10-17T10:34:39Z,https://github.com/DSpace/DSpace/pull/101#discussion_r1853990,0,modified,0,18,18
37843,https://api.github.com/repos/DSpace/DSpace,23384581,1707,75315,113958301,125,Is all this just to avoid mocking up an HttpServletRequest?,680690656,2017-04-28 15:34:19 UTC,whQuestion,13,3,8,770,381,9,611569,MEMBER,False,2017-05-03T09:15:59Z,https://github.com/DSpace/DSpace/pull/1707#discussion_r113958301,5,modified,63,31,94
37843,https://api.github.com/repos/DSpace/DSpace,6581083,884,5457573,26036860,47,I think that is still a problem with error ORA-00932 (direct compare CLOB and string - see above TODO comment) for oracle db. ,227866736,2015-03-09 13:00:14 UTC,Clarify,0,3,1,21,14,1,201026,CONTRIBUTOR,False,2015-03-09T21:17:00Z,https://github.com/DSpace/DSpace/pull/884#discussion_r26036860,Not Available,Not Available,Not Available,Not Available,Not Available
37843,https://api.github.com/repos/DSpace/DSpace,2463103,395,271753,7875789,43,I really wan't to avoid such code in jsp files. Please move the retrieve logic (line 49) to the step class and just retrieve the list from a request attribute,71336360,2013-11-23 13:58:11 UTC,Clarify,1,6,9,288,52,13,1537527,MEMBER,False,2013-11-25T16:40:13Z,https://github.com/DSpace/DSpace/pull/395#discussion_r7875789,3,modified,13,7,20
37843,https://api.github.com/repos/DSpace/DSpace,2463103,395,3841,7881181,50,"Maybe in the case of simple embargo (the focus is the submitter so I think that the submitter want to know if you have already setted the embargo or not) the review step for bitstream section shouldn't show any information about policies settings (because a custom policy type is ever added by default, imho the submitter don't want to know this information). Recall that in XMLUI no informations are showed for simple embargo (neither in advanced embargo form in the case of the bitstreams review section). Summarizing in the simple embargo only the access step review will contains the embargo date, if exist, otherwise null, and in the bitstream review section no information will be shown. In the case of the advanced embargo form the PR implementation is approved. What do you think about this solution? (note that the simple embargo form give the user the opportunity only to add a single custom policy with a start date to the item - in the access step - and to the bitstreams - in the upload step - instead in the advanced embargo form the user can add multiple custom policy associate to the groups)",71336360,2013-11-24 23:33:31 UTC,Clarify,1,6,9,288,52,13,1537527,CONTRIBUTOR,True,2013-11-25T16:40:13Z,https://github.com/DSpace/DSpace/pull/395#discussion_r7881181,3,modified,17,3,20
37843,https://api.github.com/repos/DSpace/DSpace,34053127,1931,146836,163933346,22,"In several places in the PR, it looks like you replace `ListUtils` with `Collections`, but leave the `import org.apache.commons.collections4.ListUtils` in place?  Is this on purpose, or should the `import` simply be removed here?",898554683,2018-01-25 18:47:52 UTC,nAnswer,8,6,4,79,78,49,483997,MEMBER,False,2018-07-18T15:34:16Z,https://github.com/DSpace/DSpace/pull/1931#discussion_r163933346,Not Available,Not Available,Not Available,Not Available,Not Available
37843,https://api.github.com/repos/DSpace/DSpace,2463103,395,271753,7875799,8,is there any reason to put this information in the submission info object instead of use a standard request attribute?,71336360,2013-11-23 14:03:34 UTC,nAnswer,1,6,9,288,52,13,1537527,MEMBER,False,2013-11-25T16:40:13Z,https://github.com/DSpace/DSpace/pull/395#discussion_r7875799,3,modified,7,0,7
37843,https://api.github.com/repos/DSpace/DSpace,29171942,1852,9348262,146594658,79,"If it is always 1, do we still need this method/class?",815982514,2017-10-24 15:15:45 UTC,ynQuestion,11,69,54,3436,1140,97,1537527,CONTRIBUTOR,False,2017-11-08T22:20:30Z,https://github.com/DSpace/DSpace/pull/1852#discussion_r146594658,40,modified,1,1,2
37843,https://api.github.com/repos/DSpace/DSpace,16811525,1509,271753,78824047,5,Not sure but the use of handle_id here looks strange to me.  I have also found this post on stackoverflow  http://stackoverflow.com/questions/27345133/use-column-name-instead-of-entity-property-in-jpql,491776171,2016-09-14 19:45:10 UTC,nAnswer,7,3,6,9,3,3,6109314,MEMBER,False,2016-09-19T17:37:51Z,https://github.com/DSpace/DSpace/pull/1509#discussion_r78824047,0,modified,1,1,2
37843,https://api.github.com/repos/DSpace/DSpace,266506,75,31455,1468943,30,"Apologies for not having time to go verify this on my own at the moment, but while I'm thinking about it, is the checking to make sure this group isn't assigned elsewhere in the repository done inside Group.delete()?",7407259,2012-08-27 19:26:36 UTC,Clarify,4,2,2,130,37,12,611569,MEMBER,False,2012-08-28T13:53:27Z,https://github.com/DSpace/DSpace/pull/75#discussion_r1468943,0,modified,53,5,58
37843,https://api.github.com/repos/DSpace/DSpace,2361326,372,283631,7343773,23,I just tried this out and e.getMessage returned null. ,68093214,2013-10-31 13:57:53 UTC,Statement,0,9,1,13,5,1,483997,MEMBER,True,2013-10-31T14:57:53Z,https://github.com/DSpace/DSpace/pull/372#discussion_r7343773,0,modified,13,5,18
37843,https://api.github.com/repos/DSpace/DSpace,34008065,1929,9348262,164707238,129,I think that if-tests `if (idx == to && to<from)` and `if (idx == to && to>from)` can be collapsed to `if (idx == to)` because the code inside the if-test is the same.,902774829,2018-01-30 11:02:12 UTC,Clarify,8,78,135,8051,5837,179,1892926,CONTRIBUTOR,False,2018-01-31T10:52:27Z,https://github.com/DSpace/DSpace/pull/1929#discussion_r164707238,Not Available,Not Available,Not Available,Not Available,Not Available
37843,https://api.github.com/repos/DSpace/DSpace,16397972,1497,146836,75541847,8,"Minor note... you can strip out all these comments, as they don't need to be in the code itself (and they just describe why you changed the below line).      Instead, if you want to explain this difference, you can do so in the PR description/comments.",496736119,2016-08-19 19:51:06 UTC,Clarify,3,5,2,1,1,1,483997,MEMBER,False,2016-08-22T14:41:35Z,https://github.com/DSpace/DSpace/pull/1497#discussion_r75541847,0,modified,5,1,6
37843,https://api.github.com/repos/DSpace/DSpace,9077308,1035,146837,38097070,7,Oooops.... this was from another change I was working on that is completely untested & has nothing to do with the removal of the BundleBItstream object. Reverted this change in a new commit.,306635224,2015-08-27 11:54:42 UTC,nAnswer,9,5,6,418,687,93,1479750,MEMBER,True,2015-09-18T14:25:36Z,https://github.com/DSpace/DSpace/pull/1035#discussion_r38097070,Not Available,Not Available,Not Available,Not Available,Not Available
37843,https://api.github.com/repos/DSpace/DSpace,6581083,884,5457573,26047173,47,"I agree. I tried the oracle string conversion functions for VARCHAR2, but without success. Always ended with an error ORA-00932. I think that is no way to use identical code for both DBMS, except change datatype CLOB to VARCHAR2 of column TEXT_VALUE of table METADATAVALUE.

I think that better solution for oracle will be:
```sql
sql += ""dbms_lob.compare(TEXT_VALUE, '"" + metadataEntry.getValue() + ""') = 0 AND "";
```
or maybe
```sql
sql += ""dbms_lob.compare(TEXT_VALUE, to_clob('"" + metadataEntry.getValue() + ""')) = 0 AND "";
```",227866736,2015-03-09 14:48:58 UTC,Clarify,0,3,1,21,14,1,201026,CONTRIBUTOR,False,2015-03-09T21:17:00Z,https://github.com/DSpace/DSpace/pull/884#discussion_r26047173,Not Available,Not Available,Not Available,Not Available,Not Available
37843,https://api.github.com/repos/DSpace/DSpace,12768807,1330,146837,55347783,50,String isn't properly closed.,400437901,2016-03-08 11:37:59 UTC,Statement,3,8,3,17,17,1,1479750,MEMBER,False,2016-04-23T20:03:32Z,https://github.com/DSpace/DSpace/pull/1330#discussion_r55347783,0,modified,17,17,34
37843,https://api.github.com/repos/DSpace/DSpace,1452185,212,271753,4675659,25,this should be retrieved as attribute attached to the request (set it in the servlet side),40162040,2013-06-13 07:52:12 UTC,Statement,2,4,1,2161,298,34,Not Available,MEMBER,False,2013-06-13T09:52:12Z,https://github.com/DSpace/DSpace/pull/212#discussion_r4675659,0,modified,23,1,24
37843,https://api.github.com/repos/DSpace/DSpace,30706965,1881,9348262,154659744,121,"I think that currently we synchronise our threads a bit too much. I think this results in all REST API calls to go sequentially through this lock. Additionally, we might think about not checking Flyway for each and every REST API call. But I'll take that discussion to another ticket. I've reverted the change here.",845433232,2017-12-04 14:19:53 UTC,Clarify,6,6,44,8466,374,150,1537527,CONTRIBUTOR,True,2017-12-13T22:39:23Z,https://github.com/DSpace/DSpace/pull/1881#discussion_r154659744,Not Available,Not Available,Not Available,Not Available,Not Available
37843,https://api.github.com/repos/DSpace/DSpace,13462660,1344,146836,57953353,34,"@bram-atmire : one thing I just realized.  The configs in `local.cfg.EXAMPLE` are commented out on purpose (because the defaults all reside in dspace.cfg, and *everything* is optional in `local.cfg`).  So, this PR likely needs also change default settings in dspace.cfg.  Otherwise, if a config isn't specified in your local.cfg, the existing defaults in dspace.cfg will be in affect.",416469081,2016-03-30 19:59:49 UTC,Clarify,4,6,2,24,24,2,Not Available,MEMBER,False,2016-03-30T20:12:42Z,https://github.com/DSpace/DSpace/pull/1344#discussion_r57953353,0,modified,12,12,24
37843,https://api.github.com/repos/DSpace/DSpace,21687672,1653,578729,103271630,18,"In my hurry to recreate this PR, it looks like I merged changes incorrectly.  Thanks for catching this.",630672566,2017-02-27 18:05:11 UTC,Statement,2,3,16,39,7,6,Not Available,CONTRIBUTOR,True,2017-02-27T21:41:46Z,https://github.com/DSpace/DSpace/pull/1653#discussion_r103271630,2,modified,6,12,18
37843,https://api.github.com/repos/DSpace/DSpace,30372953,1873,271753,148113720,44,as the concept of session has been completely withdrawn (the SessionService interface was deleted) it should be better to change the method signature,823677668,2017-10-31 20:11:29 UTC,Statement,10,4,43,2846,1134,69,1537527,MEMBER,False,2017-11-23T11:31:32Z,https://github.com/DSpace/DSpace/pull/1873#discussion_r148113720,Not Available,Not Available,Not Available,Not Available,Not Available
37843,https://api.github.com/repos/DSpace/DSpace,4558336,629,75315,17371828,73,DatabaseManager.isOracle(),156153265,2014-09-10 14:26:07 UTC,Emotion,4,12,7,2718,1680,63,Not Available,MEMBER,False,2014-09-24T13:24:18Z,https://github.com/DSpace/DSpace/pull/629#discussion_r17371828,0,modified,118,84,202
37843,https://api.github.com/repos/DSpace/DSpace,36397586,1985,146836,174799797,15,"Silly question, perhaps, but why did you choose this version? 

As best as I can tell, it looks like `hibernate-validator-cdi` doesn't follow the same versioning as Hibernate ORM.  I know we use Hibernate `5.2.8.Final`, but I'm not sure that means we need to use 5.2 of Validator-CDI.

Reading the Validator docs, it looks like version `5.4.x` has the same compatibility as `5.2.x`, but is newer: 
* http://hibernate.org/validator/releases/5.4/
* http://hibernate.org/validator/releases/5.2/

The most recent Validator is 6.0.x, but that looks to require Bean Validation 2.0 (which is a newer standard, and requires Java 8).  Since `master` also requires Java 8, I actually wonder if we could even jump to using this version?
* http://hibernate.org/validator/releases/6.0/

In any case, we might want to move the version of `hibernate-validator-cdi` into the Parent POM, alongside the Java version and Hibernate version: https://github.com/DSpace/DSpace/blob/master/pom.xml#L34   Otherwise, I worry we'll forget to update this whenever we update other dependencies.",945655468,2018-03-15 14:23:27 UTC,Clarify,0,2,2,19,1,2,483997,MEMBER,False,2018-03-15T14:59:02Z,https://github.com/DSpace/DSpace/pull/1985#discussion_r174799797,0,modified,11,1,12
37843,https://api.github.com/repos/DSpace/DSpace,23571043,1714,146836,111984490,10,Not sure I understand the purpose to this TODO?  Did you mean to add an `@Override` here?,672882426,2017-04-18 15:25:30 UTC,Clarify,3,2,1,65,25,7,1111057,MEMBER,False,2017-04-18T16:12:50Z,https://github.com/DSpace/DSpace/pull/1714#discussion_r111984490,Not Available,Not Available,Not Available,Not Available,Not Available
37843,https://api.github.com/repos/DSpace/DSpace,25235405,1766,146836,121220451,206,"Ok, makes sense now. I didn't realize the scale of the processing time here. We should just make this clear in the documentation, and also make it clear how to set `num-rec` to ""all"" (assuming that is also possible and assuming you understand the risks of doing so).",711248472,2017-06-09 20:52:52 UTC,Clarify,12,22,20,742,0,2,Not Available,MEMBER,False,2017-06-13T21:59:51Z,https://github.com/DSpace/DSpace/pull/1766#discussion_r121220451,12,modified,34,18,52
37843,https://api.github.com/repos/DSpace/DSpace,18616402,1563,578729,123349182,49,"I validated the issue that I reported above.  When a user has ADMIN rights to both collections and communities, the location search is corrupted.

> )+OR+location:(+mfc564c62-b178-4d8b-8789-995e3e7e5377+OR+m40249564-ea3a-4bdc-86fd-21cf6b554187ld65b663c-647c-4a4f-9737-671af7f0c8ab+)
",551291522,2017-06-21 19:52:55 UTC,nAnswer,3,4,1,40,39,1,Not Available,CONTRIBUTOR,False,2017-06-21T19:52:55Z,https://github.com/DSpace/DSpace/pull/1563#discussion_r123349182,0,modified,40,39,79
37843,https://api.github.com/repos/DSpace/DSpace,8921336,1025,146837,37500121,146,"I think that we will get an ""ConcurrentModificationException"" here. Because the ""BundleBitstream"" list is persisted, so when we delete an item from a list we are iterating it will alter the list.
The best way to fix this is by using an iterator:
Bitstream bs = result.getBitstream();
Iterator<BundleBitstream> b2bs = bs.getBundles().iterator();
while (b2bs.hasNext()) {
	BundleBitstream bundleBitstream = b2bs.next();
	b2bs.remove();
	Bundle bundle = bundleBitstream.getBundle();
	bundleService.removeBitstream(sc.getContext(), bundle, bs);
	bundleService.update(sc.getContext(), bundle);
}",299390820,2015-08-20 04:59:44 UTC,Clarify,6,12,5,11611,10304,77,1479750,MEMBER,False,2015-08-26T21:51:49Z,https://github.com/DSpace/DSpace/pull/1025#discussion_r37500121,Not Available,Not Available,Not Available,Not Available,Not Available
37843,https://api.github.com/repos/DSpace/DSpace,8921336,1025,313997,37710908,32,"It does, thanks @KevinVdV! I've amended my pull request.",299463279,2015-08-23 19:44:33 UTC,Emphasis,6,12,5,11611,10304,77,1479750,MEMBER,True,2015-08-26T21:51:49Z,https://github.com/DSpace/DSpace/pull/1025#discussion_r37710908,Not Available,Not Available,Not Available,Not Available,Not Available
37843,https://api.github.com/repos/DSpace/DSpace,23042848,1694,1201813,113895968,136,"For a moment I thought if we would need to be able to cache authorizations for groups too. But a context is bundled to a request and that is always run by one EPerson only. Following, caching authorizations for groups wouldn't help anyone.",661332352,2017-04-28 10:08:36 UTC,Clarify,17,22,21,1660,176,51,611569,MEMBER,False,2017-05-04T15:14:28Z,https://github.com/DSpace/DSpace/pull/1694#discussion_r113895968,0,modified,70,19,89
37843,https://api.github.com/repos/DSpace/DSpace,10769167,1194,760650,47333135,19,Still needs some handling of the context so it doesn't leak on exception.,352096110,2015-12-11 08:59:59 UTC,Statement,11,1,1,27,3,4,Not Available,CONTRIBUTOR,False,2015-12-11T08:59:59Z,https://github.com/DSpace/DSpace/pull/1194#discussion_r47333135,0,modified,23,0,23
37843,https://api.github.com/repos/DSpace/DSpace,5552597,801,199480,46430037,240,"+1 refactoring into a method, it's a good suggestion",196901531,2015-12-02 15:44:34 UTC,Statement,17,17,21,535,42,8,483997,MEMBER,False,2016-01-22T17:55:36Z,https://github.com/DSpace/DSpace/pull/801#discussion_r46430037,10,modified,183,22,205
37843,https://api.github.com/repos/DSpace/DSpace,5781444,820,146836,22733399,1,"@mhwood - I do agree with this in concept. Unfortunately though, our existing Test Framework doesn't seem to support this. Simply renaming the class to ""DSpaceAIPDisseminateIngestIT"" seems to cause it to be entirely ignored so it never gets executed.

So, as discussed in IRC, it seems like we'd need further rework / cleanup of our Test Framework to support this idea. Currently all our other Integration tests seem to be named ""*IntegrationTest"", e.g. `AbstractIntegrationTest`, `CommunityCollectionIntegrationTest`.",203830998,2015-01-09 17:32:38 UTC,Clarify,3,2,8,1259,75,10,611569,MEMBER,True,2015-01-09T18:48:56Z,https://github.com/DSpace/DSpace/pull/820#discussion_r22733399,6,modified,181,55,236
16827424,https://api.github.com/repos/grpc/grpc-java,19706165,2513,5551325,92240902,94,no need for this.  It should be implicit.,575297378,2016-12-13 19:00:54 UTC,Statement,1,24,4,480,0,3,5067076,MEMBER,False,2016-12-20T22:37:37Z,https://github.com/grpc/grpc-java/pull/2513#discussion_r92240902,0,added,336,0,336
16827424,https://api.github.com/repos/grpc/grpc-java,9118649,961,6773014,38795166,45,should throw if null,307025093,2015-09-04 19:19:42 UTC,Statement,4,30,1,515,0,11,2811396,CONTRIBUTOR,False,2015-09-09T18:06:45Z,https://github.com/grpc/grpc-java/pull/961#discussion_r38795166,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,15799952,2052,5551325,71196345,22,I thought the purpose was to make sure `write` was called on the proper thread.  Is that not the primary purpose?,478208129,2016-07-18 17:58:20 UTC,Clarify,8,13,1,34,32,2,8943572,MEMBER,True,2016-07-18T17:58:20Z,https://github.com/grpc/grpc-java/pull/2052#discussion_r71196345,0,modified,18,9,27
16827424,https://api.github.com/repos/grpc/grpc-java,22478073,2839,1014305,107783176,96,Make the GET asciistring a constant.,647816079,2017-03-23 21:02:15 UTC,Statement,3,32,1,306,51,11,10237908,MEMBER,False,2017-03-30T21:24:52Z,https://github.com/grpc/grpc-java/pull/2839#discussion_r107783176,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,33892801,3988,1014305,163372933,3,"That should normally be user-specific, not something that comes from the repository. So we'll want to do something different.",895874446,2018-01-23 20:51:43 UTC,Statement,5,10,3,7,6,8,Not Available,MEMBER,False,2018-01-23T21:46:18Z,https://github.com/grpc/grpc-java/pull/3988#discussion_r163372933,1,modified,0,1,1
16827424,https://api.github.com/repos/grpc/grpc-java,32144857,3839,2489413,155638247,157,"I don't get it. More than one stream can have this set to true, yes, but only one of them can commit successfully, how would it cause us to call closed() more than once?",857895056,2017-12-07 20:55:57 UTC,Clarify,4,67,17,287,12,7,4779759,MEMBER,True,2018-01-22T18:08:10Z,https://github.com/grpc/grpc-java/pull/3839#discussion_r155638247,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,19693327,2526,2489413,92907196,18,move `getAttributes()` into one of negotiatorHandler's methods instead,575159265,2016-12-17 00:16:14 UTC,Clarify,3,27,5,167,11,14,4779759,MEMBER,True,2017-01-18T01:40:37Z,https://github.com/grpc/grpc-java/pull/2526#discussion_r92907196,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,25399954,3086,5551325,128887981,54,"Another alternative would be to nest the `MethodDescriptorSupplier`  class as an inner class of the `FileDescriptorSupplier` class, and let it capture the fields and methods.",719404301,2017-07-22 03:19:36 UTC,nAnswer,14,25,3,602,44,18,Not Available,MEMBER,False,2017-08-25T22:32:58Z,https://github.com/grpc/grpc-java/pull/3086#discussion_r128887981,1,modified,6,3,9
16827424,https://api.github.com/repos/grpc/grpc-java,7594214,446,3664876,30624374,4,@vjpai could you take a look at my changes to this proto file?,260141281,2015-05-19 15:31:09 UTC,Statement,13,17,2,1281,644,11,Not Available,MEMBER,True,2015-05-20T15:02:36Z,https://github.com/grpc/grpc-java/pull/446#discussion_r30624374,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8388600,623,1014305,35015011,139,"Can you move the variant construction, rawFrameWriter assignment, setFrameWriter, and executor.execute lines out of the synchronized block? It appears that none of those need to be done while holding the lock, and it makes it less obvious what constraints are trying to be guaranteed.",280207184,2015-07-20 14:37:41 UTC,Clarify,3,33,1,402,181,3,1962333,MEMBER,False,2015-07-21T17:18:18Z,https://github.com/grpc/grpc-java/pull/623#discussion_r35015011,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,19709543,2530,6634728,94189315,597,You are right. I never thought of the race between termination and `ClientCall.start()`. I have reverted to the preexisting state and captured this case in #1981 ,586460237,2016-12-29 22:52:23 UTC,Clarify,1,41,15,2761,7,11,9053690,CONTRIBUTOR,True,2017-01-09T21:16:38Z,https://github.com/grpc/grpc-java/pull/2530#discussion_r94189315,7,modified,20,23,43
16827424,https://api.github.com/repos/grpc/grpc-java,7594214,446,1014305,30659936,296,Could we still implement this in the server? It doesn't seem good for the primary implementation of the server to be in the Util class and not in the server class.,260230596,2015-05-19 21:47:28 UTC,ynQuestion,13,17,2,1281,644,11,Not Available,MEMBER,False,2015-05-20T15:02:36Z,https://github.com/grpc/grpc-java/pull/446#discussion_r30659936,0,added,343,0,343
16827424,https://api.github.com/repos/grpc/grpc-java,19382692,2479,6634728,92910399,217,You would also need to verify each picker has the right subchannels and status.,575292520,2016-12-17 01:10:06 UTC,Continuer,12,139,32,1119,0,4,9053690,CONTRIBUTOR,False,2016-12-21T10:50:31Z,https://github.com/grpc/grpc-java/pull/2479#discussion_r92910399,16,modified,41,5,46
16827424,https://api.github.com/repos/grpc/grpc-java,11733297,1331,1014305,50754002,69,"This could probably just be a try-finally with `promise.setSuccess()`, right? That seems like it would ease the future handling here. I'm also uneasy about throwing the exception when the stream has already been closed.",378541606,2016-01-25 20:52:55 UTC,Clarify,15,8,6,70,38,5,Not Available,MEMBER,False,2016-01-26T16:14:10Z,https://github.com/grpc/grpc-java/pull/1331#discussion_r50754002,3,modified,26,20,46
16827424,https://api.github.com/repos/grpc/grpc-java,9699890,1100,7000520,41934948,11,The TODO above needs update.,322087511,2015-10-13 20:30:23 UTC,Clarify,1,6,2,127,74,2,2811396,CONTRIBUTOR,False,2015-10-14T20:55:11Z,https://github.com/grpc/grpc-java/pull/1100#discussion_r41934948,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,13893362,1677,6634728,60493681,204,This function is the same as the last one except for the descriptor type. Can it be a template just like `GrpcGetDocLinesForDescriptor()`?,430630149,2016-04-20 21:46:51 UTC,Statement,9,8,1,954,2,15,Not Available,CONTRIBUTOR,False,2016-04-22T14:22:51Z,https://github.com/grpc/grpc-java/pull/1677#discussion_r60493681,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7713596,491,1014305,31165014,19,"This list is mutable, so it shouldn't be in all caps.    Better would be wrap it with collections.unmodifiablelist",263344969,2015-05-27 16:29:04 UTC,yAnswer,2,2,1,7,35,2,1962333,MEMBER,False,2015-06-01T22:08:25Z,https://github.com/grpc/grpc-java/pull/491#discussion_r31165014,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7263220,338,3664876,29090700,5,Would it make sense to have `allocate(0)` behave the same way as `empty`?,249258454,2015-04-24 20:20:29 UTC,Other,4,49,14,488,3,6,Not Available,MEMBER,False,2015-04-29T20:21:15Z,https://github.com/grpc/grpc-java/pull/338#discussion_r29090700,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7263220,338,6773014,29094781,26,Done. Isn't checkstyle supposed to pick that up :/,249258454,2015-04-24 22:00:36 UTC,Reject,4,49,14,488,3,6,Not Available,CONTRIBUTOR,True,2015-04-29T20:21:15Z,https://github.com/grpc/grpc-java/pull/338#discussion_r29094781,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,12736343,1506,3402699,54909440,32,Is it guaranteed that the channel is setup and TLS handshake has completed before a stream can be created?,399758872,2016-03-03 16:54:27 UTC,ynQuestion,21,47,2,273,14,17,Not Available,MEMBER,False,2016-03-16T22:32:50Z,https://github.com/grpc/grpc-java/pull/1506#discussion_r54909440,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,15988840,2126,5551325,75358270,126,remove printlin,495503914,2016-08-18 18:05:20 UTC,Statement,10,117,1,400,1,6,8943572,MEMBER,False,2016-08-19T22:54:29Z,https://github.com/grpc/grpc-java/pull/2126#discussion_r75358270,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,35931931,4174,2667165,176577160,272,"Changed to byte[], this also made it easier to implement a custom InputStream that extends ByteArrayInputStream.",940630739,2018-03-22 21:25:58 UTC,nAnswer,2,21,4,615,223,5,2819812,CONTRIBUTOR,True,2018-03-23T00:59:38Z,https://github.com/grpc/grpc-java/pull/4174#discussion_r176577160,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,25196498,3064,6634728,121230628,76,"Per offline discussion, the deadlock issue with in-process transport is legit, while not the fault of this PR. I have filed #3084

However, even without #3084, using `synchronized` to make thread-safe calls to `ServerCall` and `ClientCall` is still prone to deadlock when in-process transport is used with direct executor:

- Thread1
  1. `SynchronizedClientCall.sendMessage()` (locks `SynchronizedClientCall.this`)
  1. `ServerCall.Listener` calls into application code, which calls `SynchronizedServerCall.close()` (locks `SynchronizedServerCall.this`)

- Thread2
  1. `SynchronizedServerCall.sendMessage()` (locks `SynchronizedServerCall.this`)
  1. `ClientCall.Listener` calls into application code, which calls `SynchronizedClientCall.close()` (locks `SynchronizedClientCall.this`)

This time, it's the two synchronized calls that are involved in the deadlock.

This can be considered application-level code, and if application does that and got deadlock, it's the application's fault. Application shouldn't do it, and it means **we should not do it either**.

Like the proposed solution for #3084, we could also use `ChannelExecutor` instead to provide the thread-safety. `ChannelExecutor` should probably be renamed.",709678558,2017-06-09 21:58:47 UTC,Clarify,1,32,8,405,20,4,2819812,CONTRIBUTOR,False,2017-06-13T15:41:41Z,https://github.com/grpc/grpc-java/pull/3064#discussion_r121230628,1,modified,2,2,4
16827424,https://api.github.com/repos/grpc/grpc-java,26959707,3289,5551325,129977509,19,I think this should be moved off.   It's weird to inherit `ATTR_SECURITY_LEVEL` if you implement CallCredentials.  ,747056500,2017-07-27 22:46:51 UTC,Clarify,3,14,5,25,6,5,2811396,MEMBER,False,2017-07-28T00:10:40Z,https://github.com/grpc/grpc-java/pull/3289#discussion_r129977509,0,modified,10,1,11
16827424,https://api.github.com/repos/grpc/grpc-java,16887760,2238,5551325,78416121,160,I put a comment saying that this is url encoded.  I think this line is the only thing shared between this function and the one below it.,509294533,2016-09-12 17:27:40 UTC,Clarify,9,40,1,371,59,5,8943572,MEMBER,True,2016-09-13T20:09:33Z,https://github.com/grpc/grpc-java/pull/2238#discussion_r78416121,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,15588077,1977,6174876,68612973,36,make these package private?,470198737,2016-06-27 16:49:55 UTC,ynQuestion,6,45,18,685,39,7,Not Available,COLLABORATOR,False,2016-07-07T23:21:00Z,https://github.com/grpc/grpc-java/pull/1977#discussion_r68612973,12,modified,2,4,6
16827424,https://api.github.com/repos/grpc/grpc-java,22810891,2858,1014305,108469246,165,This isn't protected against exceptions other than RuntimeException. It seems we would want it to deal with others.,656353557,2017-03-28 16:25:17 UTC,Clarify,2,7,1,418,87,3,8943572,MEMBER,False,2017-03-29T23:41:25Z,https://github.com/grpc/grpc-java/pull/2858#discussion_r108469246,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,21070008,2704,5551325,99713135,17,"This file is not particularly good about following the rule, but line continuation should be +4.  ",612481851,2017-02-06 23:37:30 UTC,Reject,5,7,2,12,2,2,Not Available,MEMBER,False,2017-02-06T23:53:21Z,https://github.com/grpc/grpc-java/pull/2704#discussion_r99713135,0,modified,7,4,11
16827424,https://api.github.com/repos/grpc/grpc-java,15886121,2089,1014305,72168419,321,Shouldn't this be put on the UI?,482532263,2016-07-26 00:13:35 UTC,Statement,1,21,1,1144,0,42,10237908,MEMBER,False,2016-08-03T21:53:01Z,https://github.com/grpc/grpc-java/pull/2089#discussion_r72168419,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,30722719,3656,2489413,148808448,182,uh... I take it back. It is subtle even in normal retry case.,825960534,2017-11-03 15:07:25 UTC,Statement,4,43,17,1382,22,6,4779759,MEMBER,True,2017-11-30T18:32:58Z,https://github.com/grpc/grpc-java/pull/3656#discussion_r148808448,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7543487,432,3664876,30358269,109,Ok ... I've changed to returning the buffering handler.,258199607,2015-05-14 18:17:53 UTC,Statement,6,18,5,143,38,7,Not Available,MEMBER,True,2015-05-14T22:30:05Z,https://github.com/grpc/grpc-java/pull/432#discussion_r30358269,0,modified,59,21,80
16827424,https://api.github.com/repos/grpc/grpc-java,16887760,2238,6174876,78446249,47,nit: there are two spaces between `marshaller.  Both`,511376879,2016-09-12 20:17:25 UTC,Clarify,9,40,1,371,59,5,8943572,COLLABORATOR,False,2016-09-13T20:09:33Z,https://github.com/grpc/grpc-java/pull/2238#discussion_r78446249,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,13707261,1649,9209972,59063680,4,"Ah, missed it. Thanks, added.",421631572,2016-04-08 17:49:36 UTC,Emphasis,6,16,1,67,31,19,2811396,COLLABORATOR,True,2016-04-08T17:56:48Z,https://github.com/grpc/grpc-java/pull/1649#discussion_r59063680,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,17034642,2262,120104,78691826,74,"style, but I sometimes use maybeGetMetric when result is nullable",512070930,2016-09-14 06:24:18 UTC,nAnswer,3,86,12,1778,308,73,9053690,CONTRIBUTOR,False,2016-10-06T23:43:56Z,https://github.com/grpc/grpc-java/pull/2262#discussion_r78691826,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,13677408,1642,1014305,58916041,121,"I'd feel better if we asserted i == storeCount * 2 at the end, for better detection of bugs.",420798151,2016-04-07 17:56:21 UTC,Clarify,6,14,1,33,25,1,8943572,MEMBER,False,2016-04-07T20:00:02Z,https://github.com/grpc/grpc-java/pull/1642#discussion_r58916041,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,30978355,3695,1014305,149837211,37,"What happens if you don't use a set? (say, a list instead?)",831609260,2017-11-09 00:24:55 UTC,Clarify,0,6,3,78,7,3,5067076,MEMBER,False,2017-11-09T22:45:31Z,https://github.com/grpc/grpc-java/pull/3695#discussion_r149837211,0,modified,30,2,32
16827424,https://api.github.com/repos/grpc/grpc-java,12736343,1506,1014305,56261408,31,"This class is in `internal`. We are free to change it on a whim. I'm fine with not changing the other call-sites in this PR, though. There are only a couple of users of it: `ClientCallImpl`, `ServerImpl`, and a (very hacky) test.",407225654,2016-03-15 23:50:48 UTC,nAnswer,21,47,2,273,14,17,Not Available,MEMBER,False,2016-03-16T22:32:50Z,https://github.com/grpc/grpc-java/pull/1506#discussion_r56261408,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,16103160,2140,5551325,78249766,85,should this be final?,509379924,2016-09-09 21:10:53 UTC,Statement,12,54,1,1188,308,17,2811396,MEMBER,False,2016-10-03T18:11:38Z,https://github.com/grpc/grpc-java/pull/2140#discussion_r78249766,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8745738,697,3664876,36659267,35,Should we also initiate graceful shutdown if we haven't already?,292937036,2015-08-10 15:31:02 UTC,Statement,2,16,6,62,80,4,2811396,MEMBER,False,2015-08-10T20:28:20Z,https://github.com/grpc/grpc-java/pull/697#discussion_r36659267,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,24658694,3019,2489413,118114592,61,"yes, one possibility is the application thread calling `notifyWhenStateChanged`, the other is the transport thread calling `updateChannelState`. Anyway, this Queue implementation was abandoned in favor of ArrayList. ",696267481,2017-05-23 21:45:28 UTC,nAnswer,9,81,10,342,37,5,4779759,MEMBER,True,2017-07-19T18:00:54Z,https://github.com/grpc/grpc-java/pull/3019#discussion_r118114592,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,14648422,1817,7147247,67078023,123,Is Android still the correct class name to use now?,464422624,2016-06-14 23:44:59 UTC,whQuestion,12,39,1,156,56,8,9046588,CONTRIBUTOR,False,2016-07-14T01:34:30Z,https://github.com/grpc/grpc-java/pull/1817#discussion_r67078023,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,35931931,4174,1014305,176532558,272,"Well, right now it is private code, so it seems it'd be premature for the current implementation (the earlier iteration looked different).",940630739,2018-03-22 18:44:59 UTC,Clarify,2,21,4,615,223,5,2819812,MEMBER,False,2018-03-23T00:59:38Z,https://github.com/grpc/grpc-java/pull/4174#discussion_r176532558,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,12233655,1409,5551325,52616060,15,"MetadataEntry is a private class, you won't be able to access it at all.    Also, ImmutableMap is too specific of a return value.  It should be a Map in any case.",388003541,2016-02-11 15:28:46 UTC,Clarify,7,5,1,10,0,1,2811396,MEMBER,False,2016-02-11T16:32:43Z,https://github.com/grpc/grpc-java/pull/1409#discussion_r52616060,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,9426544,1048,1014305,42295926,53,Rename to Factory and then rename Handle to LoadBalancer? Could rename start to newLoadBalancer.,331834068,2015-10-16 20:14:21 UTC,Statement,5,61,1,1511,214,29,9053690,MEMBER,False,2015-10-21T00:29:22Z,https://github.com/grpc/grpc-java/pull/1048#discussion_r42295926,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,16700982,2223,5551325,78056253,41,This probably needs a more thorough explanation of what safety means.,509194099,2016-09-08 17:53:11 UTC,Clarify,9,9,1,59,3,2,10237908,MEMBER,False,2016-09-08T23:57:38Z,https://github.com/grpc/grpc-java/pull/2223#discussion_r78056253,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,9442940,1072,6634728,40451011,193,Removed the last sentence.,315897922,2015-09-25 14:57:13 UTC,Statement,3,31,1,706,321,5,9053690,CONTRIBUTOR,True,2015-09-30T01:50:11Z,https://github.com/grpc/grpc-java/pull/1072#discussion_r40451011,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,25944867,3145,1014305,127883506,67,"Previously the code notified the application immediately, right? Why isn't this `true`?",724578548,2017-07-18 05:09:29 UTC,whQuestion,4,55,3,1386,456,40,5067076,MEMBER,False,2017-08-11T22:59:25Z,https://github.com/grpc/grpc-java/pull/3145#discussion_r127883506,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,25944867,3145,1014305,128863755,129,It being missed on clients is an oversight (probably lost in an earlier refactoring). I've filed https://github.com/grpc/grpc-java/issues/3264,724578548,2017-07-21 21:20:31 UTC,Statement,4,55,3,1386,456,40,5067076,MEMBER,False,2017-08-11T22:59:25Z,https://github.com/grpc/grpc-java/pull/3145#discussion_r128863755,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,13679378,1641,5551325,59053620,107,"Make the Charset a constant, so you can reuse it below.",421630517,2016-04-08 16:39:15 UTC,Statement,9,61,6,2988,59,10,Not Available,MEMBER,False,2016-04-12T14:43:29Z,https://github.com/grpc/grpc-java/pull/1641#discussion_r59053620,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,16017796,2137,1014305,73908731,266,"I wouldn't try to remove `inUseStateAggregator`. I don't see much gain to be had there. Instead, I'd focus on making `exitIdleMode` able to avoid the lock in heavy-use scenarios, i.e., when it doesn't need to do anything because the channel is already in-use.",487325932,2016-08-08 16:38:12 UTC,Clarify,0,9,1,59,122,1,Not Available,MEMBER,False,2016-08-08T16:38:12Z,https://github.com/grpc/grpc-java/pull/2137#discussion_r73908731,0,modified,59,122,181
16827424,https://api.github.com/repos/grpc/grpc-java,33132617,3915,5551325,159747261,10,"Can't put it here, it would be public.",880021396,2018-01-04 20:25:55 UTC,Statement,1,1,1,14,3,3,4779759,MEMBER,False,2018-01-04T21:28:46Z,https://github.com/grpc/grpc-java/pull/3915#discussion_r159747261,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,6647549,197,1014305,26390718,45,"IndexOutOfBoundsException seems more appropriate. As a second choice, IllegalArgumentException could have worked better than RuntimeException.",229419033,2015-03-13 13:44:13 UTC,Other,4,28,1,1167,272,43,Not Available,MEMBER,False,2015-03-13T19:58:37Z,https://github.com/grpc/grpc-java/pull/197#discussion_r26390718,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,32144857,3839,1014305,155614509,63,"This looks racy, since these are updated independently. It looks like it'd be very hard to fix without a lock.",857895056,2017-12-07 19:16:45 UTC,Clarify,4,67,17,287,12,7,4779759,MEMBER,False,2018-01-22T18:08:10Z,https://github.com/grpc/grpc-java/pull/3839#discussion_r155614509,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7564398,443,1014305,30536642,86,Same as above. Should be an else.,259685004,2015-05-18 16:52:14 UTC,Clarify,7,5,1,73,30,3,1962333,MEMBER,False,2015-05-18T21:19:01Z,https://github.com/grpc/grpc-java/pull/443#discussion_r30536642,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,32933532,3904,2489413,160263680,4,"One option may be: keep your code and add 
```java
activeTransport = null;
pendingTransport = null;
addressIndex = 0;
```
 
after
```java
savedActiveTransport = activeTransport;
savedPendingTransport = pendingTransport;
```

Another option: call `InternalSubchannel.shutdown()` and  change the behavior of LB so that is does not ignore it completely (LB ignored it because of the assumptions you mentioned which were the only two cases we knew at that time, this is never a hard requirement, now that we have a new case, maybe it should be changed.)",875433602,2018-01-08 21:43:00 UTC,Clarify,1,15,5,79,14,3,5067076,MEMBER,False,2018-02-09T01:54:31Z,https://github.com/grpc/grpc-java/pull/3904#discussion_r160263680,0,modified,22,0,22
16827424,https://api.github.com/repos/grpc/grpc-java,8324415,819,3664876,37122779,13,Weird ... I swear I deleted this in another PR.  Possibly one I haven't submitted yet?,279328450,2015-08-14 19:48:38 UTC,Clarify,1,2,2,9,22,7,2811396,MEMBER,False,2015-08-14T21:54:03Z,https://github.com/grpc/grpc-java/pull/819#discussion_r37122779,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,33807978,3986,1014305,164898137,52,"Pass a string as well: `checkNotNull(retryPolicy, ""retryPolicy"")`    That string (any semi-unique string) is really helpful when the NPE occurs, as you no longer need to trust the line number.",903129972,2018-01-30 22:24:11 UTC,nAnswer,3,21,5,345,3,5,4779759,MEMBER,False,2018-01-31T01:13:38Z,https://github.com/grpc/grpc-java/pull/3986#discussion_r164898137,3,modified,4,5,9
16827424,https://api.github.com/repos/grpc/grpc-java,12108322,1395,1014305,52415441,234,If `shutdown == true` and `pendingStreams.isEmpty()` then `pendingStreams = null` and notify listener about termination.,385140903,2016-02-10 05:14:04 UTC,Clarify,4,19,1,929,257,22,9053690,MEMBER,False,2016-02-12T17:45:56Z,https://github.com/grpc/grpc-java/pull/1395#discussion_r52415441,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,13638091,1634,9209972,58939951,2,Updated.,420812766,2016-04-07 20:34:01 UTC,Statement,14,18,1,148,0,13,Not Available,COLLABORATOR,True,2016-04-08T00:23:39Z,https://github.com/grpc/grpc-java/pull/1634#discussion_r58939951,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,13638091,1634,9209972,58760061,8,I just left this one up for PR debate and have no opinions. Should I just remove this restriction then?,420299347,2016-04-06 18:45:15 UTC,Reject,14,18,1,148,0,13,Not Available,COLLABORATOR,True,2016-04-08T00:23:39Z,https://github.com/grpc/grpc-java/pull/1634#discussion_r58760061,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,9442940,1072,6634728,40451532,262,Changed to call `Thread.currentThread().interrupt()` if it's `InterruptedException`.,315897922,2015-09-25 15:02:10 UTC,Clarify,3,31,1,706,321,5,9053690,CONTRIBUTOR,True,2015-09-30T01:50:11Z,https://github.com/grpc/grpc-java/pull/1072#discussion_r40451532,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,14676761,1821,6634728,63441376,83,Better to note that further health check requests to this service will be responded with NOT_FOUND error.,446918642,2016-05-16 23:08:47 UTC,Clarify,6,42,3,1708,1,14,4779759,CONTRIBUTOR,False,2016-05-19T23:03:56Z,https://github.com/grpc/grpc-java/pull/1821#discussion_r63441376,0,added,96,0,96
16827424,https://api.github.com/repos/grpc/grpc-java,19709543,2530,6634728,93151713,759,"No we can't, because the helper is not accessible here.  We can, however, use `runSerialized` in place of `channelExecutor.executeLater()` in `LbHelperImpl`.",575340166,2016-12-20 00:44:27 UTC,nAnswer,1,41,15,2761,7,11,9053690,CONTRIBUTOR,True,2017-01-09T21:16:38Z,https://github.com/grpc/grpc-java/pull/2530#discussion_r93151713,1,modified,443,457,900
16827424,https://api.github.com/repos/grpc/grpc-java,22181058,2810,6634728,105517379,1,Add a notice here to say that the implementations are in the works and don't try to use it yet.,641587759,2017-03-11 00:43:08 UTC,Reject,1,1,2,234,0,1,5067076,CONTRIBUTOR,False,2017-03-13T17:12:33Z,https://github.com/grpc/grpc-java/pull/2810#discussion_r105517379,0,added,230,0,230
16827424,https://api.github.com/repos/grpc/grpc-java,16333754,2171,5500733,75160100,11,Suggest moving this tag above the comment above.  ,494765137,2016-08-17 16:44:05 UTC,Clarify,2,3,1,5,0,2,2811396,MEMBER,False,2016-09-12T23:50:55Z,https://github.com/grpc/grpc-java/pull/2171#discussion_r75160100,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,28458358,3452,5551325,138173982,180,"Actually, after investigating further, you are right.  I have included a best effort mechanism to log to the console in the event of shutdown.    ",779224081,2017-09-11 19:55:03 UTC,Clarify,3,14,5,248,19,3,8943572,MEMBER,True,2017-09-14T21:01:44Z,https://github.com/grpc/grpc-java/pull/3452#discussion_r138173982,0,modified,91,12,103
16827424,https://api.github.com/repos/grpc/grpc-java,18311973,2386,5551325,88361751,48,"Optional, but I would have picked LinkedHashMap.  Requiring that they be sorted is asking a lot.  Just being consistent is good enough.",553811585,2016-11-17 00:18:33 UTC,Reject,11,75,6,13269,8,52,5067076,MEMBER,False,2016-11-28T18:48:22Z,https://github.com/grpc/grpc-java/pull/2386#discussion_r88361751,3,modified,6,4,10
16827424,https://api.github.com/repos/grpc/grpc-java,7955256,530,1014305,33398757,291,Discussed offline. It's because we have our own assertEquals for MessageNano.,275415089,2015-06-26 19:44:27 UTC,Statement,9,52,1,2392,0,22,1962333,MEMBER,False,2015-06-26T22:31:54Z,https://github.com/grpc/grpc-java/pull/530#discussion_r33398757,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,32358934,3861,6634728,156539299,28,Please document that all fields are nullable.,862297342,2017-12-13 00:55:32 UTC,Statement,0,2,2,457,0,4,8943572,CONTRIBUTOR,False,2017-12-19T19:21:19Z,https://github.com/grpc/grpc-java/pull/3861#discussion_r156539299,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,16842829,2235,5551325,77733643,385,"I can't imagine this getting executed often, but I would hope that pointer equality would be the preferred way of checking.",507785185,2016-09-06 22:54:12 UTC,nAnswer,10,51,2,961,28,13,1388179,MEMBER,False,2016-09-09T14:06:57Z,https://github.com/grpc/grpc-java/pull/2235#discussion_r77733643,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8745738,697,3664876,36658591,31,"Just so I understand what you're trying to do here ... this is to capture any non HTTP/2 errors in the pipeline? In particular, startup-related errors I'm guessing?",292937036,2015-08-10 15:26:09 UTC,Emphasis,2,16,6,62,80,4,2811396,MEMBER,False,2015-08-10T20:28:20Z,https://github.com/grpc/grpc-java/pull/697#discussion_r36658591,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,17034642,2262,120104,78692014,83,"heh it will fail :) with NPE. there's some logic here that could use a comment, too",512070930,2016-09-14 06:25:32 UTC,Statement,3,86,12,1778,308,73,9053690,CONTRIBUTOR,False,2016-10-06T23:43:56Z,https://github.com/grpc/grpc-java/pull/2262#discussion_r78692014,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8897968,822,1014305,37648993,6,Remove authority here?,299424082,2015-08-21 14:01:27 UTC,ynQuestion,5,15,1,292,308,53,8943572,MEMBER,False,2015-08-24T18:41:26Z,https://github.com/grpc/grpc-java/pull/822#discussion_r37648993,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,32634924,3879,5551325,159566225,38,"These shouldn't be captures, but `<?, ?>`",868161597,2018-01-04 01:27:08 UTC,Other,1,38,10,418,46,7,2819812,MEMBER,False,2018-02-03T00:36:46Z,https://github.com/grpc/grpc-java/pull/3879#discussion_r159566225,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,9443130,1058,1014305,40480966,8,Make this class package-private.,315961653,2015-09-25 20:15:28 UTC,Continuer,11,16,2,4258,47,33,1962333,MEMBER,False,2015-10-15T23:38:00Z,https://github.com/grpc/grpc-java/pull/1058#discussion_r40480966,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7564203,442,1014305,30540977,6,I don't like the idea of us throwing an exception like this. The approach in #443 is much better.,259369858,2015-05-18 17:49:32 UTC,Statement,3,7,1,69,40,3,1962333,MEMBER,False,2015-05-19T17:27:40Z,https://github.com/grpc/grpc-java/pull/442#discussion_r30540977,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,13679378,1641,5551325,59048401,228,Any reason to not just let the exception bubble up?  It's in the throws declaration of the method sig.,421630517,2016-04-08 16:05:19 UTC,ynQuestion,9,61,6,2988,59,10,Not Available,MEMBER,False,2016-04-12T14:43:29Z,https://github.com/grpc/grpc-java/pull/1641#discussion_r59048401,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,15616315,1989,5551325,68789268,90,no need for `eq` if all the arguments are exact. ,470590070,2016-06-28 16:12:21 UTC,Reject,13,19,3,299,45,15,Not Available,MEMBER,False,2016-06-29T17:13:36Z,https://github.com/grpc/grpc-java/pull/1989#discussion_r68789268,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,32933532,3904,3695855,160209029,4,"The current API assumes that `InternalSubchannel.shutdown()` only occurs when the LB has discarded the subchannel or the managed channel itself is shutting down. See the Javadoc on `io.grpc.LoadBalancer#handleSubchannelState`. `InternalSubchannel.shutdown()` is purposefully ignored by the LB, so just invoking this method means that outgoing RPCs will still be sent to the shutdown subchannel.

We can change this behavior in the LB/somewhere else to allow just shutting down the `InternalSubchannel` directly and recovering properly, but this is a more extensive change than just shutting down the transports as done here. Thoughts?",875433602,2018-01-08 17:46:06 UTC,Clarify,1,15,5,79,14,3,5067076,CONTRIBUTOR,True,2018-02-09T01:54:31Z,https://github.com/grpc/grpc-java/pull/3904#discussion_r160209029,0,modified,22,0,22
16827424,https://api.github.com/repos/grpc/grpc-java,18707417,2416,7302811,87548742,14,I amended the change. Thx for reviewing!,553438968,2016-11-11 07:44:41 UTC,Emphasis,14,6,3,6,5,1,2811396,CONTRIBUTOR,True,2016-11-15T05:33:52Z,https://github.com/grpc/grpc-java/pull/2416#discussion_r87548742,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,30725885,3659,5551325,148916742,55,"optional: add a fine level log here.  We normally expect this to exist, even on Android.",826745271,2017-11-04 00:25:22 UTC,Clarify,0,15,5,192,3,3,2819812,MEMBER,False,2017-11-06T18:23:28Z,https://github.com/grpc/grpc-java/pull/3659#discussion_r148916742,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,24658694,3019,3350419,117931155,61,The same instance will run by 2 different threads?,696267481,2017-05-23 08:35:38 UTC,Other,9,81,10,342,37,5,4779759,NONE,False,2017-07-19T18:00:54Z,https://github.com/grpc/grpc-java/pull/3019#discussion_r117931155,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,12108322,1395,6634728,52651911,146,"Moved most of the transport listener calls into synchronized, except for in `shutdownNow()` where out-of-order execution is impossible.",385140903,2016-02-11 19:20:20 UTC,Clarify,4,19,1,929,257,22,9053690,CONTRIBUTOR,True,2016-02-12T17:45:56Z,https://github.com/grpc/grpc-java/pull/1395#discussion_r52651911,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,9109657,902,6773014,38338161,4,"Again odd, its used. See line 52",307835019,2015-08-31 15:50:31 UTC,Other,7,41,1,434,10,11,9046588,CONTRIBUTOR,True,2015-09-03T20:58:58Z,https://github.com/grpc/grpc-java/pull/902#discussion_r38338161,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,23445169,2910,2489413,111649956,51,why `%s: ` and `this`? It seems not in the same pattern as elsewhere.,670390481,2017-04-14 23:33:44 UTC,nAnswer,0,8,3,391,32,10,2811396,MEMBER,False,2017-04-17T18:48:34Z,https://github.com/grpc/grpc-java/pull/2910#discussion_r111649956,1,modified,16,3,19
16827424,https://api.github.com/repos/grpc/grpc-java,17787475,2329,1014305,84194858,112,This needs to happen earlier. connect() returns only after connect has completed. Ditto for TLS.,530264384,2016-10-20 00:29:23 UTC,Clarify,2,11,1,611,192,28,Not Available,MEMBER,False,2016-10-20T00:38:44Z,https://github.com/grpc/grpc-java/pull/2329#discussion_r84194858,0,modified,80,7,87
16827424,https://api.github.com/repos/grpc/grpc-java,9160044,1011,5551325,44472132,5,Or.... unless they are being used in auto generated code.   :/  This will probably break someone.,343837117,2015-11-10 21:03:26 UTC,Clarify,6,61,1,85,23,4,8943572,MEMBER,True,2015-11-10T22:04:29Z,https://github.com/grpc/grpc-java/pull/1011#discussion_r44472132,0,modified,2,1,3
16827424,https://api.github.com/repos/grpc/grpc-java,17002978,2258,1014305,78412996,6,"I believe the race is also pre-existing, since at any time obtainActiveTransport() can return the delayed transport and a new stream be created.",511362454,2016-09-12 17:10:17 UTC,nAnswer,1,4,1,6,1,1,9053690,MEMBER,False,2016-09-12T18:11:45Z,https://github.com/grpc/grpc-java/pull/2258#discussion_r78412996,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,16769340,2233,5551325,77705464,61,"In terms of API stability, I think having a higher barrier to entry is the key.   Marking classes as `@Internal` has worked so far, but this is the first time we are exposing something that could really break if someone started depending on it.  

I also toyed with the idea of making this hard in other ways, such as masking the return type, or giving it a weird name.  For example:

```
@Internal
public Object internalOnlyGetRawPath();
```

This would force consumers to cast it, and reduce the risk of having auto complete pick it up.  However, *our* own code would have to do the same thing, so anyone looking at it might get the idea that its okay.  With the reflect guard, there is no way to misinterpret the intent.  

This also conveniently works for internal constructors, where it is more difficult to change the name.

Thoughts?

",507440595,2016-09-06 19:49:55 UTC,Clarify,11,12,1,230,5,5,8943572,MEMBER,True,2016-09-07T21:41:16Z,https://github.com/grpc/grpc-java/pull/2233#discussion_r77705464,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,17034642,2262,28198170,81261746,4,"> I would much prefer an approach that didn't add a dependency but instead allowed me to hook into Atlas(the Netflix metrics library).

@jhspaybar Would you mind opening an issue at https://github.com/google/census-java to describe your use case and the type of API you would need for recording stats?",514746839,2016-09-30 00:28:13 UTC,Clarify,3,86,12,1778,308,73,9053690,CONTRIBUTOR,False,2016-10-06T23:43:56Z,https://github.com/grpc/grpc-java/pull/2262#discussion_r81261746,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,10467687,1207,1014305,45240354,121,Where did this come from. Is this new code?,347270268,2015-11-18 17:38:59 UTC,whQuestion,2,10,3,114,44,3,Not Available,MEMBER,False,2015-11-23T18:00:41Z,https://github.com/grpc/grpc-java/pull/1207#discussion_r45240354,1,modified,4,3,7
16827424,https://api.github.com/repos/grpc/grpc-java,17034642,2262,68019,79444003,44,"Especially since the default implementation is to no-op anyways, it'd be great if we could make the interface gRPC expects not be tied to Census.",514746839,2016-09-19 17:28:39 UTC,Clarify,3,86,12,1778,308,73,9053690,CONTRIBUTOR,False,2016-10-06T23:43:56Z,https://github.com/grpc/grpc-java/pull/2262#discussion_r79444003,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,6725573,218,6773014,26801323,7,Wanted to be explicit about it as I think we need a multiline script now. See latest commit.,233524026,2015-03-19 20:49:41 UTC,Statement,2,18,8,69,1,3,Not Available,CONTRIBUTOR,True,2015-03-19T23:46:36Z,https://github.com/grpc/grpc-java/pull/218#discussion_r26801323,2,modified,4,2,6
16827424,https://api.github.com/repos/grpc/grpc-java,9442940,1072,5551325,40450099,308,"Isn't this still a race?  After realStream is created on line 426, the stream might have already been started with headers sent.",315897922,2015-09-25 14:47:56 UTC,nAnswer,3,31,1,706,321,5,9053690,MEMBER,False,2015-09-30T01:50:11Z,https://github.com/grpc/grpc-java/pull/1072#discussion_r40450099,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,9160044,1011,5551325,39422597,75,If you look back a commit it did actually normalize.  I can change it back to be that way if you want.  ,307439123,2015-09-14 15:39:31 UTC,Statement,6,61,1,85,23,4,8943572,MEMBER,True,2015-11-10T19:20:19Z,https://github.com/grpc/grpc-java/pull/1011#discussion_r39422597,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,9160044,1011,5551325,39422706,77,Also char is how string internally supports its characters.  I think it ends being easier to reason about using chars instead of bytes.,307439123,2015-09-14 15:40:33 UTC,Clarify,6,61,1,85,23,4,8943572,MEMBER,True,2015-11-10T19:20:19Z,https://github.com/grpc/grpc-java/pull/1011#discussion_r39422706,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,14320328,1744,1014305,61582628,9,I think this status here was intended to go to the client. The server could then just received the `status` as-is (in `internalCancel()`).,436183063,2016-04-29 14:07:13 UTC,Statement,4,17,1,36,6,2,1388179,MEMBER,False,2016-04-29T17:38:46Z,https://github.com/grpc/grpc-java/pull/1744#discussion_r61582628,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,27194841,3305,120104,131289979,123,Nice though wll this assertion error raise on the correct thread? Maybe use a queue and assert during the test method?,752215320,2017-08-04 00:28:45 UTC,Clarify,0,6,1,592,167,11,8943572,CONTRIBUTOR,False,2017-08-04T00:30:33Z,https://github.com/grpc/grpc-java/pull/3305#discussion_r131289979,0,added,126,0,126
16827424,https://api.github.com/repos/grpc/grpc-java,10418960,1203,6773014,44851915,90,"Yes, here and elsewhere",346013584,2015-11-14 00:30:11 UTC,yAnswer,4,41,1,722,80,12,9046588,CONTRIBUTOR,True,2015-12-02T23:34:41Z,https://github.com/grpc/grpc-java/pull/1203#discussion_r44851915,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,29047522,3500,6634728,141181665,15,"nit: can we just use ""def""?",792863694,2017-09-26 20:55:22 UTC,Emphasis,1,3,9,68,0,1,2819812,CONTRIBUTOR,False,2017-09-26T22:57:25Z,https://github.com/grpc/grpc-java/pull/3500#discussion_r141181665,6,modified,1,1,2
16827424,https://api.github.com/repos/grpc/grpc-java,24519729,3006,1014305,116601974,28,Fixed. There were multiple other trivial problems as well.,693502647,2017-05-15 21:10:15 UTC,Clarify,0,2,3,24,50,4,2811396,MEMBER,True,2017-05-15T21:10:15Z,https://github.com/grpc/grpc-java/pull/3006#discussion_r116601974,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8186852,576,3691158,34357394,41,"I think it might be okay to release at `shutdown`, actually. The executor will only be `shutdown` once the refcount reaches 0, not `shutdownNow()`, which will only reject new cancellation tasks, not interrupt those currently running. We only start a cancellation task when we start an RPC, so it should be safe to have a released executor after `shutdown = true`.",279566809,2015-07-10 12:13:41 UTC,Clarify,15,21,1,275,51,14,Not Available,CONTRIBUTOR,True,2015-07-13T05:30:37Z,https://github.com/grpc/grpc-java/pull/576#discussion_r34357394,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,15886121,2089,1014305,72166357,144,"This class makes me pretty uncomfortable, especially how it mutates the fields of `RouteGuideActivity` for use in the GrpcRunnable. And the GrpcRunnable itself looks fishy, because I only see `InterruptedException` thrown.",482532263,2016-07-25 23:51:19 UTC,nAnswer,1,21,1,1144,0,42,10237908,MEMBER,False,2016-08-03T21:53:01Z,https://github.com/grpc/grpc-java/pull/2089#discussion_r72166357,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,31177612,3726,5551325,150681094,12,"it is recommended that you put this in a named class local to this method.  It makes fort better stack trace messages, rather than $3 or other hard to read names.  It usually only costs 1 line too.",836045594,2017-11-13 22:11:24 UTC,Clarify,0,4,2,33,39,3,Not Available,MEMBER,False,2018-01-30T03:05:48Z,https://github.com/grpc/grpc-java/pull/3726#discussion_r150681094,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8186852,576,1014305,34286064,41,This should probably happen when `terminated = true` below. That will help guarantee it only happens once (since elsewhere release code you added will run when `shutdown == true` but not when `terminated == true`),279566809,2015-07-09 16:19:05 UTC,Clarify,15,21,1,275,51,14,Not Available,MEMBER,False,2015-07-13T05:30:37Z,https://github.com/grpc/grpc-java/pull/576#discussion_r34286064,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,13126007,1564,1014305,56541638,16,"Since `attributes()` is `@ExperimentalApi`, let's mark these as such as well.",408600641,2016-03-17 17:14:07 UTC,Other,7,5,2,25,23,6,2811396,MEMBER,False,2016-03-17T23:46:37Z,https://github.com/grpc/grpc-java/pull/1564#discussion_r56541638,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,15588077,1977,5551325,68605475,27,"two things:   - extra space after comma,  - lines should be broken at the highest possible semantic level.  In this case the `connection` variable should be on the same line as the other arguments.",470198737,2016-06-27 16:11:55 UTC,Clarify,6,45,18,685,39,7,Not Available,MEMBER,False,2016-07-07T23:21:00Z,https://github.com/grpc/grpc-java/pull/1977#discussion_r68605475,12,modified,2,4,6
16827424,https://api.github.com/repos/grpc/grpc-java,28835478,3478,2667165,139812653,13,Maybe add a comment about avoiding guava to explain why this helper exists,787531226,2017-09-19 20:44:32 UTC,whQuestion,1,5,2,27,2,2,9053690,CONTRIBUTOR,False,2017-09-19T21:13:37Z,https://github.com/grpc/grpc-java/pull/3478#discussion_r139812653,0,modified,11,0,11
16827424,https://api.github.com/repos/grpc/grpc-java,8054791,553,3664876,32829729,46,nit: could you combine `savedActiveTransport` and `newActiveTransport` and just call it `transport` so that it's always the same variable you return in all cases?,272413438,2015-06-19 11:47:49 UTC,whQuestion,2,14,3,424,82,7,2811396,MEMBER,False,2015-06-26T19:20:37Z,https://github.com/grpc/grpc-java/pull/553#discussion_r32829729,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7263220,338,1014305,29122214,16,"If nothing is buffered, the flush will be relatively cheap; basically the cost of the event going through the pipeline.

If the CreateStreamCommand is queued, then it won't need to be marked for future flushing. That's because when it is written it will be written due to some other frame, and that other frame will already need proper flushing. For instance, let's say we receive a frame with END_STREAM in connectionRead() that makes a stream advance to CLOSED. We then write out a new HEADERS frame and maybe even some DATA. But then on connectionReadComplete() we would be flushing, so it is properly flushed without any special magic.",249258454,2015-04-27 04:03:11 UTC,Clarify,4,49,14,488,3,6,Not Available,MEMBER,False,2015-04-29T20:21:16Z,https://github.com/grpc/grpc-java/pull/338#discussion_r29122214,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8321297,794,1014305,36810266,24,"This makes it sound like the response must be using the same compression type if using compression. However, the server is permitted to choose a different compression algorithm if the client supports it. How is `Message-Accept-Encoding` going to play into this?",279282297,2015-08-11 21:03:23 UTC,Clarify,4,57,1,361,68,15,8943572,MEMBER,False,2015-08-17T18:33:05Z,https://github.com/grpc/grpc-java/pull/794#discussion_r36810266,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,9701115,1101,1014305,41179068,50,Why this new constructor?,322114821,2015-10-05 16:25:51 UTC,whQuestion,4,4,2,154,88,5,Not Available,MEMBER,False,2015-10-05T18:35:07Z,https://github.com/grpc/grpc-java/pull/1101#discussion_r41179068,0,modified,21,38,59
16827424,https://api.github.com/repos/grpc/grpc-java,7263220,338,3664876,29090800,21,I think you have to upgrade Netty for this method ... is that part of this PR?,249258454,2015-04-24 20:22:41 UTC,ynQuestion,4,49,14,488,3,6,Not Available,MEMBER,False,2015-04-29T20:21:15Z,https://github.com/grpc/grpc-java/pull/338#discussion_r29090800,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,32682826,3882,5551325,158154147,71,doesnt there need to be a `>>>` in here?,868565016,2017-12-20 22:34:40 UTC,ynQuestion,0,18,2,6018,2,17,2819812,MEMBER,False,2017-12-28T00:25:47Z,https://github.com/grpc/grpc-java/pull/3882#discussion_r158154147,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,28458358,3452,5551325,138244338,195,"I went with a different approach.  This should keep the throwable alive for the minor GC collections.     It isn't a disaster if the call site isn't captured, and this avoids adding configuration.  ",779224081,2017-09-12 03:24:53 UTC,nAnswer,3,14,5,248,19,3,8943572,MEMBER,True,2017-09-14T21:01:44Z,https://github.com/grpc/grpc-java/pull/3452#discussion_r138244338,0,modified,91,12,103
16827424,https://api.github.com/repos/grpc/grpc-java,31211538,3735,1014305,151220842,48,"Oops. I didn't delete these methods. They're now unused: `determineMethod`, `verifyContentType`",837445365,2017-11-15 19:00:50 UTC,Clarify,2,6,3,132,40,2,2811396,MEMBER,False,2017-11-15T19:13:13Z,https://github.com/grpc/grpc-java/pull/3735#discussion_r151220842,1,modified,17,8,25
16827424,https://api.github.com/repos/grpc/grpc-java,10711390,1234,5551325,46325798,128,"@ejona86 Seems like there is some confusion.  I believe there are two threads involved:

 A, which is the application thread, and calls methods on ClientCallImpl
 B, which is the transport thread, which will eventually resolve ClientTransportFuture.

My fear is that if B resolves transport future, and invokes StreamCreationTask.onSuccess, it will be updating the Metadata headers (and reading from calloptions).  If that is okay, (because it is properly sync'd because it uses callExecutor, or some other thing, then there is no issue.  ",350704151,2015-12-01 19:28:56 UTC,Clarify,3,25,1,577,279,5,8943572,MEMBER,True,2015-12-03T19:24:54Z,https://github.com/grpc/grpc-java/pull/1234#discussion_r46325798,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,19651104,2503,1014305,92840204,67,"I'm still concerned that it is non-obvious this adds to the `channelExecutor`, like my concern in the previous PR.",574624490,2016-12-16 16:22:43 UTC,nAnswer,0,3,2,128,113,2,9053690,MEMBER,False,2016-12-16T17:56:21Z,https://github.com/grpc/grpc-java/pull/2503#discussion_r92840204,0,modified,33,40,73
16827424,https://api.github.com/repos/grpc/grpc-java,10475731,1213,1014305,45243119,23,"What changed such that we are doing this in this PR? Wasn't `gracefulShutdownTimeoutMillis()` available in Beta6? Also, is something wrong with Netty's default of 30 seconds?",348339149,2015-11-18 17:58:58 UTC,Other,5,8,1,91,94,12,Not Available,MEMBER,False,2015-11-18T18:58:58Z,https://github.com/grpc/grpc-java/pull/1213#discussion_r45243119,0,modified,8,2,10
16827424,https://api.github.com/repos/grpc/grpc-java,26522303,3241,1014305,128132228,38,"ClassLoader (the base class) normally calls `findClass()` from `loadClass()`. Because our overridden `loadClass()` calls `findClass0()`, it's effectively unnecessary. However, calling `findClass0()` is just an optimization; I'd probably get rid of `findClass0()` (and inline the contents into `findClass()` instead of removing the `findClass()` override.

To most closely follow the normal ""protocol"", I could call `findClass()` with a try-catch and `catch (ClassNotFoundException)`; that's what's normally done (although in the opposite order, which would reduce the number of exceptions thrown). But throwing the exception just to catch it seemed annoying at the time. But that's probably what I should do; it simplifies things. Done.",740090144,2017-07-19 01:02:49 UTC,Clarify,1,6,5,221,49,11,2811396,MEMBER,True,2017-07-19T01:03:42Z,https://github.com/grpc/grpc-java/pull/3241#discussion_r128132228,1,added,75,0,75
16827424,https://api.github.com/repos/grpc/grpc-java,19128551,2443,9209972,89846884,205,"That makes sense. Maybe `withNoResult()` would work better? I like `pending()` the most, but it's missing `with` and I'd like to to be consistent with other methods. Heh.",562583807,2016-11-28 18:28:56 UTC,Clarify,2,42,12,645,17,4,9053690,COLLABORATOR,False,2016-12-01T00:15:51Z,https://github.com/grpc/grpc-java/pull/2443#discussion_r89846884,4,modified,216,23,239
16827424,https://api.github.com/repos/grpc/grpc-java,24368700,2991,2489413,115881373,5,You can leave `Fail fast` without link and put the link at `wait for ready` in the next line instead:)  ,690187049,2017-05-11 00:12:24 UTC,Clarify,2,16,10,88,8,9,2819812,MEMBER,False,2017-05-18T00:00:16Z,https://github.com/grpc/grpc-java/pull/2991#discussion_r115881373,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8912535,837,1014305,37463244,89,This _must_ only be called once. It should observe `notifyTerminated`.,299044393,2015-08-19 18:24:49 UTC,yAnswer,11,29,1,379,306,15,Not Available,MEMBER,False,2015-08-25T15:36:04Z,https://github.com/grpc/grpc-java/pull/837#discussion_r37463244,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,9082774,892,5551325,38219105,107,setListener has logic in it that I don't want to be part of the test.,306715755,2015-08-28 14:43:48 UTC,Reject,2,14,1,335,4,2,8943572,MEMBER,True,2015-08-28T20:00:38Z,https://github.com/grpc/grpc-java/pull/892#discussion_r38219105,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,18022288,2353,5551325,84385073,79,"since this isn't actually a spy, you should rename it",538464702,2016-10-20 22:02:11 UTC,Statement,8,119,10,1469,43,18,4779759,MEMBER,False,2016-11-15T20:05:52Z,https://github.com/grpc/grpc-java/pull/2353#discussion_r84385073,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7530929,431,1014305,30335658,122,"This looks like it should be `channel.write(event, eventPromise)`. Then the Handlers don't get strange.",256829053,2015-05-14 14:23:37 UTC,Reject,9,67,3,445,129,13,Not Available,MEMBER,False,2015-05-15T16:19:26Z,https://github.com/grpc/grpc-java/pull/431#discussion_r30335658,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,9160044,1011,1014305,44472300,5,"Yeah, this was a legitimate breakage, but one we didn't realize earlier. It's to be used by users, and it has to be compatible between implementations.",343837117,2015-11-10 21:04:35 UTC,Statement,6,61,1,85,23,4,8943572,MEMBER,False,2015-11-10T22:04:35Z,https://github.com/grpc/grpc-java/pull/1011#discussion_r44472300,0,modified,2,1,3
16827424,https://api.github.com/repos/grpc/grpc-java,8928784,852,1014305,37689574,37,We could receive many acks over the course of a connection. We should keep a boolean of whether or not we are already ready (so we don't call `transportReady()` multiple times).,299474812,2015-08-21 22:40:12 UTC,Clarify,3,6,1,14,4,1,1962333,MEMBER,False,2015-08-24T17:59:54Z,https://github.com/grpc/grpc-java/pull/852#discussion_r37689574,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,30871298,3670,2489413,149249778,30,"Is this the precise point that protocol negotiation starts, and transportReady the precise point that it ends? InProcessServer also does this? Does it make sense?",829378408,2017-11-07 01:09:39 UTC,nAnswer,1,9,2,123,10,6,2811396,MEMBER,False,2017-11-10T00:00:48Z,https://github.com/grpc/grpc-java/pull/3670#discussion_r149249778,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,10711390,1234,1014305,46222161,128,I was hoping for this method not to call `newStream()`. I was hoping it would have ClientStream passed as a parameter. That allows DelayedStream to have fewer concerns and not need most of the arguments passed to the constructor or need to call back to ClientCallImpl.updateTimeoutHeader (because ClientCallImpl would do that).,350704151,2015-11-30 23:49:15 UTC,Clarify,3,25,1,577,279,5,8943572,MEMBER,False,2015-12-03T19:24:54Z,https://github.com/grpc/grpc-java/pull/1234#discussion_r46222161,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,25695950,3118,1014305,123128241,13,"While I wouldn't disagree that `addInterceptor()` may be a better name, it is probably better to copy `ManagedChannelBuilder`'s `intercept()` name.",719229403,2017-06-21 00:19:06 UTC,Clarify,2,1,2,182,49,6,9053690,MEMBER,False,2017-06-21T00:57:11Z,https://github.com/grpc/grpc-java/pull/3118#discussion_r123128241,0,modified,14,0,14
16827424,https://api.github.com/repos/grpc/grpc-java,10781220,1248,1014305,46625171,67,We need the RunsWith annotation.,351729874,2015-12-03 22:49:03 UTC,Statement,3,16,1,316,0,1,9046588,MEMBER,False,2016-02-17T18:57:47Z,https://github.com/grpc/grpc-java/pull/1248#discussion_r46625171,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,14861720,1842,6773014,65992934,115,In the case of clients we expect the onReady handler to be bound before call start using the StreamObservers.capture method so there should be no raciness here. I have some tidy-ups to do with that,449027529,2016-06-07 00:26:51 UTC,Reject,6,13,1,576,16,5,9046588,CONTRIBUTOR,True,2016-06-14T17:20:41Z,https://github.com/grpc/grpc-java/pull/1842#discussion_r65992934,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,10781220,1248,1014305,46627190,206,"I guess you are trying to make this more ""realistic"" by going through the executor?",351729874,2015-12-03 23:06:56 UTC,Clarify,3,16,1,316,0,1,9046588,MEMBER,False,2016-02-17T18:57:47Z,https://github.com/grpc/grpc-java/pull/1248#discussion_r46627190,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,15588077,1977,1014305,68446892,100,"`1234` should be a constant as well, so that it can have a name, like `BDP_MEASUREMENT_PING`",469089847,2016-06-24 19:04:23 UTC,Statement,6,45,18,685,39,7,Not Available,MEMBER,False,2016-07-07T23:21:00Z,https://github.com/grpc/grpc-java/pull/1977#discussion_r68446892,7,modified,4,0,4
16827424,https://api.github.com/repos/grpc/grpc-java,16134367,1996,21077,73055084,49,@buchgr do you plan to push this to netty ?,485134069,2016-08-01 21:19:50 UTC,whQuestion,8,20,6,602,2,6,Not Available,NONE,False,2016-08-02T07:35:14Z,https://github.com/grpc/grpc-java/pull/1996#discussion_r73055084,4,modified,9,7,16
16827424,https://api.github.com/repos/grpc/grpc-java,22478073,2839,5551325,107812843,30,wrap line to keep arguments on the same line.   That or do an argument per line.,647816079,2017-03-24 00:11:36 UTC,Clarify,3,32,1,306,51,11,10237908,MEMBER,False,2017-03-30T21:24:52Z,https://github.com/grpc/grpc-java/pull/2839#discussion_r107812843,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,25944867,3145,1014305,132565251,50,This is complicated and surprising. I had hoped only the RST stream method I mentioned earlier would have this logic.,757279188,2017-08-10 20:55:03 UTC,Statement,4,55,3,1386,456,40,5067076,MEMBER,False,2017-08-11T22:59:25Z,https://github.com/grpc/grpc-java/pull/3145#discussion_r132565251,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,32144857,3839,3695855,162813440,119,"`@GuardedBy(""lock"")`",892259515,2018-01-21 14:15:20 UTC,Clarify,4,67,17,287,12,7,4779759,CONTRIBUTOR,False,2018-01-22T18:08:10Z,https://github.com/grpc/grpc-java/pull/3839#discussion_r162813440,15,modified,1,1,2
16827424,https://api.github.com/repos/grpc/grpc-java,21824987,2767,3695855,103541984,48,Lock and `@GuardedBy` added.,633861708,2017-02-28 20:14:12 UTC,Continuer,1,3,2,265,208,2,5067076,CONTRIBUTOR,True,2017-02-28T20:14:12Z,https://github.com/grpc/grpc-java/pull/2767#discussion_r103541984,0,modified,106,108,214
16827424,https://api.github.com/repos/grpc/grpc-java,18168140,2366,9209972,90704509,44,It's called in `NettyTransportFactory.newClientTransport`,541009487,2016-12-02 19:28:54 UTC,whQuestion,5,19,3,162,21,4,2811396,COLLABORATOR,True,2016-12-10T02:47:48Z,https://github.com/grpc/grpc-java/pull/2366#discussion_r90704509,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,14441170,1793,1014305,61972925,5,Could we mark this `@Internal`?,438780603,2016-05-03 23:24:05 UTC,Other,3,8,1,167,146,11,9053690,MEMBER,False,2016-05-05T00:12:44Z,https://github.com/grpc/grpc-java/pull/1793#discussion_r61972925,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,14266866,1729,6634728,61337761,25,I can't relate this change to the PR description. Can you provide some background?,435096112,2016-04-27 21:16:01 UTC,Clarify,1,2,1,15,10,1,8943572,CONTRIBUTOR,False,2016-04-27T21:28:57Z,https://github.com/grpc/grpc-java/pull/1729#discussion_r61337761,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7799656,505,3664876,31637964,89,So the question is which status to use in each case:    1. channelInactive (unavailable?)  2. close (cancelled?)  3. http2 plaintext upgrade failed (failed_precondition?),266395836,2015-06-03 13:51:10 UTC,Clarify,10,46,8,370,85,14,Not Available,MEMBER,True,2015-06-03T16:33:27Z,https://github.com/grpc/grpc-java/pull/505#discussion_r31637964,5,modified,28,45,73
16827424,https://api.github.com/repos/grpc/grpc-java,10919835,1263,6634728,46993013,7,"I wonder if this should be on `CallOptions`, since it's an option anyway.",356709367,2015-12-08 18:31:51 UTC,Clarify,1,9,1,192,28,17,8943572,CONTRIBUTOR,False,2015-12-08T18:49:38Z,https://github.com/grpc/grpc-java/pull/1263#discussion_r46993013,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,9160044,1011,5551325,44471827,5,Oops.   These tests were failing so I changed them to use '-'.  It doesn't appear to be in used internally.,343837117,2015-11-10 21:00:53 UTC,Clarify,6,61,1,85,23,4,8943572,MEMBER,True,2015-11-10T22:01:00Z,https://github.com/grpc/grpc-java/pull/1011#discussion_r44471827,0,modified,2,1,3
16827424,https://api.github.com/repos/grpc/grpc-java,34741950,4060,3695855,168350105,167,"Maybe replace 1000 with a constant, so it's not necessary to read the comment in the constructor to understand why it's not just subtracting 1 here?",909825914,2018-02-15 00:04:43 UTC,nAnswer,1,11,5,365,45,3,4779759,CONTRIBUTOR,False,2018-02-15T18:58:33Z,https://github.com/grpc/grpc-java/pull/4060#discussion_r168350105,0,modified,102,27,129
16827424,https://api.github.com/repos/grpc/grpc-java,16002471,2131,1014305,73605713,15,Happened to discuss offline. run() declares no checked exceptions.,487213934,2016-08-04 21:25:15 UTC,nAnswer,1,4,1,13,10,2,2811396,MEMBER,True,2016-08-04T21:25:53Z,https://github.com/grpc/grpc-java/pull/2131#discussion_r73605713,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,25708644,3119,2667165,138661674,55,Let's expand the comment here to explain that we are requesting a message here because we expect to *send* a response upon receiving the request. Otherwise it might be confusing to request a message when the outbound direction is ready.,781224940,2017-09-13 15:51:36 UTC,Clarify,14,30,18,405,0,4,2811396,CONTRIBUTOR,False,2017-09-26T15:49:12Z,https://github.com/grpc/grpc-java/pull/3119#discussion_r138661674,12,modified,20,6,26
16827424,https://api.github.com/repos/grpc/grpc-java,7594214,446,1014305,30622980,96,"Change the prefix above, and then this stuff should become:  ```java  File file = new File(value.substring(UNIX_DOMAIN_SOCKET_PREFIX.length()));  if (!file.isAbsolute()) {    mustBeAbsolute();  }  ```",260141256,2015-05-19 15:17:31 UTC,Clarify,13,17,2,1281,644,11,Not Available,MEMBER,False,2015-05-20T15:02:36Z,https://github.com/grpc/grpc-java/pull/446#discussion_r30622980,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,24116958,2974,6634728,115055431,6,"I think other languages will have the same problem getting the message wire size with stream-based compression, because message boundaries have diminish in the compressed stream. Uncompressed size will be more feasible.",684690033,2017-05-05 18:02:49 UTC,Clarify,1,6,3,264,75,9,Not Available,CONTRIBUTOR,True,2017-05-05T18:03:09Z,https://github.com/grpc/grpc-java/pull/2974#discussion_r115055431,2,modified,20,7,27
16827424,https://api.github.com/repos/grpc/grpc-java,31021840,3705,2667165,150104750,5,`onStreamAllocated` looks like a good place to move this,832449745,2017-11-09 22:23:42 UTC,Clarify,2,8,7,373,162,12,2819812,CONTRIBUTOR,True,2017-11-10T19:20:15Z,https://github.com/grpc/grpc-java/pull/3705#discussion_r150104750,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,13306021,1587,9209972,57400834,138,"Ah, yes. Fixed.",412948753,2016-03-24 22:59:10 UTC,yAnswer,13,32,1,190,122,11,8943572,COLLABORATOR,True,2016-03-24T23:15:11Z,https://github.com/grpc/grpc-java/pull/1587#discussion_r57400834,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,12541796,1472,1014305,54141411,16,"Status here would commonly be UNAVAILABLE, which is not permitted in ClientStream.cancel(). Let's just change ClientStream to allow anything other that `isOk()`?",394809318,2016-02-25 18:35:29 UTC,nAnswer,1,4,1,70,64,9,9053690,MEMBER,False,2016-02-25T19:30:13Z,https://github.com/grpc/grpc-java/pull/1472#discussion_r54141411,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,24658694,3019,6634728,122851797,41,"This check is too implicit. `channelExecutor` is implementation detail and better not be exposed.  Instead, you should verify whether `mockLoadBalancerFactory.newLoadBalancer()` is called.",713281772,2017-06-19 23:47:33 UTC,Clarify,9,81,10,342,37,5,4779759,CONTRIBUTOR,False,2017-07-19T18:00:54Z,https://github.com/grpc/grpc-java/pull/3019#discussion_r122851797,2,modified,82,0,82
16827424,https://api.github.com/repos/grpc/grpc-java,12820112,1526,1014305,55426774,261,"I was okay with replaying each flush. I wasn't too concerned about that level of performance in the slow case. It should be possible to coalesce flushes, but is slightly non-trivial because of interactions with other methods like `halfClose()` and `cancel()`. I'm don't have much problem calling optimizing flush as future work, but I do have some trouble caring about the case at present because it will be _no worse_ than when `DelayedStream` is not being used.",403323656,2016-03-08 21:02:41 UTC,Clarify,6,26,1,308,229,5,2811396,MEMBER,True,2016-03-09T23:15:15Z,https://github.com/grpc/grpc-java/pull/1526#discussion_r55426774,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,10418960,1203,6773014,45684862,50,Created a constant exception.   http://shipilev.net/blog/2014/exceptional-performance/,347905676,2015-11-24 00:59:06 UTC,System,4,41,1,722,80,12,9046588,CONTRIBUTOR,True,2015-12-02T23:34:41Z,https://github.com/grpc/grpc-java/pull/1203#discussion_r45684862,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,33294686,3889,6634728,160569397,148,We use GRPCLB or grpclb as a special term. It should not be split.,883385742,2018-01-10 01:21:41 UTC,Clarify,2,8,3,409,25,8,8943572,CONTRIBUTOR,False,2018-01-13T00:36:10Z,https://github.com/grpc/grpc-java/pull/3889#discussion_r160569397,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8312845,680,7689743,36153821,40,ClientCallFactory or ClientCallProvider?,279106016,2015-08-04 00:59:58 UTC,ynQuestion,25,20,4,946,830,50,Not Available,NONE,False,2015-08-14T17:42:58Z,https://github.com/grpc/grpc-java/pull/680#discussion_r36153821,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8916743,841,1014305,37492723,37,"This looks like it should be INTERNAL, since the application didn't specify an invalid argument. Instead, either the grpc library on client or server has a bug.",299326101,2015-08-20 01:45:48 UTC,Clarify,5,34,1,318,9,6,8943572,MEMBER,False,2015-08-21T00:14:40Z,https://github.com/grpc/grpc-java/pull/841#discussion_r37492723,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8470641,629,1014305,35035024,29,Then go ahead and add documentation to `sslSocketFactory()` describing its behavior.,280318334,2015-07-20 17:41:42 UTC,Statement,6,17,1,79,2,2,1962333,MEMBER,False,2015-07-21T23:31:13Z,https://github.com/grpc/grpc-java/pull/629#discussion_r35035024,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,18908780,2427,7396743,88563246,467,Question: Why do we call `handleTermination()` here and from `shutdown()`? Looked redundant..,558389459,2016-11-17 22:38:20 UTC,ynQuestion,9,44,13,1478,6,7,9053690,CONTRIBUTOR,False,2016-11-23T06:21:21Z,https://github.com/grpc/grpc-java/pull/2427#discussion_r88563246,6,modified,5,2,7
16827424,https://api.github.com/repos/grpc/grpc-java,24658694,3019,1014305,128312624,32,`delayedTransport.shutdown()` can do lots of things; it seems strange to single-out adding anything to the `channelExecutor`. But if you add a comment pointing out the subtle usage of `drain()` (I'm unsure whether here or at the drain is better) I could live with it.,724636093,2017-07-19 17:27:18 UTC,Clarify,9,81,10,342,37,5,4779759,MEMBER,False,2017-07-19T18:00:54Z,https://github.com/grpc/grpc-java/pull/3019#discussion_r128312624,8,modified,5,5,10
16827424,https://api.github.com/repos/grpc/grpc-java,12503950,1465,1014305,53740339,43,"package-private? FailingClientTransport is package-private, and I don't see any uses outside this package.",394141595,2016-02-23 06:21:16 UTC,ynQuestion,2,9,1,715,918,21,9053690,MEMBER,False,2016-02-23T17:42:33Z,https://github.com/grpc/grpc-java/pull/1465#discussion_r53740339,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,12820112,1526,5551325,55296866,15,What happens if supplier  != null and shutdown is true here? ,402771006,2016-03-08 00:13:59 UTC,Emphasis,6,26,1,308,229,5,2811396,MEMBER,False,2016-03-09T23:15:15Z,https://github.com/grpc/grpc-java/pull/1526#discussion_r55296866,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,13835440,1668,1014305,59612744,48,"@buchgr, that sounds fine to me; I've been using the build generally to create the `NettyServer`. Probably doesn't need a test for not started here, since it is invalid.",425010936,2016-04-13 19:46:55 UTC,Clarify,1,16,1,239,1,8,8943572,MEMBER,False,2016-04-13T20:55:27Z,https://github.com/grpc/grpc-java/pull/1668#discussion_r59612744,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,14320328,1744,6174876,61613436,34,@carl-mastrangelo yep. maybe better?,436342166,2016-04-29 17:13:26 UTC,Other,4,17,1,36,6,2,1388179,COLLABORATOR,True,2016-04-29T17:38:46Z,https://github.com/grpc/grpc-java/pull/1744#discussion_r61613436,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7335867,361,1014305,29464129,438,We're no longer going to report that the upgrade failed. Should this throw an exception?,251816128,2015-04-30 17:56:40 UTC,nAnswer,16,50,1,221,211,2,Not Available,MEMBER,False,2015-05-01T17:47:25Z,https://github.com/grpc/grpc-java/pull/361#discussion_r29464129,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,17034642,2262,5551325,82017034,160,explain why synchronized in comment.,525256808,2016-10-05 16:43:40 UTC,whQuestion,3,86,12,1778,308,73,9053690,MEMBER,False,2016-10-06T23:43:56Z,https://github.com/grpc/grpc-java/pull/2262#discussion_r82017034,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,26959707,3289,8717394,129978784,10,"That helps, I think it is more clear now. ",747056500,2017-07-27 22:55:58 UTC,Statement,3,14,5,25,6,5,2811396,CONTRIBUTOR,False,2017-07-28T00:10:40Z,https://github.com/grpc/grpc-java/pull/3289#discussion_r129978784,0,modified,3,1,4
16827424,https://api.github.com/repos/grpc/grpc-java,32147706,3840,6634728,155685848,71,"This could use a better name. Maybe ""PendingStreamRegistry""",857888821,2017-12-08 01:26:44 UTC,Clarify,1,7,3,95,52,2,4779759,CONTRIBUTOR,False,2017-12-08T20:36:17Z,https://github.com/grpc/grpc-java/pull/3840#discussion_r155685848,0,modified,89,7,96
16827424,https://api.github.com/repos/grpc/grpc-java,14870158,1846,5551325,64669859,42,checkNotNull for both params.,452600480,2016-05-25 23:21:21 UTC,Statement,14,17,1,132,2,4,8943572,MEMBER,False,2016-06-01T21:41:29Z,https://github.com/grpc/grpc-java/pull/1846#discussion_r64669859,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,13220231,1570,3402699,56901977,109,you could move these checks into `lastCall()`,410928156,2016-03-21 21:36:06 UTC,Clarify,6,33,3,360,54,6,Not Available,MEMBER,False,2016-03-24T17:26:48Z,https://github.com/grpc/grpc-java/pull/1570#discussion_r56901977,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,27354855,3325,1014305,132572936,15,"ConnectionSpec is part of grpc's API in this class. We don't want to expose our internal fork, so we let users specify okhttp's ConnectionSpec and then we use Utils.convertSpec() to copy it into an internal equivalent.

Feel free to eagerly convert in `connectionSpec()`; that would allow proguard to remove the references if it isn't specified.",755705670,2017-08-10 21:29:31 UTC,Clarify,1,1,1,20,25,7,Not Available,MEMBER,False,2017-08-10T21:31:29Z,https://github.com/grpc/grpc-java/pull/3325#discussion_r132572936,0,modified,3,3,6
16827424,https://api.github.com/repos/grpc/grpc-java,13220231,1570,9209972,56912981,142,"Thanks, fixed!",410928156,2016-03-21 23:07:06 UTC,Emphasis,6,33,3,360,54,6,Not Available,COLLABORATOR,True,2016-03-24T17:26:48Z,https://github.com/grpc/grpc-java/pull/1570#discussion_r56912981,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,9109657,902,1014305,38693181,50,"We want to use a separate executor for scheduling. ScheduledExecutorService is a fixed-size thread pool; it can't vary in size, which seems pretty restrictive. Also, if the application gets behind such that the executor queue fills we will want to handle deadlines with a different thread.

So we create a shared ScheduledExecutorService that we use internally, and don't allow anyone to override it. We should allow it to be overridden in the future, but probably only in unstable APIs.",306959416,2015-09-03 18:33:25 UTC,Clarify,7,41,1,434,10,11,9046588,MEMBER,False,2015-09-03T20:58:58Z,https://github.com/grpc/grpc-java/pull/902#discussion_r38693181,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8945736,872,1014305,38213611,23,Was this change necessary for verifying content type?,301501218,2015-08-28 13:45:53 UTC,whQuestion,9,20,6,109,12,7,Not Available,MEMBER,False,2015-08-31T22:06:23Z,https://github.com/grpc/grpc-java/pull/872#discussion_r38213611,2,modified,20,2,22
16827424,https://api.github.com/repos/grpc/grpc-java,11697710,1327,1014305,50326043,37,"Oh, duh, you may have created the certificate to have that ""localhost"" CN. What we've done elsewhere is use server1.pem for the server and have the client call `ChannelBuilder.overrideAuthority(TestUtils.TEST_SERVER_HOST)` to change the name it verifies for the server. That has the advantage of not needing an invalid certificate (because no certificate should have ""CN=localhost"") and works equally well independent of what machines the client and server are running on.",375564997,2016-01-20 21:58:05 UTC,Clarify,6,16,6,280,5,3,Not Available,MEMBER,False,2016-01-21T19:47:41Z,https://github.com/grpc/grpc-java/pull/1327#discussion_r50326043,1,modified,18,4,22
16827424,https://api.github.com/repos/grpc/grpc-java,9096416,894,3664876,38459702,23,Need to reference an existing issue.,306839501,2015-09-01 17:18:39 UTC,Statement,6,36,1,448,185,17,8943572,MEMBER,False,2015-09-04T21:42:59Z,https://github.com/grpc/grpc-java/pull/894#discussion_r38459702,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,9118649,961,5551325,39067677,52,"Not sure if intentional, but I believe getContextClassLoader can possibly return null.  Any reason not to use ManagedChannelProvider.class.getClassLoader() ?",307281988,2015-09-09 14:52:21 UTC,nAnswer,4,30,1,515,0,11,2811396,MEMBER,False,2015-09-09T18:06:45Z,https://github.com/grpc/grpc-java/pull/961#discussion_r39067677,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,6444534,130,896,25404666,19,"Comma before but, but also perhaps a period: ""...without TLS. This is convenient...""",223382782,2015-02-26 03:50:54 UTC,nAnswer,5,21,1,59,0,1,Not Available,MEMBER,False,2015-02-26T04:50:54Z,https://github.com/grpc/grpc-java/pull/130#discussion_r25404666,0,added,59,0,59
16827424,https://api.github.com/repos/grpc/grpc-java,19128551,2443,9209972,89666959,314,nit: `Helper#createSubchannel`,562583807,2016-11-26 07:02:50 UTC,System,2,42,12,645,17,4,9053690,COLLABORATOR,False,2016-12-01T00:15:51Z,https://github.com/grpc/grpc-java/pull/2443#discussion_r89666959,4,modified,216,23,239
16827424,https://api.github.com/repos/grpc/grpc-java,7631628,463,3664876,30752062,213,Strange that checkstyle didn't find this ... done.,260674047,2015-05-20 19:34:57 UTC,Reject,3,4,1,165,76,6,Not Available,MEMBER,True,2015-05-20T21:34:57Z,https://github.com/grpc/grpc-java/pull/463#discussion_r30752062,0,renamed,64,34,98
16827424,https://api.github.com/repos/grpc/grpc-java,10781220,1248,6773014,53208958,32,Currently using a generated proto stub so this is no trivial. Deferring,388260918,2016-02-17 18:34:50 UTC,nAnswer,3,16,1,316,0,1,9046588,CONTRIBUTOR,True,2016-02-17T18:57:47Z,https://github.com/grpc/grpc-java/pull/1248#discussion_r53208958,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,19382692,2479,9209972,90721069,113,"Ahh, yes. Made it unnecessary complicated. Fixed.",569478195,2016-12-02 21:16:31 UTC,yAnswer,12,139,32,1119,0,4,9053690,COLLABORATOR,True,2016-12-21T10:50:31Z,https://github.com/grpc/grpc-java/pull/2479#discussion_r90721069,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,19382692,2479,6634728,92909267,93,"Whether we should propagate the error unconditionally is arguable. It's fine for now, but I think we should shutdown and discard subchannel if there is one. Otherwise you may end up keeping a connection that you will never use.",575292520,2016-12-17 00:47:51 UTC,Clarify,12,139,32,1119,0,4,9053690,CONTRIBUTOR,False,2016-12-21T10:50:31Z,https://github.com/grpc/grpc-java/pull/2479#discussion_r92909267,16,modified,16,35,51
16827424,https://api.github.com/repos/grpc/grpc-java,19382692,2479,9209972,90736085,206,Oh yeah. My bad - shouldn't be blindly copy-pasting ;),569815276,2016-12-02 23:08:03 UTC,Statement,12,139,32,1119,0,4,9053690,COLLABORATOR,True,2016-12-21T10:50:31Z,https://github.com/grpc/grpc-java/pull/2479#discussion_r90736085,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,12736343,1506,1014305,56230744,4,"We need to avoid Guava collect. We have an armistice with some Android teams that we can use Guava if we don't use Guava collect.    There are actually places where we are using it now that have snuck in, but I was going to be removing them.",407332634,2016-03-15 20:03:15 UTC,nAnswer,21,47,2,273,14,17,Not Available,MEMBER,False,2016-03-16T22:32:50Z,https://github.com/grpc/grpc-java/pull/1506#discussion_r56230744,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,20519378,2615,9209972,96548832,6,"@ejona86 Heh, what about this one?",599772111,2017-01-18 01:06:57 UTC,whQuestion,0,7,1,21,13,7,2811396,COLLABORATOR,True,2017-01-18T17:17:53Z,https://github.com/grpc/grpc-java/pull/2615#discussion_r96548832,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,27477168,3339,2489413,132798377,105,"Okay, let me try to schedule everything with fake clock.",758194258,2017-08-11 22:59:08 UTC,nAnswer,0,11,5,118,38,2,4779759,MEMBER,True,2017-08-14T21:07:57Z,https://github.com/grpc/grpc-java/pull/3339#discussion_r132798377,0,modified,61,4,65
16827424,https://api.github.com/repos/grpc/grpc-java,19377493,2477,6634728,90665359,9,"Even if this is temporary, we should not allocate a new ID every single time `getLogId()` is called.",569197935,2016-12-02 15:49:05 UTC,Clarify,1,3,1,114,38,13,8943572,CONTRIBUTOR,False,2016-12-02T18:41:01Z,https://github.com/grpc/grpc-java/pull/2477#discussion_r90665359,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,13306021,1587,9209972,57400838,140,Updated.,412948753,2016-03-24 22:59:15 UTC,Statement,13,32,1,190,122,11,8943572,COLLABORATOR,True,2016-03-24T23:15:11Z,https://github.com/grpc/grpc-java/pull/1587#discussion_r57400838,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,27067007,3295,2489413,130470034,14,"@stephenh Your argument makes sense. We should stay `IDLE` when we are in `IDLE` while ping had been scheduled, and then `onDataReceived`. But the check `if (pingFuture == null)` still looks strange, may be `Preconditions.checkState(pingFuture == null, ""There should be no outstanding pingFuture"")` at this place.",749644025,2017-07-31 21:41:40 UTC,Clarify,4,8,1,45,8,2,4779759,MEMBER,False,2017-08-01T13:07:59Z,https://github.com/grpc/grpc-java/pull/3295#discussion_r130470034,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,27067007,3295,1014305,130465922,4,"It seems like this should be done in all cases (but doesn't matter with DELAYED). If the state is IDLE, the current code would prevent all further PINGS (because it would never be rescheduled). Tying `pingFuture == null` to when there is no callback scheduled prevents having to consider most of those cases. So move clearing the field to before the if?",749644025,2017-07-31 21:24:17 UTC,Clarify,4,8,1,45,8,2,4779759,MEMBER,False,2017-08-01T13:07:59Z,https://github.com/grpc/grpc-java/pull/3295#discussion_r130465922,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,15664914,2010,2489413,71436933,5,"can we pass `vector<pair<string, string> >* options` here? as I will add a flag for allowing deprecated",472367436,2016-07-19 22:35:16 UTC,Other,5,2,1,31,22,19,2811396,MEMBER,False,2017-08-23T00:34:44Z,https://github.com/grpc/grpc-java/pull/2010#discussion_r71436933,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,14870158,1846,1014305,64626756,170,"Yes, I am concerned with the performance of copying the hash map. I'm okay with copying it only when `withOption` is called, since it will be rarer and we can use something quick and easy now and only improve its performance when necessary.",449203119,2016-05-25 18:28:00 UTC,yAnswer,14,17,1,132,2,4,8943572,MEMBER,False,2016-06-01T21:41:29Z,https://github.com/grpc/grpc-java/pull/1846#discussion_r64626756,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8916743,841,1014305,37594286,38,"We haven't generally been copying the message from caused exceptions. However, we should really be providing more context here anyway, so can we replace `e.getMessage()` with a more clear message. Maybe something like: ""Unable to decompress messages from server"".",299383912,2015-08-20 21:54:18 UTC,Clarify,5,34,1,318,9,6,8943572,MEMBER,False,2015-08-21T00:14:40Z,https://github.com/grpc/grpc-java/pull/841#discussion_r37594286,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7799656,505,1014305,31632693,108,It seems like we don't really gain much by saving this Throwable.,266158138,2015-06-03 13:06:26 UTC,Reject,10,46,8,370,85,14,Not Available,MEMBER,False,2015-06-03T16:33:27Z,https://github.com/grpc/grpc-java/pull/505#discussion_r31632693,4,modified,36,37,73
16827424,https://api.github.com/repos/grpc/grpc-java,14648422,1817,6773014,67969265,43,@ejona86 Given that this has already diverged significantly I'm not overly concerned with merging as discussed. ,462195224,2016-06-21 23:10:49 UTC,nAnswer,12,39,1,156,56,8,9046588,CONTRIBUTOR,True,2016-07-14T01:34:30Z,https://github.com/grpc/grpc-java/pull/1817#discussion_r67969265,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,20135135,2565,6634728,94817534,120,No. One char excessive.,591119612,2017-01-05 17:57:59 UTC,Statement,0,4,4,292,272,31,9053690,CONTRIBUTOR,True,2017-01-05T17:58:07Z,https://github.com/grpc/grpc-java/pull/2565#discussion_r94817534,2,modified,6,6,12
16827424,https://api.github.com/repos/grpc/grpc-java,13835440,1668,5551325,59608004,48,"This is testing the expected use case: Listen on port 0, get some other port.  I want the call to go all the way down to the kernel and back.

pickUnusedPort is for testing?  Also it precludes you from picking the interface on which to pick an ephemeral port?",425010936,2016-04-13 19:14:09 UTC,Clarify,1,16,1,239,1,8,8943572,MEMBER,True,2016-04-13T20:55:27Z,https://github.com/grpc/grpc-java/pull/1668#discussion_r59608004,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,15355838,1910,1014305,66524952,16,Maybe `withCredentials`? Meh.,461465071,2016-06-09 21:26:29 UTC,Other,3,7,1,918,41,26,9053690,MEMBER,False,2016-06-10T00:50:33Z,https://github.com/grpc/grpc-java/pull/1910#discussion_r66524952,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,12599821,1482,1014305,54667022,26,Renamed method to `statusFromFailedPromise` with a `ChannelFuture` argument.,397972426,2016-03-02 01:36:40 UTC,Statement,6,5,1,256,27,11,2811396,MEMBER,True,2016-03-02T01:43:35Z,https://github.com/grpc/grpc-java/pull/1482#discussion_r54667022,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,18261171,2374,1014305,85841597,92,"The copy should be made here, not in `NettyClientTransport`. `NettyClientTransport` is created _much_ later, each time we want to create a new connection. So that gives plenty of time for the map to mutate before the defensive copy is made. At that point, the builder is unlikely to modify the map. Copying here also means we only need one defensive copy for all the client transports created (they can share).",542970764,2016-10-31 21:54:15 UTC,Clarify,2,13,5,94,32,3,4779759,MEMBER,False,2016-11-02T22:39:24Z,https://github.com/grpc/grpc-java/pull/2374#discussion_r85841597,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8936684,861,5551325,37781677,31,"This class already has several imports referencing the internal package, why not just reference it in the javadoc?",299571454,2015-08-24 16:06:29 UTC,nAnswer,10,25,1,295,105,26,Not Available,MEMBER,False,2015-08-26T22:27:36Z,https://github.com/grpc/grpc-java/pull/861#discussion_r37781677,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8391731,630,1014305,34818824,24,"This is the very first usage of `NotThreadSafe`. We currently follow the standard practice of ""something isn't thread-safe unless it says it is thread-safe."" Are you thinking that we should start putting this on all classes, or this one is special for some reason?",279847159,2015-07-16 16:09:23 UTC,Clarify,1,34,3,34,24,2,Not Available,MEMBER,False,2015-07-22T22:13:56Z,https://github.com/grpc/grpc-java/pull/630#discussion_r34818824,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,10781220,1248,1014305,52686692,32,Just make this a test in grpc-core? It doesn't seem to depend on anything else.,388260918,2016-02-11 23:45:09 UTC,ynQuestion,3,16,1,316,0,1,9046588,MEMBER,False,2016-02-17T18:57:47Z,https://github.com/grpc/grpc-java/pull/1248#discussion_r52686692,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,6986161,274,7000520,27939007,6,"Yeah, I used bidi streaming because it can return a final response at last, which can be used to verify the correct data has been sent and received.    How about ""CheckAndUploadCall""?",241527286,2015-04-08 00:42:34 UTC,Clarify,15,10,1,70,10,3,1962333,CONTRIBUTOR,True,2015-04-27T20:33:35Z,https://github.com/grpc/grpc-java/pull/274#discussion_r27939007,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8391731,630,1014305,34742023,125,"Why remove ""newStatus""?",279816475,2015-07-15 21:33:24 UTC,whQuestion,1,34,3,34,24,2,Not Available,MEMBER,False,2015-07-22T22:13:56Z,https://github.com/grpc/grpc-java/pull/630#discussion_r34742023,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7799656,505,1014305,31632499,74,Would it be better to create the SslHandler within newHandler()? It seems all this code could be within newHandler() and we pass an sslHandler to BufferUntilTlsNegotiatedHandler instead of SslBootstrapHandler.,266158138,2015-06-03 13:04:50 UTC,Clarify,10,46,8,370,85,14,Not Available,MEMBER,False,2015-06-03T16:33:27Z,https://github.com/grpc/grpc-java/pull/505#discussion_r31632499,4,modified,36,37,73
16827424,https://api.github.com/repos/grpc/grpc-java,28534303,3454,2667165,141425146,80,"Added an unsychronized counter whose value we copy to the volatile, resulting in 1 volatile write.",793609905,2017-09-27 18:13:16 UTC,nAnswer,10,63,22,931,94,25,2819812,CONTRIBUTOR,True,2017-11-02T22:16:20Z,https://github.com/grpc/grpc-java/pull/3454#discussion_r141425146,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8321297,794,1014305,36810399,80,"How is ""compression level"" a ""decompression method""?",279282297,2015-08-11 21:05:05 UTC,whQuestion,4,57,1,361,68,15,8943572,MEMBER,False,2015-08-17T18:33:05Z,https://github.com/grpc/grpc-java/pull/794#discussion_r36810399,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,24024263,2964,6634728,114421280,26,"Also `verify(transports.peek().transport, never()).shutdown[Now]()`?",682925020,2017-05-02 20:48:37 UTC,Other,0,10,2,469,46,10,2811396,CONTRIBUTOR,False,2017-05-03T22:30:04Z,https://github.com/grpc/grpc-java/pull/2964#discussion_r114421280,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,13771814,1656,5551325,62097732,72,"How is cancel different than writeTrailers in this context?  I know what it means for the distinction at the Application layer, but not so much at the stream layer.",438057689,2016-05-04 19:16:28 UTC,whQuestion,12,73,1,717,523,15,2811396,MEMBER,False,2016-05-23T19:39:03Z,https://github.com/grpc/grpc-java/pull/1656#discussion_r62097732,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,29212379,3521,5551325,142827952,193,this is scary.   I don't know if I want people copy pasting this .  Doesn't OkHTTP have one you can re appropriate?,795612215,2017-10-05 00:49:47 UTC,ynQuestion,4,44,7,1520,0,19,5067076,MEMBER,False,2017-12-07T06:30:57Z,https://github.com/grpc/grpc-java/pull/3521#discussion_r142827952,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,12778182,1517,1014305,55052902,52,`transferEncoding`?,400654345,2016-03-04 16:36:19 UTC,whQuestion,2,2,1,146,4,3,8943572,MEMBER,False,2016-03-07T18:01:51Z,https://github.com/grpc/grpc-java/pull/1517#discussion_r55052902,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,27933733,3395,1014305,139566270,42,Why? If we ignore that case won't we just notice the next time we try to read?,782958916,2017-09-18 23:31:48 UTC,Clarify,1,35,5,1236,0,3,5067076,MEMBER,False,2017-09-19T18:18:50Z,https://github.com/grpc/grpc-java/pull/3395#discussion_r139566270,2,modified,13,4,17
16827424,https://api.github.com/repos/grpc/grpc-java,9109657,902,1014305,38332746,1,Copyright header. Ditto elsewhere.,307835019,2015-08-31 14:59:17 UTC,Clarify,7,41,1,434,10,11,9046588,MEMBER,False,2015-09-03T20:58:58Z,https://github.com/grpc/grpc-java/pull/902#discussion_r38332746,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,10467687,1207,5551325,44852236,126,"Decompressor needs to be set upon reading the headers, and before the first message being read.  AbstractClientStream has a method inboundHeadersReceived() which is where it is set client side.  AbstractServerStream doesn't have such a method, presumably because it was okay to have all header processing down in NettyServerStream.

As long as headers is set before the first data frame, it should be okay.  Can data frames be parsed before the headers are finished processing?  In the current code there is a Runnable sent to the serializing executor and a JumpToApplicationThread.... thing.  I tried to keep the processing in the same thread / order that it is today.",346006851,2015-11-14 00:39:46 UTC,Clarify,2,10,3,114,44,3,Not Available,MEMBER,True,2015-11-23T18:00:41Z,https://github.com/grpc/grpc-java/pull/1207#discussion_r44852236,0,modified,77,30,107
16827424,https://api.github.com/repos/grpc/grpc-java,9149639,979,7000520,39182574,44,Just Exception? we may not want to catch Error?,307356290,2015-09-10 14:43:35 UTC,ynQuestion,7,2,4,27,12,5,Not Available,CONTRIBUTOR,False,2015-09-10T17:40:07Z,https://github.com/grpc/grpc-java/pull/979#discussion_r39182574,2,modified,1,6,7
16827424,https://api.github.com/repos/grpc/grpc-java,11165431,1294,6634728,48214595,14,javadoc of `ClientStream.start()` says implementations should not call listener from within start().,363384000,2015-12-22 01:55:05 UTC,Clarify,2,31,0,0,0,0,Not Available,CONTRIBUTOR,False,2016-01-06T20:16:04Z,https://github.com/grpc/grpc-java/pull/1294#discussion_r48214595,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,12503950,1465,1014305,53740455,38,SHUTDOWN_TRANSPORT?,394141595,2016-02-23 06:23:38 UTC,ynQuestion,2,9,1,715,918,21,9053690,MEMBER,False,2016-02-23T17:42:33Z,https://github.com/grpc/grpc-java/pull/1465#discussion_r53740455,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,19382692,2479,6634728,91429296,109,"`IDLE` means the subchannel has no connection, thus you should return `withNoResult().",572603815,2016-12-08 02:01:57 UTC,Clarify,12,139,32,1119,0,4,9053690,CONTRIBUTOR,False,2016-12-21T10:50:31Z,https://github.com/grpc/grpc-java/pull/2479#discussion_r91429296,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,19382692,2479,7396743,91374001,130,"nitpick: no strong feeling, but using `""server3""` here assumes that we create three fake addresses in `setup`? It might be better to use a totally different name or define a constant to avoid accidental overlap.",572578689,2016-12-07 19:56:52 UTC,Clarify,12,139,32,1119,0,4,9053690,CONTRIBUTOR,False,2016-12-21T10:50:31Z,https://github.com/grpc/grpc-java/pull/2479#discussion_r91374001,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,14867525,1845,1014305,66889377,108,"Ah, I see. The squashed commits made it hard to see what changed.",463862212,2016-06-13 23:56:22 UTC,nAnswer,7,21,1,664,426,46,9046588,MEMBER,False,2016-06-13T23:56:22Z,https://github.com/grpc/grpc-java/pull/1845#discussion_r66889377,0,modified,101,23,124
16827424,https://api.github.com/repos/grpc/grpc-java,28417571,3446,5551325,138415414,21,"For the open source case we usually dont use it, so the handler would serve only to remove itself.  Internally, we would set it.   I'd prefer to not auto remove itself for the common case.",778370979,2017-09-12 17:28:27 UTC,Clarify,2,4,2,235,78,7,8943572,MEMBER,True,2017-09-12T17:28:27Z,https://github.com/grpc/grpc-java/pull/3446#discussion_r138415414,1,modified,1,1,2
16827424,https://api.github.com/repos/grpc/grpc-java,15044516,1876,5551325,65430716,68,That's a good point.  I split the method into two separate checks.,453220634,2016-06-01 19:55:59 UTC,Clarify,6,9,1,75,9,6,8943572,MEMBER,True,2016-06-01T19:55:59Z,https://github.com/grpc/grpc-java/pull/1876#discussion_r65430716,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8586229,672,1014305,35930752,135,"Do you still want this as a separate function, even though it is now only used one place?",284324267,2015-07-30 20:53:20 UTC,Statement,6,36,1,315,9,5,8943572,MEMBER,False,2015-08-04T20:19:53Z,https://github.com/grpc/grpc-java/pull/672#discussion_r35930752,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,17034642,2262,120104,78692824,98,"""createOnServer"" is interesting as it tells you where you should invoke this method. however, it is awkward as when you call a method, you are looking more for what it does. I'd say createServerContext/newServerContext etc is less distracting

Also, seems like a lot of args for a public factory method. seems a lot of the non-variable stuff could be a factory object, right?

ex.
```java
class Factory {
...
  StatsTraceContext newServerContext(String methodName, Metadata headers);
...
}
```

",512070930,2016-09-14 06:34:47 UTC,Clarify,3,86,12,1778,308,73,9053690,CONTRIBUTOR,False,2016-10-06T23:43:56Z,https://github.com/grpc/grpc-java/pull/2262#discussion_r78692824,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,18693918,2413,2489413,88526027,69,"`Default: ""` and ditto",557749948,2016-11-17 19:21:19 UTC,Clarify,5,1,4,74,8,3,5067076,MEMBER,False,2016-11-20T23:50:31Z,https://github.com/grpc/grpc-java/pull/2413#discussion_r88526027,1,modified,3,38,41
16827424,https://api.github.com/repos/grpc/grpc-java,8382399,625,1014305,34939568,44,Why is this no longer abstract?,279908164,2015-07-17 21:29:41 UTC,whQuestion,5,24,1,193,84,4,8943572,MEMBER,False,2015-07-22T22:28:31Z,https://github.com/grpc/grpc-java/pull/625#discussion_r34939568,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,9160044,1011,3664876,44414337,129,Why are we no longer interning the string? Apologies if this was already discussed.,343828502,2015-11-10 13:51:31 UTC,nAnswer,6,61,1,85,23,4,8943572,MEMBER,False,2015-11-10T19:20:19Z,https://github.com/grpc/grpc-java/pull/1011#discussion_r44414337,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,25197994,3066,1014305,120944568,16,"That sounds true for CODE_KEY, but not this description marshalling.",708135706,2017-06-08 17:05:21 UTC,Reject,0,5,1,59,18,7,8943572,MEMBER,False,2017-06-08T17:05:21Z,https://github.com/grpc/grpc-java/pull/3066#discussion_r120944568,0,modified,2,4,6
16827424,https://api.github.com/repos/grpc/grpc-java,28089268,3419,2667165,148399983,34,"In this case I  need to wire up the mockInputStream to the methodDescriptor, so I can't use the canned MethodDescriptor.",824935921,2017-11-01 22:16:53 UTC,Reject,2,12,12,56,8,7,2819812,CONTRIBUTOR,True,2018-02-20T01:56:40Z,https://github.com/grpc/grpc-java/pull/3419#discussion_r148399983,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,14218006,1719,1014305,61514216,31,Calling get() increases a reference count and may create it. I'll try to come up with something less likely to cause problems.,434163337,2016-04-28 22:40:29 UTC,Clarify,7,3,1,237,19,7,Not Available,MEMBER,False,2016-04-28T22:40:29Z,https://github.com/grpc/grpc-java/pull/1719#discussion_r61514216,0,modified,43,0,43
16827424,https://api.github.com/repos/grpc/grpc-java,11697710,1327,3664876,50326015,4,"IIRC, that was the outcome of our previous discussions ... that we wouldn't include tcnative in the automated tests due to the OpenSSL dependency. Not that configuring jetty-alpn is easier.",375564997,2016-01-20 21:57:53 UTC,nAnswer,6,16,6,280,5,3,Not Available,MEMBER,False,2016-01-21T19:47:41Z,https://github.com/grpc/grpc-java/pull/1327#discussion_r50326015,1,modified,1,0,1
16827424,https://api.github.com/repos/grpc/grpc-java,8141876,562,3402699,33498609,150,I think the test name is misleading since it isn't ignored but communicated via return value. Maybe `closeReturnsFalseIfAlreadyClosed`.,276403069,2015-06-29 16:55:02 UTC,Clarify,8,133,1,1178,0,2,Not Available,MEMBER,False,2015-07-21T17:20:57Z,https://github.com/grpc/grpc-java/pull/562#discussion_r33498609,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,33807978,3986,1014305,164904845,95,"nit: This class isn't extendable, so use `if (!(o instanceof RetryPolicy))`?",903129972,2018-01-30 22:54:58 UTC,Other,3,21,5,345,3,5,4779759,MEMBER,False,2018-01-31T01:13:38Z,https://github.com/grpc/grpc-java/pull/3986#discussion_r164904845,3,modified,4,5,9
16827424,https://api.github.com/repos/grpc/grpc-java,10154010,1174,3664876,43526269,46,Ah right  :),338579940,2015-10-30 16:01:23 UTC,Accept,6,14,1,121,24,7,1962333,MEMBER,False,2015-10-30T17:56:06Z,https://github.com/grpc/grpc-java/pull/1174#discussion_r43526269,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,35897839,4173,2462032,172739771,12,"I didn't think it would use both runtimes, because it's the `protobuf-lite` folder. 
But there is a possible conflict here 
https://github.com/grpc/grpc-java/blob/master/java_grpc_library.bzl#L112 
https://github.com/grpc/grpc-java/blob/master/protobuf/BUILD.bazel#L9
But I have not much experience with this repository, so not sure, so I'll leave this to you.
We decided to move away from lite to have any support.
",935649775,2018-03-07 04:38:57 UTC,Clarify,6,4,1,11,8,2,Not Available,NONE,True,2018-03-07T04:39:16Z,https://github.com/grpc/grpc-java/pull/4173#discussion_r172739771,0,modified,2,3,5
16827424,https://api.github.com/repos/grpc/grpc-java,27397957,3329,2489413,132565823,27,`this.isDrop = result == DROP_PICK_RESULT`; No need of the 4th argument.,757451644,2017-08-10 20:57:41 UTC,nAnswer,0,12,4,1367,473,11,9053690,MEMBER,False,2017-08-10T21:46:18Z,https://github.com/grpc/grpc-java/pull/3329#discussion_r132565823,2,modified,18,14,32
16827424,https://api.github.com/repos/grpc/grpc-java,12820112,1526,5551325,55426141,72,"Shouldn't this cancel the stream?  Cancellation just removes all the callbacks, not actually cancels the underlying stream.",403323656,2016-03-08 20:58:26 UTC,nAnswer,6,26,1,308,229,5,2811396,MEMBER,False,2016-03-09T23:15:15Z,https://github.com/grpc/grpc-java/pull/1526#discussion_r55426141,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,14952645,1854,3664876,64307054,16,@carl-mastrangelo refresh my memory ... do we allow the app to override userAgent on a per-call basis?,451220128,2016-05-23 23:31:39 UTC,Emphasis,3,4,1,41,19,6,8943572,MEMBER,False,2016-05-24T00:50:27Z,https://github.com/grpc/grpc-java/pull/1854#discussion_r64307054,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,16705172,2221,2489413,77420174,32,"I think it is the second case - although it's arguable.  I consider `scheduleEndofCurrentBackoff` or `scheduleBackoff` as a complicated task, if the former were merged into the latter, that's fine, then one usually adds a comment before it for better readability like `// schedule end of current backoff`, which is easily becoming obsolete.",505775977,2016-09-02 22:26:13 UTC,Clarify,6,11,1,84,30,4,4779759,MEMBER,True,2016-09-20T16:52:52Z,https://github.com/grpc/grpc-java/pull/2221#discussion_r77420174,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,18272030,2380,1014305,85457213,1,This and ReflectableServiceGrpc look unused in this PR.,543888054,2016-10-28 01:01:55 UTC,Statement,3,8,2,195,13,12,5067076,MEMBER,False,2016-10-28T06:03:54Z,https://github.com/grpc/grpc-java/pull/2380#discussion_r85457213,0,added,216,0,216
16827424,https://api.github.com/repos/grpc/grpc-java,13771814,1656,1014305,62280482,130,"`endOfStream ? false : flush` reads a bit easier for me, but it's also what was in the preexisting code.",438057689,2016-05-06 01:45:11 UTC,whQuestion,12,73,1,717,523,15,2811396,MEMBER,True,2016-05-23T19:39:03Z,https://github.com/grpc/grpc-java/pull/1656#discussion_r62280482,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,34070524,4005,1014305,164006941,81,After discussion offline: we'd actually be okay without this. Being able to have it is NameResolverProvider being a special case.,898846101,2018-01-26 00:22:14 UTC,Clarify,0,3,4,159,284,5,2819812,MEMBER,False,2018-01-26T00:51:07Z,https://github.com/grpc/grpc-java/pull/4005#discussion_r164006941,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,18102586,2362,1014305,86023784,53,"`else` doesn't run when you `return`. I could use a `do {} while (false)` + `break` to get similar effect, but finally is more natural.",539759565,2016-11-01 21:00:57 UTC,Clarify,3,19,2,518,129,7,2811396,MEMBER,True,2016-11-02T00:37:01Z,https://github.com/grpc/grpc-java/pull/2362#discussion_r86023784,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,15988394,2115,5551325,73444813,154,"currentTimeMillis is the wrong function to call.  It can go backwards in time, and is extremely coarsely grained.  You want System.nanoTime() ",486511140,2016-08-04 00:18:49 UTC,Statement,1,29,5,2604,0,99,Not Available,MEMBER,False,2017-08-28T20:08:29Z,https://github.com/grpc/grpc-java/pull/2115#discussion_r73444813,2,modified,164,0,164
16827424,https://api.github.com/repos/grpc/grpc-java,16893769,2240,1014305,78112238,91,"I'm also a fan of the superfluous comma. It's a pretty common pattern, and is what the autoformatter for BUILD files does, for example. Back in the day, lots of people hated IE because it didn't support the trailing comma.",508827215,2016-09-09 00:21:08 UTC,Clarify,6,29,2,642,854,23,Not Available,MEMBER,False,2016-09-09T01:36:18Z,https://github.com/grpc/grpc-java/pull/2240#discussion_r78112238,0,added,387,0,387
16827424,https://api.github.com/repos/grpc/grpc-java,31273128,3748,2489413,151266764,32,User can only set tcpff by `InternalNettyChannelBuilder` class. I cc'ed you a CL the builder in which is hard to test without an accessor.,838106188,2017-11-15 22:09:32 UTC,Clarify,0,3,1,78,1,3,Not Available,MEMBER,True,2017-11-15T22:09:32Z,https://github.com/grpc/grpc-java/pull/3748#discussion_r151266764,0,modified,23,0,23
16827424,https://api.github.com/repos/grpc/grpc-java,26879891,3276,1014305,129690297,20,"Doesn't this need `@SuppressWarnings(""deprecated"")`?",745459208,2017-07-26 20:41:23 UTC,Other,0,2,3,48,23,11,9053690,MEMBER,False,2017-07-27T17:52:09Z,https://github.com/grpc/grpc-java/pull/3276#discussion_r129690297,1,modified,1,1,2
16827424,https://api.github.com/repos/grpc/grpc-java,6448399,129,1014305,25407199,37,"Important details:
1) trailers is required to be non-null
2) trailers is only ""from the server"" when called from AbstractClientStream itself. All other users do ""new Metadata.Trailers()""

That tells us our API is weak and explains why it is so hard to document this method.

Maybe:
@param trailers new instance of trailers, either empty or those returned by the server",223506049,2015-02-26 05:22:54 UTC,Clarify,1,16,3,131,58,16,Not Available,MEMBER,False,2015-02-26T07:58:42Z,https://github.com/grpc/grpc-java/pull/129#discussion_r25407199,0,modified,13,1,14
16827424,https://api.github.com/repos/grpc/grpc-java,13282068,1583,6773014,58926190,147,"Don't think so, the 'offered load' -> poisson mean -> lamda of exponential distribution when we use the sample() method. Am I missing something?",417038489,2016-04-07 18:59:16 UTC,Clarify,10,98,1,1829,216,18,9046588,CONTRIBUTOR,True,2016-04-13T20:49:55Z,https://github.com/grpc/grpc-java/pull/1583#discussion_r58926190,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,13774306,1658,5551325,59283725,20,What will happen if version is not defined?,423435987,2016-04-11 21:20:35 UTC,whQuestion,11,16,1,28,12,13,Not Available,MEMBER,False,2016-04-11T23:04:03Z,https://github.com/grpc/grpc-java/pull/1658#discussion_r59283725,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,33949792,3992,5551325,164002463,94,consider letting the exception propagate.,898731683,2018-01-25 23:50:14 UTC,Statement,12,6,30,403,9,7,2811396,MEMBER,False,2018-02-07T01:17:10Z,https://github.com/grpc/grpc-java/pull/3992#discussion_r164002463,24,modified,26,12,38
16827424,https://api.github.com/repos/grpc/grpc-java,7799656,505,3664876,31634938,74,"We can move the creation of the bootstrap handler to the `newHandler` method, but we still need it because we need the `ChannelHandlerContext.alloc()`.",266158138,2015-06-03 13:24:09 UTC,nAnswer,10,46,8,370,85,14,Not Available,MEMBER,True,2015-06-03T16:33:27Z,https://github.com/grpc/grpc-java/pull/505#discussion_r31634938,4,modified,36,37,73
16827424,https://api.github.com/repos/grpc/grpc-java,28370184,3441,6634728,137585516,81,"Since you have made the effort to encapsulate the relation between terminating and terminated in `Terminator`, this check, which assumes that relation, doesn't seem to belong here. I would add `goTerminating()` and `goTerminated()` in `Terminator` and do the check there.

Also, I don't find assert useful enough here. If the check fails, the channel may be terminated prematurely and may lead to user-visible issue. We want to know if this happens even in production environment where assert is usually disabled. A precondition might work better, or to be conservative, a logged warning may also do.",777375064,2017-09-07 16:13:21 UTC,Clarify,0,2,2,51,22,1,Not Available,CONTRIBUTOR,False,2017-09-07T16:53:42Z,https://github.com/grpc/grpc-java/pull/3441#discussion_r137585516,0,modified,43,22,65
16827424,https://api.github.com/repos/grpc/grpc-java,19382692,2479,6634728,93330743,40,Why not `containsExactly()`?,579987676,2016-12-20 21:38:29 UTC,whQuestion,12,139,32,1119,0,4,9053690,CONTRIBUTOR,False,2016-12-21T10:50:31Z,https://github.com/grpc/grpc-java/pull/2479#discussion_r93330743,30,modified,5,19,24
16827424,https://api.github.com/repos/grpc/grpc-java,18125118,2365,1014305,90122020,49,"This needs to delegate to `negotiator`. It should generally be HTTPS, but it's based on the other negotiator used. It's necessary for determining the correct scheme to use on the HTTP/2 connection.",542989164,2016-11-29 21:48:57 UTC,Reject,5,29,1,233,21,11,Not Available,MEMBER,False,2016-12-05T00:35:39Z,https://github.com/grpc/grpc-java/pull/2365#discussion_r90122020,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,28458358,3452,1014305,138153224,165,"Just to be clear, this means that we probably won't detect problems in Servlet shutdown or equivalent, where the ClassLoader itself is being GC'd, right?",779224081,2017-09-11 18:30:06 UTC,Clarify,3,14,5,248,19,3,8943572,MEMBER,False,2017-09-14T21:01:44Z,https://github.com/grpc/grpc-java/pull/3452#discussion_r138153224,0,modified,91,12,103
16827424,https://api.github.com/repos/grpc/grpc-java,10565503,1219,3664876,45414388,40,This needs to be non-final now since we lazy-create the handler.,348364060,2015-11-19 22:02:16 UTC,Statement,5,8,1,160,118,7,Not Available,MEMBER,True,2015-11-24T17:51:52Z,https://github.com/grpc/grpc-java/pull/1219#discussion_r45414388,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,18272660,2381,1014305,85837246,81,`ByteStreams` is beta. We can't use it except in tests. There is io.grpc.internal.IoUtils.toByteArray.,544589954,2016-10-31 21:28:59 UTC,Reject,9,37,5,668,518,34,Not Available,MEMBER,False,2017-01-06T10:54:17Z,https://github.com/grpc/grpc-java/pull/2381#discussion_r85837246,1,modified,16,16,32
16827424,https://api.github.com/repos/grpc/grpc-java,13771814,1656,1014305,62421415,18,"It was a pre-existing race, so I felt comfortable not addressing it in this PR.

If `directExecutor` is used, then there would be a problem, except that WriteQueue is used. I could agree that maybe all the cases are fine, but it is very difficult to prove and audit. It is also relying on Netty's threading model; if we had an OkHttp server, then it would have the race.

The fix may be trivial (like adding a start method), but it wasn't something that I felt comfortable mixing in with the rest of the changes. I've reworded the comment.",440209046,2016-05-07 19:25:19 UTC,Clarify,12,73,1,717,523,15,2811396,MEMBER,True,2016-05-23T19:39:03Z,https://github.com/grpc/grpc-java/pull/1656#discussion_r62421415,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,29212379,3521,5551325,150668335,181,optional: there is a ton of indenting in this function.  maybe extract this to a helper class?,795612215,2017-11-13 21:20:48 UTC,ynQuestion,4,44,7,1520,0,19,5067076,MEMBER,False,2017-12-07T06:30:57Z,https://github.com/grpc/grpc-java/pull/3521#discussion_r150668335,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,29212379,3521,3695855,151574651,109,Updated,795612215,2017-11-17 00:22:25 UTC,Statement,4,44,7,1520,0,19,5067076,CONTRIBUTOR,True,2017-12-07T06:30:57Z,https://github.com/grpc/grpc-java/pull/3521#discussion_r151574651,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,15361873,1912,6634728,66660582,38,The comments before this if-statement needs to be updated.,462178644,2016-06-10 18:32:15 UTC,Clarify,6,19,3,279,44,7,4779759,CONTRIBUTOR,False,2016-06-11T02:00:13Z,https://github.com/grpc/grpc-java/pull/1912#discussion_r66660582,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7312958,348,1014305,29470863,6,We should do the same thing here and for closed calls. Right now though one returns false and the other returns true.,251849414,2015-04-30 19:12:33 UTC,Clarify,17,42,2,431,127,26,Not Available,MEMBER,False,2015-05-04T18:52:18Z,https://github.com/grpc/grpc-java/pull/348#discussion_r29470863,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,18664181,2410,1014305,87249551,14,"FWIW, that's not an acceptable reason to include the change in this PR.",552386035,2016-11-09 18:30:41 UTC,nAnswer,1,5,1,107,84,2,8943572,MEMBER,False,2016-11-09T18:30:41Z,https://github.com/grpc/grpc-java/pull/2410#discussion_r87249551,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8770486,790,6634728,36914004,46,"I think SOURCE is appropriate, as we are marking them both as `@Internal`, thus we don't expect any tool to check for them in class files.",293396474,2015-08-12 19:07:35 UTC,Clarify,7,6,1,231,0,8,9053690,CONTRIBUTOR,True,2015-08-12T22:03:35Z,https://github.com/grpc/grpc-java/pull/790#discussion_r36914004,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,16842829,2235,5551325,77719670,295,"You might check if this is ever true.  The changes you made in https://github.com/grpc/grpc-java/commit/edf2c62fd55b74be7b1a85191f8e2f27099fdf75  I think cause huffman coded headers to always over allocate (by roundabout way  of HuffmanDecoder constructor argument).

It may not be a problem, but it would be worth checking that this works as expected.",507785185,2016-09-06 21:09:31 UTC,Clarify,10,51,2,961,28,13,1388179,MEMBER,False,2016-09-09T14:06:57Z,https://github.com/grpc/grpc-java/pull/2235#discussion_r77719670,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7352120,367,3664876,29980090,5,@louiscryan ... same question ... can you revert?,251898752,2015-05-08 19:55:06 UTC,ynQuestion,8,49,5,865,201,33,Not Available,MEMBER,False,2015-05-08T22:41:01Z,https://github.com/grpc/grpc-java/pull/367#discussion_r29980090,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,9127716,901,6634728,38328542,5,"Agreed. We don't change it now.

Right it's not safe to do so. The problem we had earlier was that the dependency on grpc introduced a transitive dependency on a certain version of protobuf runtime, which was different from the version of `protocArtifact`.",307128758,2015-08-31 14:15:39 UTC,nAnswer,3,3,1,438,459,40,9053690,CONTRIBUTOR,True,2015-08-31T16:26:35Z,https://github.com/grpc/grpc-java/pull/901#discussion_r38328542,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,32144857,3839,1014305,155640116,157,"Every stream is closed. But we must call masterListener.closed() only once. So if more than one of the streams has this boolean set, and then they complete naturally (or are cancelled), then we'll end up calling masterListener.closed() multiple times.",857895056,2017-12-07 21:03:21 UTC,Clarify,4,67,17,287,12,7,4779759,MEMBER,False,2018-01-22T18:08:10Z,https://github.com/grpc/grpc-java/pull/3839#discussion_r155640116,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,16495457,2192,5551325,76162517,1,This should probably go in the benchmarks directory under    benchmarks/src/jmh/java/io/grpc/internal/....    to match the other existing micro benchmarks.,499510558,2016-08-25 00:14:41 UTC,nAnswer,1,17,3,654,3,7,Not Available,MEMBER,False,2016-08-25T17:46:34Z,https://github.com/grpc/grpc-java/pull/2192#discussion_r76162517,1,added,133,0,133
16827424,https://api.github.com/repos/grpc/grpc-java,8177821,574,3664876,33504469,18,Preconditions for method and callOptions.,275560753,2015-06-29 17:50:23 UTC,Statement,3,20,1,719,243,28,9053690,MEMBER,False,2015-07-07T21:28:45Z,https://github.com/grpc/grpc-java/pull/574#discussion_r33504469,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,16842829,2235,5551325,77870187,167,Is this going to jive with Normans change to make these longs?,508306097,2016-09-07 17:40:24 UTC,whQuestion,10,51,2,961,28,13,1388179,MEMBER,False,2016-09-09T14:06:57Z,https://github.com/grpc/grpc-java/pull/2235#discussion_r77870187,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,19962990,2557,2489413,94082267,465,"Since `this` and `list` are actually one-to-one (every instance of `this` is created at line 425 using a unique `list`), why not synchronized the entire function?",586167208,2016-12-28 22:02:08 UTC,nAnswer,0,40,6,1482,1,5,9053690,MEMBER,False,2016-12-29T22:38:31Z,https://github.com/grpc/grpc-java/pull/2557#discussion_r94082267,0,added,475,0,475
16827424,https://api.github.com/repos/grpc/grpc-java,21016909,2690,7000510,100640823,19,"We really shouldn't make a copy of this, without some TODO reflecting that it *is* a copy, and the right thing to do is depend on the source version (https://github.com/google/instrumentation-proto/blob/master/stats/census.proto). Is there some reason you can't make that a submodule?",612662544,2017-02-10 22:52:09 UTC,Statement,3,12,5,23733,0,19,Not Available,NONE,False,2017-02-10T22:52:09Z,https://github.com/grpc/grpc-java/pull/2690#discussion_r100640823,4,modified,1,1,2
16827424,https://api.github.com/repos/grpc/grpc-java,30984870,3699,1014305,151811124,93,"This will be a duplicate log entry, as `createBinaryLog()` also logs before returning `null`. Choose one.",832565247,2017-11-17 23:16:20 UTC,Other,2,17,5,476,0,4,2819812,MEMBER,False,2017-11-28T19:32:52Z,https://github.com/grpc/grpc-java/pull/3699#discussion_r151811124,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,18272660,2381,7147247,85617154,102,"Done. I'm cancelling the call now. However, I don't think the status will be propagated without the stream being started. Do you think we should start the stream and then do the cancelling?",543173313,2016-10-28 21:57:30 UTC,Clarify,9,37,5,668,518,34,Not Available,CONTRIBUTOR,True,2017-01-06T10:54:17Z,https://github.com/grpc/grpc-java/pull/2381#discussion_r85617154,0,modified,51,9,60
16827424,https://api.github.com/repos/grpc/grpc-java,8372394,619,1014305,34489877,30,"When writing the code, I'd rather not defeat Java's dead code and return detection. I think this is more a code style thing that should be left as-is unless there is a need to change it. So in new code you can do it either way, but let's not change existing code unless need arises.",279698767,2015-07-13 15:44:47 UTC,Clarify,1,22,1,85,36,6,8943572,MEMBER,False,2015-07-15T16:34:24Z,https://github.com/grpc/grpc-java/pull/619#discussion_r34489877,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,13282068,1583,6174876,59193203,29,@louiscryan All options except for heap size and `AggressiveOpts` are on by default. AFAIK `AggressiveOpts` enables experimental optimizations that haven't proven to be useful / stable enough to be enabled by default. I think we should reduce the VM flags to `-Xms2g -Xmx2g`. WDYT?,421448370,2016-04-11 12:08:16 UTC,Reject,10,98,1,1829,216,18,9046588,COLLABORATOR,False,2016-04-13T20:49:55Z,https://github.com/grpc/grpc-java/pull/1583#discussion_r59193203,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,19962990,2557,2489413,94186160,358,line-wrapping: prefer to break at a higher syntactic level,586486277,2016-12-29 22:17:16 UTC,Statement,0,40,6,1482,1,5,9053690,MEMBER,False,2016-12-29T22:38:31Z,https://github.com/grpc/grpc-java/pull/2557#discussion_r94186160,3,modified,26,14,40
16827424,https://api.github.com/repos/grpc/grpc-java,7483798,417,1014305,30715701,111,"It's fine to remain. My comment was a bit of a +1. The shutdown+terminated isn't necessarily any better than it is doing now, but doing it async would be really nice.",255429989,2015-05-20 13:38:02 UTC,Clarify,10,35,1,821,14,9,2811396,MEMBER,False,2015-06-10T16:25:59Z,https://github.com/grpc/grpc-java/pull/417#discussion_r30715701,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8750457,771,1014305,36571568,21,"I considered something like that, but looping over `jacocoSourceProjects` to call `evaluationDependsOn` is misleading.",293057056,2015-08-07 22:09:18 UTC,nAnswer,2,4,1,18,14,1,2811396,MEMBER,True,2015-08-08T00:23:12Z,https://github.com/grpc/grpc-java/pull/771#discussion_r36571568,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,36379618,4222,3695855,174880797,18,"The point of null here is to be able to send RST_STREAM to the server without invoking `transportReportStatus` (again) in `NettyClientHandler#cancelStream`. This field is accessed in exactly one place (`NettyClientHandler#cancelStream`, which should be the only thing parsing these commands anyways?), and it checks for null to decide whether to report the status to the transport. I could accomplish the same by adding a `RstStreamCommand` (and had this in an earlier draft of this PR), but it would be functionally almost identical to `CancelClientStreamCommand` so seemed like unnecessary redundancy.",945317889,2018-03-15 18:12:07 UTC,Clarify,1,9,4,49,9,6,5067076,CONTRIBUTOR,True,2018-03-22T17:52:13Z,https://github.com/grpc/grpc-java/pull/4222#discussion_r174880797,0,modified,5,3,8
16827424,https://api.github.com/repos/grpc/grpc-java,13710217,1654,1014305,59081935,5,Revert this change. It shouldn't be necessary and it was purposefully changed to `'nano'`,421652306,2016-04-08 20:07:11 UTC,Continuer,3,2,1,3,2,2,10237908,MEMBER,False,2016-04-08T21:24:29Z,https://github.com/grpc/grpc-java/pull/1654#discussion_r59081935,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,13220231,1570,3402699,56909431,142,"Definitely don't want to sleep here. Instead, you'd need to schedule the subsequent attempt using a `ScheduledExecutorService`.

I can't recall exactly what the threading guarantees are, though, for calling the listener. But since you're only invoking methods on a new call object (so they are all invoked serially), I think you are fine. Internally, the call has a `callExecutor` to serialize invocations to the listener.",410928156,2016-03-21 22:34:56 UTC,Clarify,6,33,3,360,54,6,Not Available,MEMBER,False,2016-03-24T17:26:48Z,https://github.com/grpc/grpc-java/pull/1570#discussion_r56909431,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,19458362,2017,5551325,70106762,48,s/ArrayList/List/ ,479114951,2016-07-08 17:04:11 UTC,Statement,1,20,2,857,0,12,Not Available,MEMBER,False,2016-07-18T16:07:21Z,https://github.com/grpc/grpc-java/pull/2017#discussion_r70106762,0,added,88,0,88
16827424,https://api.github.com/repos/grpc/grpc-java,12924618,1538,5551325,55581377,10,"FYI, hashcodes will be reused within the same process as transports come and go.",403973675,2016-03-09 20:13:23 UTC,Statement,1,1,1,148,21,11,9053690,MEMBER,False,2016-03-09T21:53:46Z,https://github.com/grpc/grpc-java/pull/1538#discussion_r55581377,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,16842829,2235,6174876,77731218,115,"@carl-mastrangelo 

I copied this code from Netty's `DefaultHttp2HeadersDecoder`.

Regarding the cost of floating point multiplication, this will be lost in the noise really. Decoding headers takes microseconds, and floating point multiplication takes 2 or 3 clock cycles. So I wouldn't worry about that.

I think we should have some kind of estimation logic. I am not sure if that's the right one. Something that tends to overestimate the size would be nice. Obviously, in the proxy scenario it's going to be difficult to have a good estimate.

",507785185,2016-09-06 22:34:05 UTC,Clarify,10,51,2,961,28,13,1388179,COLLABORATOR,True,2016-09-09T14:06:57Z,https://github.com/grpc/grpc-java/pull/2235#discussion_r77731218,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,14259244,1724,5551325,61298826,27,Here too.  You'll need to use a real instance rather than a mock.,434960299,2016-04-27 17:17:09 UTC,Clarify,3,11,3,93,0,4,4779759,MEMBER,False,2016-04-27T18:50:10Z,https://github.com/grpc/grpc-java/pull/1724#discussion_r61298826,0,modified,21,0,21
16827424,https://api.github.com/repos/grpc/grpc-java,7295443,342,3664876,29181386,233,Oh I see you're using double so you can round.  Never mind.,250285117,2015-04-27 17:26:10 UTC,Clarify,6,7,1,639,149,6,Not Available,MEMBER,False,2015-04-30T19:18:21Z,https://github.com/grpc/grpc-java/pull/342#discussion_r29181386,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,18022288,2353,2489413,84168022,91,This may confuse readers. Added explanation in javadoc.,537507468,2016-10-19 21:11:22 UTC,Clarify,8,119,10,1469,43,18,4779759,MEMBER,True,2016-11-15T20:05:52Z,https://github.com/grpc/grpc-java/pull/2353#discussion_r84168022,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,15634147,1992,7147247,70151528,111,I see. Changed it to what Kun suggested.,471935832,2016-07-08 22:45:03 UTC,Clarify,6,37,1,745,5,5,10237908,CONTRIBUTOR,True,2016-07-09T00:25:26Z,https://github.com/grpc/grpc-java/pull/1992#discussion_r70151528,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,16223983,2159,5551325,74834852,22,"Because of the way CIS works, I think this is either a no-op or objectively better.  There are like 3 copies in the current code path, this cuts it down to be at most 1 or 2 based on message size.  

Before (large message): 
1.  Copy from network to direct byte buffer (netty)
2.  Copy from Composite Byte buffer to CIS's byte array (4k chunks)
3.  Copy from 4k byte chunks into CIS's single large byte array (aka ""the buffer"")
4.  Copy from ""the buffer"" reading out into a ByteString or byte array to read out the field from the proto.

There is a lot of bad stuff going on in CIS.  The above code path also uses the constructor that thinks data is mutable, so it always copies in step 4.

After:
1.  Copy from network to direct byte buffer (netty)
2.  Copy from Composite Byte Buffer to single Heap byte buffer.
3.  Pass that array to CIS via unsafe.  (and is now has  immutable set)
4.  Copy from ""the buffer"" reading out into a ByteString or byte array to read out the field from the proto.

The after case also opens up the possibility of using aliasing, which would avoid the copy in step 4 in both cases (but may have other side effects).

Since Netty is passing Direct byte buffers instead of heap, we always have to copy anyway, because CIS is centered around have a byte array.  The only way to avoid this copy here is if netty was using Heap byte buffers, and there was only one (a.k.a. a tiny message).  The same goes for OkHTTP.  

All of this is to say that I think copying here is almost certainly the right thing to do, and we would have to have a very contorted scenario for it to not be right.  @nmittler could maybe change the Protobuf API to make this less painful? :)",492756169,2016-08-15 21:05:12 UTC,Clarify,12,43,1,35,10,2,8943572,MEMBER,True,2016-08-17T22:45:37Z,https://github.com/grpc/grpc-java/pull/2159#discussion_r74834852,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,6642758,193,1014305,26351265,25,checkNotNull?,229226181,2015-03-12 21:37:51 UTC,ynQuestion,2,4,1,125,32,6,9046588,MEMBER,False,2015-03-12T23:06:24Z,https://github.com/grpc/grpc-java/pull/193#discussion_r26351265,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,19042157,2430,3695855,89238986,23,"Good catch! Thanks, fixed.",560812873,2016-11-23 00:22:45 UTC,Emphasis,0,2,2,19,2,2,5067076,CONTRIBUTOR,True,2016-11-23T00:22:45Z,https://github.com/grpc/grpc-java/pull/2430#discussion_r89238986,0,modified,8,2,10
16827424,https://api.github.com/repos/grpc/grpc-java,9426544,1048,1014305,42297347,92,Consider not passing in executor and using GrpcUtil.SHARED_CHANNEL_EXECUTOR,331834068,2015-10-16 20:35:18 UTC,Reject,5,61,1,1511,214,29,9053690,MEMBER,False,2015-10-21T00:29:22Z,https://github.com/grpc/grpc-java/pull/1048#discussion_r42297347,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,9426544,1048,1014305,41198344,89,"Oh, I think I see, because you also have nsAuthority, which I assume stands for ""name server authority"". That is unfortunate... I'm not sure how to be differentiate those, since the alternatives I'm thinking about would also be confusing.",322066944,2015-10-05 19:11:20 UTC,Clarify,5,61,1,1511,214,29,9053690,MEMBER,False,2015-10-21T00:29:22Z,https://github.com/grpc/grpc-java/pull/1048#discussion_r41198344,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,24661424,3021,2667165,117813633,30,"Updated diff to include changes for Authenticator, which was originally intended separate diff.",696236098,2017-05-22 18:26:20 UTC,nAnswer,3,34,19,775,132,27,2819812,CONTRIBUTOR,True,2017-10-12T21:52:21Z,https://github.com/grpc/grpc-java/pull/3021#discussion_r117813633,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,21998103,2791,1014305,104461538,8,"Go ahead and leave the `@ExperimentalApi` annotation, to show that we can actually delete it.",637508238,2017-03-06 16:45:27 UTC,nAnswer,6,2,2,11,19,4,9053690,MEMBER,False,2017-03-07T02:36:11Z,https://github.com/grpc/grpc-java/pull/2791#discussion_r104461538,0,modified,6,2,8
16827424,https://api.github.com/repos/grpc/grpc-java,21619375,2743,6634728,102837816,69,Done. Also fixed RoundRobinLoadBalancer.,628601600,2017-02-23 22:39:37 UTC,Clarify,5,24,2,3538,10944,39,9053690,CONTRIBUTOR,True,2017-02-25T00:36:20Z,https://github.com/grpc/grpc-java/pull/2743#discussion_r102837816,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,30233435,3604,1014305,147017179,31,"Simply say they must use grpc-java 1.4.0 or later and remove ""Conflicts w/ Embedded Tomcat"" from the table.",818509474,2017-10-25 23:51:49 UTC,Clarify,12,19,8,59,1,2,2811396,MEMBER,False,2017-10-30T17:42:10Z,https://github.com/grpc/grpc-java/pull/3604#discussion_r147017179,6,modified,2,0,2
16827424,https://api.github.com/repos/grpc/grpc-java,15297934,1898,6634728,65971736,5,ditto for testing out `CallOptions` propagation,459858493,2016-06-06 21:22:38 UTC,Reject,2,4,1,136,49,13,4779759,CONTRIBUTOR,False,2016-06-06T23:47:30Z,https://github.com/grpc/grpc-java/pull/1898#discussion_r65971736,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,26278382,3204,5551325,126541005,2,Was this intentional?,733956549,2017-07-10 21:24:10 UTC,whQuestion,3,12,4,164,144,8,9053690,MEMBER,False,2017-07-10T23:33:13Z,https://github.com/grpc/grpc-java/pull/3204#discussion_r126541005,2,modified,2,2,4
16827424,https://api.github.com/repos/grpc/grpc-java,16103160,2140,1014305,74789196,13,"It makes the method `final`. It used to be final in `AbstractStream2` but for making isReady() return `false` on cancellation it is now overridable. But it shouldn't need to be overridden in each transport.

Eventually, this method should probably also handle cancellation, but I didn't want to expand the scope of the PR since it is already large enough.",488018518,2016-08-15 16:28:13 UTC,Clarify,12,54,1,1188,308,17,2811396,MEMBER,True,2016-10-03T18:11:38Z,https://github.com/grpc/grpc-java/pull/2140#discussion_r74789196,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,10397436,1201,6634728,44558947,48,"Please make the comment more accurate. ""this would likely return null"" -> ""this method would likely return null""",344317635,2015-11-11 16:21:29 UTC,Other,4,18,1,162,46,2,8943572,CONTRIBUTOR,False,2015-11-12T01:50:37Z,https://github.com/grpc/grpc-java/pull/1201#discussion_r44558947,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,24368700,2991,1014305,116873838,44,"Instead of this note, could we say that it matches case-insensitively?",693555246,2017-05-16 22:30:25 UTC,Emphasis,2,16,10,88,8,9,2819812,MEMBER,False,2017-05-18T00:00:16Z,https://github.com/grpc/grpc-java/pull/2991#discussion_r116873838,8,modified,1,0,1
16827424,https://api.github.com/repos/grpc/grpc-java,25196498,3064,1014305,121546570,1,This needs to move folder/package as well.,713221538,2017-06-12 22:54:55 UTC,Statement,1,32,8,405,20,4,2819812,MEMBER,False,2017-06-13T15:41:42Z,https://github.com/grpc/grpc-java/pull/3064#discussion_r121546570,5,modified,42,40,82
16827424,https://api.github.com/repos/grpc/grpc-java,21541745,2740,6634728,102585491,35,"Oh sorry, I must have gone out of my mind. The args are *consumed* by LB impls, so an abstract class as described in #2737 is most appropriate. ",627472018,2017-02-22 22:00:40 UTC,Clarify,12,65,12,319,151,16,9053690,CONTRIBUTOR,False,2017-03-03T18:40:37Z,https://github.com/grpc/grpc-java/pull/2740#discussion_r102585491,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,21541745,2740,6634728,102865883,12,Please keep the javadoc and add a link to the new signature.,630175732,2017-02-24 02:08:07 UTC,Statement,12,65,12,319,151,16,9053690,CONTRIBUTOR,False,2017-03-03T18:40:37Z,https://github.com/grpc/grpc-java/pull/2740#discussion_r102865883,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,12736343,1506,9209972,56253317,32,This has been addressed in other place. See `ProtocolNegotiators` changes.,399758872,2016-03-15 22:37:08 UTC,Clarify,21,47,2,273,14,17,Not Available,COLLABORATOR,True,2016-03-16T22:32:50Z,https://github.com/grpc/grpc-java/pull/1506#discussion_r56253317,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,18125118,2365,1014305,84938379,111,RFC 2817§5.3 says any 2xx response is successful. I do see that Netty is apparently accepting 200 only. It looks like [C core is following the RFC](https://github.com/grpc/grpc/blob/master/src/core/ext/client_channel/http_connect_handshaker.c#L168).,540970727,2016-10-25 16:01:25 UTC,Clarify,5,29,1,233,21,11,Not Available,MEMBER,False,2016-12-05T00:35:39Z,https://github.com/grpc/grpc-java/pull/2365#discussion_r84938379,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,9152707,996,5551325,39219761,13,Should these be noops?  Adding abstract methods to a public class will break people right?,307379649,2015-09-10 20:00:12 UTC,Clarify,4,7,2,143,16,8,Not Available,MEMBER,False,2017-08-28T20:08:26Z,https://github.com/grpc/grpc-java/pull/996#discussion_r39219761,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,33696686,3981,1014305,163428726,82,Alternatively:  The returned client stream is not yet _(or already)_ started.,896744035,2018-01-24 01:05:28 UTC,Clarify,5,18,3,97,51,3,4779759,MEMBER,False,2018-01-24T01:08:39Z,https://github.com/grpc/grpc-java/pull/3981#discussion_r163428726,1,modified,10,5,15
16827424,https://api.github.com/repos/grpc/grpc-java,15531571,1952,1014305,68118786,97,And it looks like the usage in `inprocessTransportInboundFlowControl()` was completely useless since no path could call acquire when the count was below zero. I'll glance at that more and remove it if it is indeed unnecessary.,467006031,2016-06-22 19:27:47 UTC,nAnswer,5,4,1,326,66,6,2811396,MEMBER,True,2016-06-27T20:36:11Z,https://github.com/grpc/grpc-java/pull/1952#discussion_r68118786,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,10227966,1182,3664876,43677196,17,The entire class is marked as `@ExperimentalApi`.  I suspect that should be sufficient.,340084625,2015-11-02 19:26:25 UTC,Clarify,3,11,3,128,63,8,Not Available,MEMBER,True,2015-11-02T20:47:51Z,https://github.com/grpc/grpc-java/pull/1182#discussion_r43677196,0,modified,19,1,20
16827424,https://api.github.com/repos/grpc/grpc-java,36423041,4227,1014305,177270075,180,Why is this consulting `deadline`? I thought we agreed that `graceTimeInNanos` would be relative to the second GOAWAY.,957373945,2018-03-26 23:56:50 UTC,whQuestion,1,24,5,331,40,2,4779759,MEMBER,False,2018-03-28T21:54:58Z,https://github.com/grpc/grpc-java/pull/4227#discussion_r177270075,1,modified,21,32,53
16827424,https://api.github.com/repos/grpc/grpc-java,23320604,2895,12473429,110787600,4,"```getSuperclass()``` returns ```null``` for Object or other base types that don't have parents, so this serves as the base case.    I've fixed style issue.",667356446,2017-04-10 23:42:24 UTC,Clarify,0,4,1,108,0,2,18316330,CONTRIBUTOR,True,2017-04-10T23:42:24Z,https://github.com/grpc/grpc-java/pull/2895#discussion_r110787600,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,19382692,2479,6634728,92909882,218,"Please also have a test for name resolution success after an error, to make sure it can recover from it.",575292520,2016-12-17 00:58:56 UTC,nAnswer,12,139,32,1119,0,4,9053690,CONTRIBUTOR,False,2016-12-21T10:50:31Z,https://github.com/grpc/grpc-java/pull/2479#discussion_r92909882,16,modified,29,0,29
16827424,https://api.github.com/repos/grpc/grpc-java,7729762,495,1014305,31184665,2,Revert. There was no need to run gradle wrapper.,263456581,2015-05-27 19:51:12 UTC,Statement,1,4,1,87,11,2,1962333,MEMBER,False,2015-05-28T00:17:13Z,https://github.com/grpc/grpc-java/pull/495#discussion_r31184665,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,15721610,2023,1014305,71625086,42,"Use JavaDoc here, and as a sentence:    ```  /** Simple client that requests a greeting from {@link HelloWorldServer}. */  ```",476555513,2016-07-20 23:28:32 UTC,nAnswer,4,40,24,3447,4,21,2811396,MEMBER,False,2016-07-21T21:29:56Z,https://github.com/grpc/grpc-java/pull/2023#discussion_r71625086,19,added,89,0,89
16827424,https://api.github.com/repos/grpc/grpc-java,9082774,892,3664876,38210054,107,why not just call `setListener`?,306715755,2015-08-28 13:11:58 UTC,whQuestion,2,14,1,335,4,2,8943572,MEMBER,False,2015-08-28T20:00:38Z,https://github.com/grpc/grpc-java/pull/892#discussion_r38210054,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,26278658,3205,1014305,126486164,21,"> The hostnameVerifier is only used if an sslSocketFactory is set.    Actually, that's a bit misleading. You can use TLS without manually setting the `sslSocketFactory()`; grpc will just create one for you (in `createSocketFactory()`).",733854678,2017-07-10 17:29:21 UTC,Clarify,10,7,1,117,20,5,2811396,MEMBER,False,2017-07-10T22:09:10Z,https://github.com/grpc/grpc-java/pull/3205#discussion_r126486164,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,10227966,1182,1014305,43676820,17,Do we want this to be `@Internal`?,340084625,2015-11-02 19:23:15 UTC,ynQuestion,3,11,3,128,63,8,Not Available,MEMBER,False,2015-11-02T20:47:51Z,https://github.com/grpc/grpc-java/pull/1182#discussion_r43676820,0,modified,19,1,20
16827424,https://api.github.com/repos/grpc/grpc-java,30621632,3647,6634728,148848862,103,"I wonder if this and its related logic can be removed.
It was needed because the old StatsContext didn't provide a way to tell if it's empty, thus the metadata was always sent. Now that you have implemented the optimization to skip sending metdata if TagContext is empty, we should no longer need the metadata form that represents ""no tag"".",825779846,2017-11-03 17:38:28 UTC,nAnswer,16,18,9,596,445,18,9053690,CONTRIBUTOR,False,2017-11-07T04:47:48Z,https://github.com/grpc/grpc-java/pull/3647#discussion_r148848862,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,19382692,2479,9209972,90721191,239,I think we don't and this is copy-paste leftover. Fxied.,569478195,2016-12-02 21:17:11 UTC,Statement,12,139,32,1119,0,4,9053690,COLLABORATOR,True,2016-12-21T10:50:31Z,https://github.com/grpc/grpc-java/pull/2479#discussion_r90721191,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8141876,562,3664876,34386921,27,"Yup, fair enough.  I said that realizing that there would be nothing else in a `context` package or module, which would seem rather odd. We can shelve this for now and defer to some later conversation on how to clearly identify what classes and interface compose our ""public"" API. ",279617295,2015-07-10 17:15:17 UTC,Clarify,8,133,1,1178,0,2,Not Available,MEMBER,False,2015-07-21T17:20:57Z,https://github.com/grpc/grpc-java/pull/562#discussion_r34386921,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,19382692,2479,7396743,90698249,94,question: should we remove `final`s?,569478195,2016-12-02 18:52:50 UTC,Other,12,139,32,1119,0,4,9053690,CONTRIBUTOR,False,2016-12-21T10:50:31Z,https://github.com/grpc/grpc-java/pull/2479#discussion_r90698249,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,11909788,1368,1014305,51465506,85,I don't see any change that would address my comment.,381256757,2016-02-01 19:16:12 UTC,Clarify,6,46,1,303,414,31,8943572,MEMBER,False,2016-02-01T20:56:49Z,https://github.com/grpc/grpc-java/pull/1368#discussion_r51465506,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8141876,562,1014305,34583608,343,"Right, _because_ we aren't suppressing duplicate listeners, it seems remove should only remove one listener.

```java
context.addListener(this);
context.addListener(this);
// Here `this` gets notified twice
context.removeListener(this);
// But here it doesn't get notified at all
```

If we coalesced duplicate adds (like a set does) then the current remove behavior makes sense. But given we are treating this as a simple collection of listeners where duplicates are allowed, removal removing all instances is unexpected.",279712618,2015-07-14 13:49:43 UTC,Clarify,8,133,1,1178,0,2,Not Available,MEMBER,False,2015-07-21T17:20:57Z,https://github.com/grpc/grpc-java/pull/562#discussion_r34583608,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,30866291,3667,1014305,149224059,4,"Note that the message has not been sent here. It is simply queued. If the remote is applying push-back, it could be a long time until the message is sent (which is why the previous code was delaying until the future completed).",829287937,2017-11-06 22:33:17 UTC,Clarify,1,8,3,28,28,9,2819812,MEMBER,False,2017-11-09T19:04:37Z,https://github.com/grpc/grpc-java/pull/3667#discussion_r149224059,0,modified,1,0,1
16827424,https://api.github.com/repos/grpc/grpc-java,14441170,1793,6634728,62108843,101,Right. Reverted this line.,438780603,2016-05-04 20:29:00 UTC,Statement,3,8,1,167,146,11,9053690,CONTRIBUTOR,True,2016-05-05T00:12:44Z,https://github.com/grpc/grpc-java/pull/1793#discussion_r62108843,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,20775600,2658,6634728,98025941,23,"No, it won't. Next version will still have two signatures, while `LoadBalancer2` will just be an alias of `LoadBalancer`.

At 1.1, we expect users of stock LoadBalancers to keep using the first signature, and users of custom LoadBalancers to migrate to the second signature. Therefore, neither of them are deprecated.

At 1.2, the one with `LoadBalancer2` will be deprecated.",606148516,2017-01-26 16:03:25 UTC,Clarify,2,2,2,104,8,6,9053690,CONTRIBUTOR,True,2017-01-26T16:03:25Z,https://github.com/grpc/grpc-java/pull/2658#discussion_r98025941,1,modified,19,0,19
16827424,https://api.github.com/repos/grpc/grpc-java,19128551,2443,1014305,90083296,212,"This seems strange, but I'm willing to wait and see how it all fits together.",566347310,2016-11-29 19:05:11 UTC,nAnswer,2,42,12,645,17,4,9053690,MEMBER,False,2016-12-01T00:15:51Z,https://github.com/grpc/grpc-java/pull/2443#discussion_r90083296,6,modified,2,2,4
16827424,https://api.github.com/repos/grpc/grpc-java,8312845,680,3664876,36904633,28,"Agreed that this implementation is a bit hacky :).

Actually the more I think about it, I don't think what we really need is an `InterceptorFactory`, not `Interceptor`. The call to create an interceptor chain should just take a list of these factories which will look like:

```java
interface InterceptorFactory {
    ClientCallFactory newInterceptor(ClientCallFactory next);
}
```

I'll sketch this out and update the PR shortly.",279106016,2015-08-12 17:45:04 UTC,Clarify,25,20,4,946,830,50,Not Available,MEMBER,True,2015-08-14T17:42:58Z,https://github.com/grpc/grpc-java/pull/680#discussion_r36904633,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8312845,680,7689743,36154224,28,"I feel the design to make the interface a stateful abstract class is a bit concerning. In many cases, an interceptor chain can be created as an immutable object.

Two alternatives:
- keep the old design and drop implementation of CallFactory
- strengthen the contract and introduce getNext as abstract/interface method. Then subclasses decide how to create and store chaining.",279106016,2015-08-04 01:11:00 UTC,Clarify,25,20,4,946,830,50,Not Available,NONE,False,2015-08-14T17:42:58Z,https://github.com/grpc/grpc-java/pull/680#discussion_r36154224,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,23447666,2912,6634728,112490879,205,This could be just a singleton object.,673213885,2017-04-20 15:54:13 UTC,Statement,3,15,8,301,51,2,8943572,CONTRIBUTOR,False,2017-04-20T20:53:28Z,https://github.com/grpc/grpc-java/pull/2912#discussion_r112490879,5,modified,9,5,14
16827424,https://api.github.com/repos/grpc/grpc-java,17079226,2274,6174876,78903848,433,can we simplify that logic and put it into a small method?,513016844,2016-09-15 07:30:58 UTC,nAnswer,11,80,1,401,325,8,8943572,COLLABORATOR,False,2016-09-19T21:33:08Z,https://github.com/grpc/grpc-java/pull/2274#discussion_r78903848,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,27145413,3300,6634728,131272695,2,"In `LbHelperImpl.updateBalancingState()`, the state and the picker should be ignored if `loadBalancer != lb`, so that the channel ignores any updates from a balancer that has been shutdown and discarded.",752278103,2017-08-03 22:10:58 UTC,Clarify,1,12,6,107,43,4,4779759,CONTRIBUTOR,False,2017-08-04T18:34:55Z,https://github.com/grpc/grpc-java/pull/3300#discussion_r131272695,3,modified,3,0,3
16827424,https://api.github.com/repos/grpc/grpc-java,15811717,2067,7524125,73773771,304,changed to compare sendTime,486639952,2016-08-05 23:39:52 UTC,Statement,10,84,1,517,0,2,8943572,CONTRIBUTOR,True,2016-08-17T22:19:45Z,https://github.com/grpc/grpc-java/pull/2067#discussion_r73773771,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,15811717,2067,1014305,73428746,171,"This should actually propagate out of this method. By suppressing the interruption here, it seems like readers could block forever via a race with `shutdown` being set to `true`.",486639952,2016-08-03 21:53:57 UTC,nAnswer,10,84,1,517,0,2,8943572,MEMBER,False,2016-08-17T22:19:45Z,https://github.com/grpc/grpc-java/pull/2067#discussion_r73428746,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,10407293,1202,6174876,44536266,13,I am using `directExecutor()` and not `newDirectExecutorService()`. Unsure why `newDirectExecutorService()` has been used so far mostly?,344721773,2015-11-11 13:21:33 UTC,Clarify,20,10,1,344,32,14,Not Available,COLLABORATOR,True,2015-11-19T19:00:41Z,https://github.com/grpc/grpc-java/pull/1202#discussion_r44536266,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7799656,505,3664876,31561549,136,Reorganized the test ... there is no longer a sleep.,265918343,2015-06-02 17:31:51 UTC,nAnswer,10,46,8,370,85,14,Not Available,MEMBER,True,2015-06-03T16:33:27Z,https://github.com/grpc/grpc-java/pull/505#discussion_r31561549,0,added,147,0,147
16827424,https://api.github.com/repos/grpc/grpc-java,13771814,1656,6174876,59261707,29,`equals` or `stream.id()`,423416327,2016-04-11 19:02:27 UTC,Clarify,12,73,1,717,523,15,2811396,COLLABORATOR,False,2016-05-23T19:39:03Z,https://github.com/grpc/grpc-java/pull/1656#discussion_r59261707,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,36314758,4217,2667165,174639894,12,"You're right, this needs to be volatile and set while holding the lock.",944059620,2018-03-14 23:27:02 UTC,Reject,5,11,8,80,46,4,2819812,CONTRIBUTOR,True,2018-03-23T22:05:50Z,https://github.com/grpc/grpc-java/pull/4217#discussion_r174639894,0,modified,10,2,12
16827424,https://api.github.com/repos/grpc/grpc-java,8397056,632,6634728,34830375,223,What's the proper way to fail in the Listener? Throwing an exception?,279850070,2015-07-16 17:52:06 UTC,whQuestion,1,13,4,143,132,11,9053690,CONTRIBUTOR,True,2015-07-17T16:10:07Z,https://github.com/grpc/grpc-java/pull/632#discussion_r34830375,0,modified,80,90,170
16827424,https://api.github.com/repos/grpc/grpc-java,27884637,3381,1014305,134891205,9,Doh. Done.    When there's a failure you are sort of required to comment it out in order to debug where the failure is coming from. It's unfortunate.,767075027,2017-08-23 22:54:59 UTC,whQuestion,0,2,3,39,8,5,2811396,MEMBER,True,2017-09-07T23:55:56Z,https://github.com/grpc/grpc-java/pull/3381#discussion_r134891205,0,modified,10,1,11
16827424,https://api.github.com/repos/grpc/grpc-java,22810891,2858,1014305,108468814,120,Why get rid of the inner TaskRunner class?,656353557,2017-03-28 16:23:26 UTC,whQuestion,2,7,1,418,87,3,8943572,MEMBER,False,2017-03-29T23:41:25Z,https://github.com/grpc/grpc-java/pull/2858#discussion_r108468814,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,9442940,1072,5551325,40448658,193,"Should this comment be updated in light of this change?  Specifically ""we avoid wasting resources getting the nanoTime() "" ",315897922,2015-09-25 14:31:58 UTC,Clarify,3,31,1,706,321,5,9053690,MEMBER,False,2015-09-30T01:50:11Z,https://github.com/grpc/grpc-java/pull/1072#discussion_r40448658,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8177821,574,6634728,33734589,12,@ejona86 I have added the old newCall() back to allow an easier transition for its callers.,278402569,2015-07-01 21:09:43 UTC,Clarify,3,20,1,719,243,28,9053690,CONTRIBUTOR,True,2015-07-07T21:28:45Z,https://github.com/grpc/grpc-java/pull/574#discussion_r33734589,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,19706165,2513,5551325,92242329,235,@ejona86  declined PR #2385 on the grounds that StreamRecoder was going to be deleted.      You probably don't want to use it here.,575297378,2016-12-13 19:07:40 UTC,Reject,1,24,4,480,0,3,5067076,MEMBER,False,2016-12-20T22:37:37Z,https://github.com/grpc/grpc-java/pull/2513#discussion_r92242329,0,added,336,0,336
16827424,https://api.github.com/repos/grpc/grpc-java,9117666,953,7000520,38725726,261,Compare code instead.,307016446,2015-09-04 04:53:42 UTC,Statement,2,23,1,483,57,2,10237908,CONTRIBUTOR,False,2015-09-05T00:16:12Z,https://github.com/grpc/grpc-java/pull/953#discussion_r38725726,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,10397436,1201,6634728,44610351,128,This is awkward. Maybe just use a mock to return the proper authority?,345017656,2015-11-12 00:07:04 UTC,nAnswer,4,18,1,162,46,2,8943572,CONTRIBUTOR,False,2015-11-12T01:50:37Z,https://github.com/grpc/grpc-java/pull/1201#discussion_r44610351,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8216404,580,7000520,34090045,6,"I added tcnative because the server would fail without it as:
```
simonma@simonma-linux:~/github/grpc-java$ ./run-test-server.sh 
Gradle is no longer run automatically. Make sure to run './gradlew installDist' or
'./gradlew :grpc-interop-testing:installDist' after any changes.

Using fake CA for TLS certificate. Test clients should expect host
*.test.google.fr and our test CA. For the Java test client binary, use:
--server_host_override=foo.test.google.fr --use_test_ca=true

Exception in thread ""main"" java.lang.NoClassDefFoundError: org/apache/tomcat/jni/CertificateVerifier
	at io.netty.handler.ssl.SslContext.newServerContextInternal(SslContext.java:403)
	at io.netty.handler.ssl.SslContextBuilder.build(SslContextBuilder.java:207)
	at io.grpc.testing.integration.TestServiceServer.start(TestServiceServer.java:138)
	at io.grpc.testing.integration.TestServiceServer.main(TestServiceServer.java:76)
Caused by: java.lang.ClassNotFoundException: org.apache.tomcat.jni.CertificateVerifier
	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	... 4 more

```

And the description of https://github.com/netty/netty/commit/54a27ef07ecd5977da52f1bba3e58e615a2ba026 made me added the tcnative dependency.",277496912,2015-07-07 19:00:52 UTC,Clarify,0,3,1,12,9,4,Not Available,CONTRIBUTOR,True,2015-07-07T21:07:41Z,https://github.com/grpc/grpc-java/pull/580#discussion_r34090045,0,modified,5,4,9
16827424,https://api.github.com/repos/grpc/grpc-java,21619375,2743,5551325,102833204,227,checkNotNull for visible constructor,628601600,2017-02-23 22:15:57 UTC,Statement,5,24,2,3538,10944,39,9053690,MEMBER,False,2017-02-25T00:36:20Z,https://github.com/grpc/grpc-java/pull/2743#discussion_r102833204,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,15588077,1977,5551325,68445626,100,Where do these numbers come from?  IIRC we allow user code to send pings too.  How do you tell your pings from theirs?,469089847,2016-06-24 18:55:53 UTC,whQuestion,6,45,18,685,39,7,Not Available,MEMBER,False,2016-07-07T23:21:00Z,https://github.com/grpc/grpc-java/pull/1977#discussion_r68445626,7,modified,4,0,4
16827424,https://api.github.com/repos/grpc/grpc-java,18311973,2386,5551325,88361548,41,There should be a ServerServiceDefinition overload here too right?,553811585,2016-11-17 00:17:10 UTC,ynQuestion,11,75,6,13269,8,52,5067076,MEMBER,False,2016-11-28T18:48:22Z,https://github.com/grpc/grpc-java/pull/2386#discussion_r88361548,3,modified,2,2,4
16827424,https://api.github.com/repos/grpc/grpc-java,13771814,1656,6174876,59256338,14,mehh nvm. it is documented :sweat_smile: ,423416327,2016-04-11 18:30:45 UTC,Statement,12,73,1,717,523,15,2811396,COLLABORATOR,False,2016-05-23T19:39:03Z,https://github.com/grpc/grpc-java/pull/1656#discussion_r59256338,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7530929,431,6773014,30346484,43,Its definitely not. I've kept the baseline flush suppression and add a 'flush' param to the enqueue methods to accomodate this. Ill add the remaining explicit flush suppression in a follow up,256829053,2015-05-14 16:13:49 UTC,nAnswer,9,67,3,445,129,13,Not Available,CONTRIBUTOR,True,2015-05-15T16:19:26Z,https://github.com/grpc/grpc-java/pull/431#discussion_r30346484,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7799656,505,1014305,31533636,177,I'd feel a lot better if ctx.close() was also called here.,265918343,2015-06-02 13:15:27 UTC,Clarify,10,46,8,370,85,14,Not Available,MEMBER,False,2015-06-03T16:33:27Z,https://github.com/grpc/grpc-java/pull/505#discussion_r31533636,0,modified,74,48,122
16827424,https://api.github.com/repos/grpc/grpc-java,7649713,472,3664876,30837546,11,"It appears this is available for OSX, linux, and windows. native-epoll, however is only available for linux.",261053386,2015-05-21 17:22:53 UTC,nAnswer,1,6,1,44,54,3,2811396,MEMBER,False,2015-05-21T20:10:28Z,https://github.com/grpc/grpc-java/pull/472#discussion_r30837546,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,36839994,4266,6634728,177824522,46,The `unsafe` is already being used in `io/grpc/internal/CensusTracingModule.java`. Using it here doesn't make it any worse. It's your call.,957380639,2018-03-28 17:16:20 UTC,Clarify,2,22,9,321,97,7,2819812,CONTRIBUTOR,False,2018-04-03T20:21:41Z,https://github.com/grpc/grpc-java/pull/4266#discussion_r177824522,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,15242416,1897,1014305,65952338,6,"Ideally something like ""can be flattened into a single list"" and ""sublists are consider[ed] equivalent"" would be part of the method documentation and not the `@param`. `@param` is best when it doesn't grow too long.

That would also make it easier to go into more detail what is meant by ""equivalent."" If this is analogous to `EquivalentAddressGroup` we could just say `in the same way as {@link EquivalentAddressGroup}.`",458357339,2016-06-06 19:25:36 UTC,Clarify,7,14,1,77,50,12,2811396,MEMBER,False,2016-06-09T03:11:27Z,https://github.com/grpc/grpc-java/pull/1897#discussion_r65952338,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,11909788,1368,1014305,51213701,9,It isn't really clear the format/meaning of name. Providing an example would go along way.,380458837,2016-01-29 01:08:00 UTC,nAnswer,6,46,1,303,414,31,8943572,MEMBER,False,2016-02-01T20:56:49Z,https://github.com/grpc/grpc-java/pull/1368#discussion_r51213701,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,24128328,2975,5551325,115050831,76,Please be consistent with underscores and dashes for name rules.  I think underscores are more common.,684960465,2017-05-05 17:40:10 UTC,Clarify,12,20,19,560,0,13,2811396,MEMBER,False,2017-06-20T04:21:27Z,https://github.com/grpc/grpc-java/pull/2975#discussion_r115050831,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,22973573,2871,1014305,109266045,10,"`lifecycleManager` is used in `statusFromFailedFuture`, so it must remain a field. I left `keepaliveManager` because it is used by the test... although I agree that is questionable given the test didn't catch this bug.",659676706,2017-03-31 23:18:53 UTC,Clarify,1,7,2,11,11,1,2811396,MEMBER,True,2017-03-31T23:32:19Z,https://github.com/grpc/grpc-java/pull/2871#discussion_r109266045,0,modified,14,7,21
16827424,https://api.github.com/repos/grpc/grpc-java,28534303,3454,1014305,141180876,32,"You can generally `@SuppressWarnings` for false positives like that, along with a comment saying we only mutate from one thread.",789456103,2017-09-26 20:52:33 UTC,Emphasis,10,63,22,931,94,25,2819812,MEMBER,False,2017-11-02T22:16:20Z,https://github.com/grpc/grpc-java/pull/3454#discussion_r141180876,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,25708644,3119,1014305,140920536,51,Make this a simple `boolean` field in this anonymous StreamingGreeterImplBase class. There's no need for synchronization and since we're already creating a class we can use a field instead of a final.,791110986,2017-09-25 22:56:48 UTC,Clarify,14,30,18,405,0,4,2811396,MEMBER,False,2017-09-26T15:49:12Z,https://github.com/grpc/grpc-java/pull/3119#discussion_r140920536,17,modified,17,8,25
16827424,https://api.github.com/repos/grpc/grpc-java,26244607,3198,6634728,126194954,61,"This field aren't necessary any more. Since `storage` stays `null` after throwing, next time it's likely to fail and throw again.",731453061,2017-07-07 16:56:40 UTC,Clarify,2,3,3,24,36,1,Not Available,CONTRIBUTOR,False,2017-07-07T17:59:54Z,https://github.com/grpc/grpc-java/pull/3198#discussion_r126194954,0,modified,26,36,62
16827424,https://api.github.com/repos/grpc/grpc-java,15886121,2089,1014305,72867333,134,Using a new channel each call is an anti-pattern. Maybe instead of we have a single instance in `RouteGuideActivity` (maybe initialized in `onCreate()`) and just shut it down in `onDestroy()`?,483734382,2016-07-29 22:02:32 UTC,Clarify,1,21,1,1144,0,42,10237908,MEMBER,False,2016-08-03T21:53:01Z,https://github.com/grpc/grpc-java/pull/2089#discussion_r72867333,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8542530,644,6773014,35131638,306,When the transport receives a partial message and the application has not requested any messages yet we enqueue a Frame with stream==null & bytes to return.,282742488,2015-07-21 15:46:37 UTC,nAnswer,5,52,2,744,317,25,Not Available,CONTRIBUTOR,True,2017-08-28T20:08:26Z,https://github.com/grpc/grpc-java/pull/644#discussion_r35131638,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,20309000,2588,5551325,95671341,7,"Yes, the extra finals are not needed. I secretly suspect that the final added to the class might need some transition period internally, so I don't want to lose the finals  in that case.  I would be happy to remove them once this is merged internally.",594982145,2017-01-11 21:03:34 UTC,Clarify,0,6,4,119,27,5,8943572,MEMBER,True,2017-01-12T01:07:20Z,https://github.com/grpc/grpc-java/pull/2588#discussion_r95671341,0,modified,1,1,2
16827424,https://api.github.com/repos/grpc/grpc-java,20192009,2571,1014305,95016158,57,I don't see any value avoiding creating the small singleton for testing. But meh.,592375784,2017-01-06 20:40:28 UTC,Reject,8,17,5,36,11,3,Not Available,MEMBER,False,2017-01-10T22:04:58Z,https://github.com/grpc/grpc-java/pull/2571#discussion_r95016158,0,modified,17,11,28
16827424,https://api.github.com/repos/grpc/grpc-java,15721610,2023,1014305,71624443,39,"We don't really want a public API like this. Instead, let's move this to `io.grpc.internal`, where it can remain public, but our users should know that they shouldn't use it.",476555513,2016-07-20 23:22:41 UTC,Reject,4,40,24,3447,4,21,2811396,MEMBER,False,2016-07-21T21:29:56Z,https://github.com/grpc/grpc-java/pull/2023#discussion_r71624443,19,added,57,0,57
16827424,https://api.github.com/repos/grpc/grpc-java,10843866,1259,5551325,46747270,63,Should this be an immutable copy of the list?,353186790,2015-12-05 00:01:22 UTC,Statement,2,47,1,7247,9,27,9053690,MEMBER,False,2015-12-17T19:40:37Z,https://github.com/grpc/grpc-java/pull/1259#discussion_r46747270,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,11070710,1282,5551325,47587989,69,Should this return something?,360365905,2015-12-15 01:53:12 UTC,Other,1,17,1,536,131,10,9053690,MEMBER,False,2015-12-17T18:15:11Z,https://github.com/grpc/grpc-java/pull/1282#discussion_r47587989,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,18096327,2360,5551325,85026152,48,Can there be duplicate method descriptors in here?,542442578,2016-10-25 23:49:43 UTC,ynQuestion,5,17,2,506,50,16,Not Available,MEMBER,False,2016-10-25T23:52:57Z,https://github.com/grpc/grpc-java/pull/2360#discussion_r85026152,1,modified,4,5,9
16827424,https://api.github.com/repos/grpc/grpc-java,24128328,2975,1014305,122553782,4,What is this target used for?,713460845,2017-06-17 00:05:22 UTC,whQuestion,12,20,19,560,0,13,2811396,MEMBER,False,2017-06-20T04:21:27Z,https://github.com/grpc/grpc-java/pull/2975#discussion_r122553782,7,modified,2,2,4
16827424,https://api.github.com/repos/grpc/grpc-java,14582820,1813,5551325,63404828,86,"Oops, forgot to rename.  Fixed.",446947278,2016-05-16 18:52:13 UTC,Clarify,5,19,1,127,30,8,8943572,MEMBER,True,2016-05-18T19:04:38Z,https://github.com/grpc/grpc-java/pull/1813#discussion_r63404828,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,22105414,2805,9209972,104818103,5,"nit: Since it's a public class, maybe worth adding short javadoc?",640018775,2017-03-08 00:37:42 UTC,Other,2,4,4,12,1,3,4779759,COLLABORATOR,False,2017-03-10T00:58:06Z,https://github.com/grpc/grpc-java/pull/2805#discussion_r104818103,0,modified,1,0,1
16827424,https://api.github.com/repos/grpc/grpc-java,32634924,3879,2667165,165128031,38,"This got mangled when fixing the rebase conflicts, fixed.",904027407,2018-01-31 17:32:28 UTC,Statement,1,38,10,418,46,7,2819812,CONTRIBUTOR,True,2018-02-03T00:36:46Z,https://github.com/grpc/grpc-java/pull/3879#discussion_r165128031,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,20676634,2639,12473429,98581428,10,I like this idea better.  Changed.,603690335,2017-01-31 01:18:01 UTC,Clarify,6,13,1,37,27,1,18316330,CONTRIBUTOR,True,2017-02-01T23:48:00Z,https://github.com/grpc/grpc-java/pull/2639#discussion_r98581428,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,32634924,3879,2667165,165126644,14,Removed stale comment,904027407,2018-01-31 17:27:51 UTC,Statement,1,38,10,418,46,7,2819812,CONTRIBUTOR,True,2018-02-03T00:36:46Z,https://github.com/grpc/grpc-java/pull/3879#discussion_r165126644,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,28705474,3471,5551325,139272678,9,Consider moving the prefix generating method to here.,784527100,2017-09-16 00:33:57 UTC,Statement,2,8,5,158,19,27,9053690,MEMBER,False,2017-09-25T20:43:41Z,https://github.com/grpc/grpc-java/pull/3471#discussion_r139272678,0,modified,7,0,7
16827424,https://api.github.com/repos/grpc/grpc-java,7263220,338,3664876,29162753,16,that sounds interesting ... how complex would that change be? Should it be in this PR or a follow-on?,249258454,2015-04-27 14:25:04 UTC,Clarify,4,49,14,488,3,6,Not Available,MEMBER,False,2015-04-29T20:21:16Z,https://github.com/grpc/grpc-java/pull/338#discussion_r29162753,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8020085,542,1014305,32648081,5,"Since you added the parser, it is probably a good idea to test it at this time too. Otherwise I think we will start using it and not realize it doesn't have tests. Should be easy.",271803507,2015-06-17 14:51:37 UTC,Clarify,9,23,1,150,0,6,Not Available,MEMBER,False,2015-06-17T22:47:50Z,https://github.com/grpc/grpc-java/pull/542#discussion_r32648081,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,30624851,3649,1014305,148374958,79,"Previously we weren't try-catching around cancel(). That honestly still sounds fine, but if you want the try-catch... sure. But I don't see any need for catching each type individually here.",824055053,2017-11-01 20:28:27 UTC,Clarify,0,6,2,45,12,1,8943572,MEMBER,False,2017-11-01T22:01:09Z,https://github.com/grpc/grpc-java/pull/3649#discussion_r148374958,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,20519378,2615,1014305,96681060,23,Go ahead and have a `@Deprecated` and `@ExperimentalApi` `attributes()` method that calls the new method. That is very easy to do and makes it much easier to migrate.,599772111,2017-01-18 16:53:37 UTC,Clarify,0,7,1,21,13,7,2811396,MEMBER,False,2017-01-18T17:17:53Z,https://github.com/grpc/grpc-java/pull/2615#discussion_r96681060,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,10418960,1203,6773014,45682128,59,"Agreed, removed and tidied up comment.",347905676,2015-11-24 00:24:51 UTC,Reject,4,41,1,722,80,12,9046588,CONTRIBUTOR,True,2015-12-02T23:34:41Z,https://github.com/grpc/grpc-java/pull/1203#discussion_r45682128,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,13771814,1656,6174876,62482524,66,**the** end point,441120505,2016-05-09 11:13:19 UTC,Clarify,12,73,1,717,523,15,2811396,COLLABORATOR,False,2016-05-23T19:39:03Z,https://github.com/grpc/grpc-java/pull/1656#discussion_r62482524,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,13771814,1656,5551325,62097428,66,"Why does the application need to keep track of whether the initial headers have been sent?  The idea of having a separate methods from writeHeaders is the right API abstraction.  

Having this extra boolean seems wrong.  If the application has to keep track of this anyway, the API might as well be:

writeHeaders(Metadata metadata, boolean isTrailers);

and just have one method.",438057689,2016-05-04 19:14:09 UTC,Clarify,12,73,1,717,523,15,2811396,MEMBER,False,2016-05-23T19:39:03Z,https://github.com/grpc/grpc-java/pull/1656#discussion_r62097428,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,19382692,2479,6634728,92909731,233,"It would be simpler if you just saved the Status you created, and `assertSame` here.",575292520,2016-12-17 00:56:22 UTC,Statement,12,139,32,1119,0,4,9053690,CONTRIBUTOR,False,2016-12-21T10:50:31Z,https://github.com/grpc/grpc-java/pull/2479#discussion_r92909731,16,modified,29,0,29
16827424,https://api.github.com/repos/grpc/grpc-java,15655299,1997,5551325,69228114,5,Please include the rationale for this value in the javadoc.,471974673,2016-06-30 23:38:25 UTC,Statement,2,8,3,30,11,9,Not Available,MEMBER,False,2016-07-07T20:15:30Z,https://github.com/grpc/grpc-java/pull/1997#discussion_r69228114,0,modified,2,2,4
16827424,https://api.github.com/repos/grpc/grpc-java,10781220,1248,1014305,46626096,233,No need to implement this. The default is NOOP. Ditto for onReady. Ditto for `startCallTreeServer`,351729874,2015-12-03 22:57:00 UTC,nAnswer,3,16,1,316,0,1,9046588,MEMBER,False,2016-02-17T18:57:47Z,https://github.com/grpc/grpc-java/pull/1248#discussion_r46626096,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,30233435,3604,475246,147777760,23,"ack & rewrote to ""if you are using""",818509474,2017-10-30 17:35:17 UTC,Clarify,12,19,8,59,1,2,2811396,CONTRIBUTOR,True,2017-10-30T17:42:10Z,https://github.com/grpc/grpc-java/pull/3604#discussion_r147777760,6,modified,2,0,2
16827424,https://api.github.com/repos/grpc/grpc-java,7312958,348,3664876,29442902,112,"For efficiency of applications that obey outbound flow control, I think that immediately calling back during a write (and requiring the application code to be reentrant) is probably the best approach, so long as the documentation is clear. WDYT?",251408330,2015-04-30 14:00:13 UTC,Clarify,17,42,2,431,127,26,Not Available,MEMBER,True,2015-05-04T18:52:18Z,https://github.com/grpc/grpc-java/pull/348#discussion_r29442902,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,15802880,2065,1014305,71257154,134,Can we use FINE here? Was using string concatenation instead of message formatting on purpose?,478267008,2016-07-19 00:52:10 UTC,nAnswer,1,8,1,53,45,1,9046588,MEMBER,False,2016-07-19T20:30:33Z,https://github.com/grpc/grpc-java/pull/2065#discussion_r71257154,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,14742942,1828,6634728,64461572,251,Maybe these two lines can be moved out of the synchronized block too?,449974087,2016-05-24 19:48:47 UTC,Clarify,2,10,1,210,102,5,2811396,CONTRIBUTOR,False,2016-05-24T21:40:15Z,https://github.com/grpc/grpc-java/pull/1828#discussion_r64461572,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,13771814,1656,1014305,62279848,72,"Trailers is graceful, cancel is an abort. Cancel is used for timeouts, for instance. I've copied part of the docs in `ServerStream.cancel()` and now say this is a clone of that method.",438057689,2016-05-06 01:30:46 UTC,Statement,12,73,1,717,523,15,2811396,MEMBER,True,2016-05-23T19:39:03Z,https://github.com/grpc/grpc-java/pull/1656#discussion_r62279848,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,20551858,2620,6634728,96743290,15,They should actually be package-private.,600402879,2017-01-18 21:56:41 UTC,Statement,0,2,2,16,27,7,2811396,CONTRIBUTOR,False,2017-01-19T17:48:31Z,https://github.com/grpc/grpc-java/pull/2620#discussion_r96743290,0,modified,2,5,7
16827424,https://api.github.com/repos/grpc/grpc-java,6852840,252,7000520,27541517,59,"I'm not sure, I don't know much about the Ciphers, what I'm referring to is actually the Netty code in https://github.com/netty/netty/blob/8eddeb1ddd958c872a59cc111cf036ede92c4882/handler/src/main/java/io/netty/handler/ssl/JdkSslContext.java, I noticed it's a bit different than what OkHttp used, since we only has Netty transport on the server, I'm making our config more align with Netty.",238532067,2015-04-01 00:55:32 UTC,nAnswer,7,27,1,211,14,5,1962333,CONTRIBUTOR,True,2015-04-08T04:42:57Z,https://github.com/grpc/grpc-java/pull/252#discussion_r27541517,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,13771814,1656,1014305,62278450,97,"I used the verbose name for sink because having additional sinks is highly likely. I went back-and-forth a lot on making additional sinks; I probably had multiple sinks ~5 times when developing this PR. It was important that I found a solution that could satisfy multiple sinks when necessary. Earlier designs did not support multiple sinks, which I felt would hamstring the design space.",438057689,2016-05-06 01:09:02 UTC,Clarify,12,73,1,717,523,15,2811396,MEMBER,True,2016-05-23T19:39:03Z,https://github.com/grpc/grpc-java/pull/1656#discussion_r62278450,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,15361873,1912,6634728,66695660,24,Please also switch terminology in the variable names in tests.,462705560,2016-06-10 23:56:09 UTC,Clarify,6,19,3,279,44,7,4779759,CONTRIBUTOR,False,2016-06-11T02:00:13Z,https://github.com/grpc/grpc-java/pull/1912#discussion_r66695660,1,modified,1,1,2
16827424,https://api.github.com/repos/grpc/grpc-java,10227966,1182,3664876,43679503,17,"Ok, I don't feel that strongly here.  I'll make the change.",340084625,2015-11-02 19:46:19 UTC,Statement,3,11,3,128,63,8,Not Available,MEMBER,True,2015-11-02T20:47:51Z,https://github.com/grpc/grpc-java/pull/1182#discussion_r43679503,0,modified,19,1,20
16827424,https://api.github.com/repos/grpc/grpc-java,10748830,1246,6634728,46496367,4,Also shut down loadBalancer?,351684915,2015-12-03 00:05:45 UTC,Other,2,1,1,35,5,2,2811396,CONTRIBUTOR,False,2015-12-03T17:56:34Z,https://github.com/grpc/grpc-java/pull/1246#discussion_r46496367,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,15588077,1977,5551325,68617538,103,How does this interact with user initiated pings?,470198737,2016-06-27 17:18:08 UTC,whQuestion,6,45,18,685,39,7,Not Available,MEMBER,False,2016-07-07T23:21:00Z,https://github.com/grpc/grpc-java/pull/1977#discussion_r68617538,12,modified,2,4,6
16827424,https://api.github.com/repos/grpc/grpc-java,26275569,3203,2021277,126299398,43,"You could get the byte code of all involved classes, manipulate some or allof them and load them in an isolated class loader. Have a look at ByteArrayClassLoader.",732192776,2017-07-09 08:44:34 UTC,nAnswer,7,4,2,36,35,1,2811396,NONE,False,2017-07-09T08:44:34Z,https://github.com/grpc/grpc-java/pull/3203#discussion_r126299398,1,modified,24,20,44
16827424,https://api.github.com/repos/grpc/grpc-java,33807978,3986,2489413,164227204,182,"I think this test code covers it

```java
assertEquals(
          new RetryPolicy(
              3, parseDouble(""2.1""), parseDouble(""2.2""), parseDouble(""3""),
              Arrays.asList(Code.UNAVAILABLE, Code.RESOURCE_EXHAUSTED)),
          retryPolicies.get(builder.setFullMethodName(""SimpleService1/not_exist"").build()));
```",898779158,2018-01-26 21:32:10 UTC,Clarify,3,21,5,345,3,5,4779759,MEMBER,True,2018-01-31T01:13:38Z,https://github.com/grpc/grpc-java/pull/3986#discussion_r164227204,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,24188131,2980,1014305,115775309,35,s/Thestub/The stub/,689221827,2017-05-10 15:36:21 UTC,Statement,1,9,3,254,0,6,4779759,MEMBER,False,2017-05-10T17:09:07Z,https://github.com/grpc/grpc-java/pull/2980#discussion_r115775309,1,modified,36,11,47
16827424,https://api.github.com/repos/grpc/grpc-java,7092681,301,1014305,28984360,4,Why do we need this?,248496014,2015-04-23 15:32:44 UTC,whQuestion,4,20,1,82,24,4,1962333,MEMBER,False,2015-04-27T21:08:09Z,https://github.com/grpc/grpc-java/pull/301#discussion_r28984360,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,9426544,1048,1014305,41165113,46,"This doesn't look like a great idea to me. I'd much rather Netty handle this, especially since most of the SocketAddresses we expect to be passed to Netty are Netty-specific.",322066944,2015-10-05 14:28:32 UTC,Clarify,5,61,1,1511,214,29,9053690,MEMBER,False,2015-10-21T00:29:22Z,https://github.com/grpc/grpc-java/pull/1048#discussion_r41165113,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,10838610,1258,1014305,46738248,28,"Actually, it was trying to verify something that was good. And in fact, now I'm pretty certain there is a bug here because `listener.closed` _will_ be called twice. The test didn't notice because stream is a mock.

Apart from the bug, would you feel better if line 161 was a reset(listener) instead? That does seem more appropriate.",353103667,2015-12-04 22:07:28 UTC,Clarify,4,4,1,50,26,4,2811396,MEMBER,True,2015-12-04T22:59:01Z,https://github.com/grpc/grpc-java/pull/1258#discussion_r46738248,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,10969981,1269,1014305,47274477,68,Use Guava's `Ticker` instead?,357309222,2015-12-10 19:44:00 UTC,Other,2,9,1,153,35,2,9053690,MEMBER,False,2015-12-11T18:40:40Z,https://github.com/grpc/grpc-java/pull/1269#discussion_r47274477,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,13654994,1637,6634728,58758269,86,"I don't have a preference between `compareTo()` and `isBefore()`.
@carl-mastrangelo, I understand your have a perspective for improving our test facilities to help our users, but I don't think the choice being made here is very related to such effort. I agree with @ejona86 that it's a discussion to have.
The testing techniques used in this PR look good to me. This PR does solve the flake problem that is currently blocking my work.",420366182,2016-04-06 18:35:13 UTC,Clarify,2,18,2,191,92,3,2811396,CONTRIBUTOR,False,2016-04-06T19:09:24Z,https://github.com/grpc/grpc-java/pull/1637#discussion_r58758269,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,22933014,2864,5551325,109033506,23,This is a different definition than NettyServerHandler users.  can you use the same constant in both places?,658881880,2017-03-30 20:48:30 UTC,nAnswer,0,12,4,110,10,8,4779759,MEMBER,False,2017-03-31T00:59:37Z,https://github.com/grpc/grpc-java/pull/2864#discussion_r109033506,0,modified,50,1,51
16827424,https://api.github.com/repos/grpc/grpc-java,15721610,2023,13308501,70157241,60,Implemented Drainable & KnownLength,475316300,2016-07-09 00:12:14 UTC,Statement,4,40,24,3447,4,21,2811396,CONTRIBUTOR,True,2016-07-21T21:29:56Z,https://github.com/grpc/grpc-java/pull/2023#discussion_r70157241,8,modified,29,18,47
16827424,https://api.github.com/repos/grpc/grpc-java,7799656,505,1014305,31633815,95,Initialize these at the declaration?,266158138,2015-06-03 13:14:32 UTC,whQuestion,10,46,8,370,85,14,Not Available,MEMBER,False,2015-06-03T16:33:27Z,https://github.com/grpc/grpc-java/pull/505#discussion_r31633815,4,modified,15,16,31
16827424,https://api.github.com/repos/grpc/grpc-java,36839994,4266,6634728,177603610,77,The return type can be `CallId`,957380639,2018-03-27 23:38:18 UTC,Clarify,2,22,9,321,97,7,2819812,CONTRIBUTOR,False,2018-04-03T20:21:41Z,https://github.com/grpc/grpc-java/pull/4266#discussion_r177603610,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,13893362,1677,3664876,60498268,199,"Again, just copying protobuf.  I assume there was some motivation here, but I don't know the history. But since we're trying to copy protobuf here, we should probably leave it.",430630149,2016-04-20 22:23:50 UTC,Reject,9,8,1,954,2,15,Not Available,MEMBER,True,2016-04-22T14:22:51Z,https://github.com/grpc/grpc-java/pull/1677#discussion_r60498268,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,18022288,2353,5551325,84179759,9,"I know what 0 means, but it isn't obvious.  The reason to comment on it here is so that people have to go looking in other places to understand what this code is doing.  That slows down readability.  This is example, code, which means it should be as easy to understand as possible.",537507468,2016-10-19 22:19:09 UTC,Clarify,8,119,10,1469,43,18,4779759,MEMBER,False,2016-11-15T20:05:52Z,https://github.com/grpc/grpc-java/pull/2353#discussion_r84179759,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,25584632,3104,2489413,122550954,10,I was thinking to delete it in the next release cycle.,716600997,2017-06-16 23:28:52 UTC,Statement,5,7,2,92,45,6,4779759,MEMBER,True,2017-06-17T00:06:21Z,https://github.com/grpc/grpc-java/pull/3104#discussion_r122550954,0,modified,3,0,3
16827424,https://api.github.com/repos/grpc/grpc-java,32352117,3859,5551325,156232148,8,the sizes are checked above,862177313,2017-12-11 23:26:34 UTC,Clarify,3,3,3,29,1,2,8943572,MEMBER,True,2017-12-12T01:55:01Z,https://github.com/grpc/grpc-java/pull/3859#discussion_r156232148,0,modified,12,1,13
16827424,https://api.github.com/repos/grpc/grpc-java,36839994,4266,6634728,177596325,76,Can this be private too?,957380639,2018-03-27 22:54:29 UTC,ynQuestion,2,22,9,321,97,7,2819812,CONTRIBUTOR,False,2018-04-03T20:21:41Z,https://github.com/grpc/grpc-java/pull/4266#discussion_r177596325,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,10920636,1264,1014305,46901660,4,It looks like we were failing to close the InputStream before. Start doing so now in this method?,356726682,2015-12-08 00:50:03 UTC,whQuestion,1,6,1,14,3,2,8943572,MEMBER,False,2015-12-08T01:28:39Z,https://github.com/grpc/grpc-java/pull/1264#discussion_r46901660,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7564398,443,1014305,30536392,37,Change this to just a return statement; no need for an if since you are returning a boolean.,259685004,2015-05-18 16:49:21 UTC,nAnswer,7,5,1,73,30,3,1962333,MEMBER,False,2015-05-18T21:19:01Z,https://github.com/grpc/grpc-java/pull/443#discussion_r30536392,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,9426544,1048,6634728,41310198,117,I added `AuthorityOverridingTransportFactory` to `AbstractManagedChannelImplBuilder` to handle authority overriding. Individual builders would not need to implement it.,322066944,2015-10-06 17:26:27 UTC,Clarify,5,61,1,1511,214,29,9053690,CONTRIBUTOR,True,2015-10-21T00:29:22Z,https://github.com/grpc/grpc-java/pull/1048#discussion_r41310198,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,32634924,3879,1014305,158358457,32,Grab the value from `builder.binlogProvider` instead of passing it in directly.,868161597,2017-12-21 19:24:33 UTC,nAnswer,1,38,10,418,46,7,2819812,MEMBER,False,2018-02-03T00:36:46Z,https://github.com/grpc/grpc-java/pull/3879#discussion_r158358457,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,25196498,3064,1014305,121449412,108,`t.getTrailers()`,711411466,2017-06-12 15:47:44 UTC,Emotion,1,32,8,405,20,4,2819812,MEMBER,False,2017-06-13T15:41:41Z,https://github.com/grpc/grpc-java/pull/3064#discussion_r121449412,4,modified,169,80,249
16827424,https://api.github.com/repos/grpc/grpc-java,10154010,1174,3664876,43507255,39,Use the new constant in gRPC.,338579940,2015-10-30 13:26:42 UTC,Statement,6,14,1,121,24,7,1962333,MEMBER,False,2015-10-30T17:56:06Z,https://github.com/grpc/grpc-java/pull/1174#discussion_r43507255,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7799656,505,1014305,31533967,104,Add a space after the comma.,265918343,2015-06-02 13:18:20 UTC,Clarify,10,46,8,370,85,14,Not Available,MEMBER,False,2015-06-03T16:33:27Z,https://github.com/grpc/grpc-java/pull/505#discussion_r31533967,0,added,147,0,147
16827424,https://api.github.com/repos/grpc/grpc-java,7799656,505,1014305,31633906,162,Why do you need multiple groups? Can't you just have a single one and share it between all usages?,266158138,2015-06-03 13:15:13 UTC,Reject,10,46,8,370,85,14,Not Available,MEMBER,False,2015-06-03T16:33:27Z,https://github.com/grpc/grpc-java/pull/505#discussion_r31633906,4,modified,15,16,31
16827424,https://api.github.com/repos/grpc/grpc-java,18664181,2410,5551325,87242926,123,I saw SSLException and IO Exception and just grouped it as exception.  Changed.,552386035,2016-11-09 17:51:32 UTC,Statement,1,5,1,107,84,2,8943572,MEMBER,True,2016-11-09T17:52:44Z,https://github.com/grpc/grpc-java/pull/2410#discussion_r87242926,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,20909918,2673,5551325,99022073,12,"millis are rather coarse, no?  I think it would be better if we used nanos for all time information throughout the library.  ",609725752,2017-02-01 23:24:11 UTC,Reject,3,24,6,283,15,7,9053690,MEMBER,False,2017-02-03T21:24:01Z,https://github.com/grpc/grpc-java/pull/2673#discussion_r99022073,0,modified,29,9,38
16827424,https://api.github.com/repos/grpc/grpc-java,33646030,3976,5551325,162700640,34,"Guava collections adds a large number of methods to our library, which Android users would not like.   Android users have a limit of 64K methods per java program, and Guava takes from 5-10K.   Proguard gets rid of most of them, but not the collections classes.",890406438,2018-01-19 18:44:49 UTC,nAnswer,2,7,4,367,10,2,8943572,MEMBER,True,2018-01-22T22:27:28Z,https://github.com/grpc/grpc-java/pull/3976#discussion_r162700640,2,modified,10,8,18
16827424,https://api.github.com/repos/grpc/grpc-java,18311973,2386,5551325,86404410,99,"I would not make that assumption.  There is very little enforcement of that, if at all.  David's comments are borne from C++, which treats all protos as part of the binary and thus may do such deduplication.  Java does not.",546381369,2016-11-03 17:53:38 UTC,Clarify,11,75,6,13269,8,52,5067076,MEMBER,False,2016-11-28T18:48:22Z,https://github.com/grpc/grpc-java/pull/2386#discussion_r86404410,0,added,326,0,326
16827424,https://api.github.com/repos/grpc/grpc-java,32634924,3879,2667165,164259823,46,Refactored,868161597,2018-01-27 02:11:28 UTC,Statement,1,38,10,418,46,7,2819812,CONTRIBUTOR,True,2018-02-03T00:36:46Z,https://github.com/grpc/grpc-java/pull/3879#discussion_r164259823,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,13771814,1656,1014305,62280710,113,"The name of this class is more properly AbstractStream2.TransportState. When said that way it seems fairly obvious this is stream-specific state. I understand there are times it is necessary to stutter in class names, but I tend to limit to that to cases when the class name will commonly cause a name clash with another class (I'm looking at you `java.awt.List`!).",438057689,2016-05-06 01:49:21 UTC,Clarify,12,73,1,717,523,15,2811396,MEMBER,True,2016-05-23T19:39:03Z,https://github.com/grpc/grpc-java/pull/1656#discussion_r62280710,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,36314758,4217,2667165,175235841,17,Done. This required updating some unit tests to ensure streams are not started until the transport is ready.,946129627,2018-03-16 23:27:38 UTC,Clarify,5,11,8,80,46,4,2819812,CONTRIBUTOR,True,2018-03-23T22:05:50Z,https://github.com/grpc/grpc-java/pull/4217#discussion_r175235841,5,modified,3,3,6
16827424,https://api.github.com/repos/grpc/grpc-java,7352120,367,3664876,29981015,13,Can you restore the comment WRT flushing?,254868279,2015-05-08 20:10:17 UTC,ynQuestion,8,49,5,865,201,33,Not Available,MEMBER,False,2017-08-28T20:08:25Z,https://github.com/grpc/grpc-java/pull/367#discussion_r29981015,3,modified,4,8,12
16827424,https://api.github.com/repos/grpc/grpc-java,17034642,2262,6634728,82307861,62,Yes. Fixed.,525349349,2016-10-06 23:42:58 UTC,yAnswer,3,86,12,1778,308,73,9053690,CONTRIBUTOR,True,2016-10-06T23:43:56Z,https://github.com/grpc/grpc-java/pull/2262#discussion_r82307861,10,modified,10,10,20
16827424,https://api.github.com/repos/grpc/grpc-java,16705172,2221,6634728,77418351,32,"I would prefer this method to be merged back to `scheduleBackoff()`. Private methods exists for two reasons: to be reused, or to break up complicated task into smaller steps. Neither is the case here. Having a separate private method here only impedes code reading.

The `EndOfCurrentBackoff` definition doesn't need to be in the lock, so the synchronized block wouldn't be very long.",505775977,2016-09-02 22:07:36 UTC,Clarify,6,11,1,84,30,4,4779759,CONTRIBUTOR,False,2016-09-20T16:52:52Z,https://github.com/grpc/grpc-java/pull/2221#discussion_r77418351,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,16223983,2159,3664876,74775531,33,"@carl-mastrangelo we can do even better, but it requires a change to protobuf. Right now, this will cause protobuf to do another copy to its internal array ... we need to fix that.",492756169,2016-08-15 15:04:28 UTC,Clarify,12,43,1,35,10,2,8943572,MEMBER,False,2016-08-17T22:45:37Z,https://github.com/grpc/grpc-java/pull/2159#discussion_r74775531,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,17034642,2262,1014305,81615359,91,Why is `methodName` now passed in?,521351028,2016-10-03 18:52:24 UTC,whQuestion,3,86,12,1778,308,73,9053690,MEMBER,False,2016-10-06T23:43:56Z,https://github.com/grpc/grpc-java/pull/2262#discussion_r81615359,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,17034642,2262,1014305,79077599,92,"Is messageReceived supposed to be compressed size, or uncompressed size? If compressed size, then it _can't_ correspond to high-level messages (e.g., protos). If the event is supposed to be called _before_ application-level flow control (you want to report when a message was actually received off the wire), then it _can't_ be uncompressed size. For uncompressed size, it can only be known immediately before calling the application.

> Alternatively, I could do this in close(), but that requires all Marshallers to close the InputStream. No Marshaller does it today. This would be an API change. Not that it would break users, but that stats won't work correctly if the implementation doesn't follow the new API.

That may interfere with zero-copy protobuf, which would retain buffers until close(), but close() needs to be delayed to allow the application to process. That isn't really designed, though. We should maybe speak with Nathan to see what ideas he had for it.

Instead of relying on close(), you could just notice EOF/-1 as returned by read() (and you could still handle close() as well, although in that case you may know that the message was not fully read.)",512070930,2016-09-15 22:41:20 UTC,Clarify,3,86,12,1778,308,73,9053690,MEMBER,False,2016-10-06T23:43:56Z,https://github.com/grpc/grpc-java/pull/2262#discussion_r79077599,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,16223983,2159,1014305,74850124,33,"> It gets access (in a roundabout way) to setting the protected bufferIsImmutable factory flag.    But are we actually using that? Based on another comment it seems like we aren't:    > \ 4. Copy from ""the buffer"" reading out into a ByteString or byte arra",492756169,2016-08-15 22:51:42 UTC,Clarify,12,43,1,35,10,2,8943572,MEMBER,False,2016-08-17T22:45:37Z,https://github.com/grpc/grpc-java/pull/2159#discussion_r74850124,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,14870158,1846,372583,64512965,49,I thought you would but the class looked kinda awkward with some fields as options and custom fields in a map.  This felt cleaner and more consistent with Attributes and Context.  If you feel strongly about this I can rework this so the fields are kept.  Let me know.,449203119,2016-05-25 04:15:44 UTC,Clarify,14,17,1,132,2,4,8943572,CONTRIBUTOR,True,2016-06-01T21:41:29Z,https://github.com/grpc/grpc-java/pull/1846#discussion_r64512965,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8372394,619,5551325,34497292,107,"That would complicate the cancellation logic outside if this method.  I believe immediate futures can be cancelled many times, so there could be a static ""no timeout"" future.",279698767,2015-07-13 16:48:40 UTC,Clarify,1,22,1,85,36,6,8943572,MEMBER,True,2015-07-15T16:34:24Z,https://github.com/grpc/grpc-java/pull/619#discussion_r34497292,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,9142451,977,3664876,39080209,14,Does this need to be experimental?,307290022,2015-09-09 16:41:19 UTC,ynQuestion,2,2,1,11,14,2,8943572,MEMBER,False,2015-09-09T20:21:16Z,https://github.com/grpc/grpc-java/pull/977#discussion_r39080209,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8141876,562,1014305,33201405,87,"Returning a boolean sounds fine, with `true` meaning that this call caused a closure and `false` meaning it was previously closed.    If every Context can be closed, what is the behavior for the ROOT?",273716559,2015-06-24 19:53:47 UTC,nAnswer,8,133,1,1178,0,2,Not Available,MEMBER,False,2015-07-21T17:20:57Z,https://github.com/grpc/grpc-java/pull/562#discussion_r33201405,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,9442940,1072,1014305,40399664,99,"Could TransportSet be lazy, like ManagedChannel was?",315897922,2015-09-25 03:00:19 UTC,Statement,3,31,1,706,321,5,9053690,MEMBER,False,2015-09-30T01:50:11Z,https://github.com/grpc/grpc-java/pull/1072#discussion_r40399664,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,13282068,1583,6773014,59234330,29,"Yeah, inclined to agree if only because we don't want our benchmarks to appear too exotic. Done",421448370,2016-04-11 16:20:49 UTC,Clarify,10,98,1,1829,216,18,9046588,CONTRIBUTOR,True,2016-04-13T20:49:55Z,https://github.com/grpc/grpc-java/pull/1583#discussion_r59234330,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,9098047,919,1014305,38576917,147,"Hmm... this can cause multiple calls to `onChannelTerminated()` if two calls complete at the same time.    Hmm... This acquires a channel-wide lock per-call. We will probably want to remove that, but that can happen later.",306906962,2015-09-02 18:00:39 UTC,Clarify,3,22,8,81,28,3,Not Available,MEMBER,False,2015-09-02T21:04:35Z,https://github.com/grpc/grpc-java/pull/919#discussion_r38576917,5,modified,9,9,18
16827424,https://api.github.com/repos/grpc/grpc-java,30871298,3670,1014305,150114503,63,"They're equivalent here. But isA would actually be worse, because if I had the wrong class I could miss callbacks that I wanted to trigger failure. I'm not trying to verify it is an Attributes; I just checking the method which happens to have certain arguments.",832552849,2017-11-09 23:09:45 UTC,Clarify,1,9,2,123,10,6,2811396,MEMBER,True,2017-11-10T00:00:48Z,https://github.com/grpc/grpc-java/pull/3670#discussion_r150114503,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,19962990,2557,2489413,94083148,107,`@Nullable`? The same for other fields with a meaningful null value.,586167208,2016-12-28 22:12:47 UTC,whQuestion,0,40,6,1482,1,5,9053690,MEMBER,False,2016-12-29T22:38:31Z,https://github.com/grpc/grpc-java/pull/2557#discussion_r94083148,0,added,475,0,475
16827424,https://api.github.com/repos/grpc/grpc-java,15988840,2126,7524125,74467753,355,"For now just threw a RuntimeException, looking in to how to handle this",489424314,2016-08-11 17:41:25 UTC,Emphasis,10,117,1,400,1,6,8943572,CONTRIBUTOR,True,2016-08-19T22:54:29Z,https://github.com/grpc/grpc-java/pull/2126#discussion_r74467753,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8141876,562,1014305,34518895,250,We should have a code sample here with how it's expected to be used where the detach is in a finally.,279712618,2015-07-13 20:21:21 UTC,Statement,8,133,1,1178,0,2,Not Available,MEMBER,False,2015-07-21T17:20:57Z,https://github.com/grpc/grpc-java/pull/562#discussion_r34518895,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,21468691,2736,6634728,103002491,183,All fields that are not intended to be changed should be final.,619764102,2017-02-24 18:30:53 UTC,Reject,3,7,4,24800,0,23,5067076,CONTRIBUTOR,False,2017-03-02T18:24:16Z,https://github.com/grpc/grpc-java/pull/2736#discussion_r103002491,0,added,374,0,374
16827424,https://api.github.com/repos/grpc/grpc-java,15531571,1952,6634728,68106472,97,Why was the initial value 1?,467006031,2016-06-22 18:18:06 UTC,whQuestion,5,4,1,326,66,6,2811396,CONTRIBUTOR,False,2016-06-27T20:36:11Z,https://github.com/grpc/grpc-java/pull/1952#discussion_r68106472,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8372394,619,5551325,34497747,54,"A transport.ServerStream is a Call no?  Each ""RPC"" on the wire is a separate HTTP2 Stream, which is what a ServerStream is I thought.",279698767,2015-07-13 16:52:27 UTC,nAnswer,1,22,1,85,36,6,8943572,MEMBER,True,2015-07-15T16:34:24Z,https://github.com/grpc/grpc-java/pull/619#discussion_r34497747,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8391731,630,1014305,34849892,24,"The @ ThreadSafe follows the practice that I described: ""something isn't thread-safe unless it says it is thread-safe."" It sounds like better commenting of AbstractStream is in order (maybe by using @ NotThreadSafe) instead of adding the annotation here.",279847159,2015-07-16 21:33:34 UTC,Clarify,1,34,3,34,24,2,Not Available,MEMBER,False,2015-07-22T22:13:56Z,https://github.com/grpc/grpc-java/pull/630#discussion_r34849892,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,13282068,1583,6174876,59610262,43,nit: `{@link MethodDescriptor.Marshaller}` and `Netty's {@code ByteBuf}.`,424853985,2016-04-13 19:29:49 UTC,System,10,98,1,1829,216,18,9046588,COLLABORATOR,False,2016-04-13T20:49:55Z,https://github.com/grpc/grpc-java/pull/1583#discussion_r59610262,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7902595,519,1014305,32135418,27,"FYI, you only need a single backtick around code like this. I'm not suggesting you change it now, since there are many places this is happening in this file and that is the way it was before.",268928162,2015-06-10 14:16:47 UTC,nAnswer,7,10,1,293,214,3,Not Available,MEMBER,False,2015-06-10T20:12:32Z,https://github.com/grpc/grpc-java/pull/519#discussion_r32135418,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7263009,337,3664876,29113944,7,nm ... this is just a test :),249285662,2015-04-26 19:28:40 UTC,nAnswer,40,12,1,61,15,11,9046588,MEMBER,False,2015-04-28T17:12:25Z,https://github.com/grpc/grpc-java/pull/337#discussion_r29113944,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8141876,562,6773014,34395410,292,I suspect that we don't. It would be unusual in Java to do that.,279630097,2015-07-10 18:55:28 UTC,Statement,8,133,1,1178,0,2,Not Available,CONTRIBUTOR,True,2015-07-21T17:20:57Z,https://github.com/grpc/grpc-java/pull/562#discussion_r34395410,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,18272030,2380,1014305,85456963,41,"This object can be filled by things other than codegen (yes, it isn't going to be common, but we don't special case codegen). How about something like:

> Returns a marshaller-specific object that provides additional information about the service. For example, when using Protobuf this should generally be a {@link io.grpc.protobuf.reflection.ProtoFileDescriptorWrapper}, when present.",543888054,2016-10-28 00:58:46 UTC,Clarify,3,8,2,195,13,12,5067076,MEMBER,False,2016-10-28T06:03:54Z,https://github.com/grpc/grpc-java/pull/2380#discussion_r85456963,0,modified,23,0,23
16827424,https://api.github.com/repos/grpc/grpc-java,15634147,1992,1014305,69022983,200,"Avoid holding lock when running shutdown, to reduce chance of deadlock",471117031,2016-06-29 20:39:19 UTC,Statement,6,37,1,745,5,5,10237908,MEMBER,False,2016-07-09T00:25:25Z,https://github.com/grpc/grpc-java/pull/1992#discussion_r69022983,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,13677408,1642,1014305,58914609,39,With a dash it would be fine: non-multiple.,420798151,2016-04-07 17:47:49 UTC,Statement,6,14,1,33,25,1,8943572,MEMBER,False,2016-04-07T20:00:02Z,https://github.com/grpc/grpc-java/pull/1642#discussion_r58914609,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8586229,672,3664876,35656699,74,"@ejona86 are you suggesting that this code be located elsewhere? If so, where ... in `TransportListener`?",283942301,2015-07-28 12:54:44 UTC,whQuestion,6,36,1,315,9,5,8943572,MEMBER,False,2015-08-04T20:19:53Z,https://github.com/grpc/grpc-java/pull/672#discussion_r35656699,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,18908780,2427,7396743,88380161,454,can't this be `private`?,557829709,2016-11-17 03:19:58 UTC,Reject,9,44,13,1478,6,7,9053690,CONTRIBUTOR,False,2016-11-23T06:21:21Z,https://github.com/grpc/grpc-java/pull/2427#discussion_r88380161,1,modified,141,241,382
16827424,https://api.github.com/repos/grpc/grpc-java,8470641,629,1014305,35034633,44,"Does it hurt anything if we pass an sslSocketFactory to OkHttpClientTransportFactory?    I'd be fine initializing sslSocketFactory to SSLSocketFactory.getDefault(), except I worry that the method may do a bit too much loading.",280318334,2015-07-20 17:38:32 UTC,Clarify,6,17,1,79,2,2,1962333,MEMBER,False,2015-07-21T23:31:13Z,https://github.com/grpc/grpc-java/pull/629#discussion_r35034633,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,12307686,1422,1014305,53228574,51,"Oh, neat. I like this approach to the API, where you don't have to provide the interceptors here.",389691455,2016-02-17 20:46:39 UTC,Reject,13,12,1,409,65,6,Not Available,MEMBER,False,2016-02-22T01:40:44Z,https://github.com/grpc/grpc-java/pull/1422#discussion_r53228574,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,18022288,2353,2489413,84171616,78,"it does not make benefit here. 
- ImplBase is an abstract class, `@Syp ImplBase serviceImpl;` will not work, still need initialize it:

   `@Syp ImplBase serviceImpl = new ImplBase(){};`
- need add `MockitoAnnotations.initMocks(this);` in `@Before`.
- you can not `@Spy` a final field because of the above.
",537507468,2016-10-19 21:30:55 UTC,Clarify,8,119,10,1469,43,18,4779759,MEMBER,True,2016-11-15T20:05:52Z,https://github.com/grpc/grpc-java/pull/2353#discussion_r84171616,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,28666130,3465,1014305,139035418,5,"Let's use `false`, as that's the more common case.",783717474,2017-09-14 23:33:42 UTC,Clarify,0,1,2,6,1,1,2819812,MEMBER,False,2017-09-14T23:44:32Z,https://github.com/grpc/grpc-java/pull/3465#discussion_r139035418,0,modified,1,1,2
16827424,https://api.github.com/repos/grpc/grpc-java,7955256,530,1014305,33302586,278,Don't we need to handle the error?,274348435,2015-06-25 18:42:19 UTC,ynQuestion,9,52,1,2392,0,22,1962333,MEMBER,False,2015-06-26T22:31:54Z,https://github.com/grpc/grpc-java/pull/530#discussion_r33302586,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,12485970,1462,1014305,53712540,642,Adding a comment.,393770696,2016-02-22 23:31:15 UTC,Statement,4,35,1,990,2,5,2811396,MEMBER,True,2016-02-26T00:24:54Z,https://github.com/grpc/grpc-java/pull/1462#discussion_r53712540,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,27719359,3362,5551325,134025459,37,"The branch cut has happened, I think this should be 1.7",763384367,2017-08-18 18:26:42 UTC,Clarify,1,7,4,231,0,2,4779759,MEMBER,False,2017-08-21T16:43:02Z,https://github.com/grpc/grpc-java/pull/3362#discussion_r134025459,0,added,149,0,149
16827424,https://api.github.com/repos/grpc/grpc-java,18168140,2366,6174876,84622858,20,`@Nullable` ,541009487,2016-10-24 05:35:01 UTC,System,5,19,3,162,21,4,2811396,COLLABORATOR,False,2016-12-10T02:47:48Z,https://github.com/grpc/grpc-java/pull/2366#discussion_r84622858,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8936684,861,3664876,37801837,14,"Yes, good catch. Done.",299571454,2015-08-24 18:42:24 UTC,yAnswer,10,25,1,295,105,26,Not Available,MEMBER,True,2015-08-26T22:27:36Z,https://github.com/grpc/grpc-java/pull/861#discussion_r37801837,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,19844334,2544,6634728,94700551,6,Please also mention defaulting to channel setting if not set.,591170195,2017-01-05 01:32:41 UTC,Clarify,3,27,9,334,34,18,8943572,CONTRIBUTOR,False,2017-01-05T19:26:25Z,https://github.com/grpc/grpc-java/pull/2544#discussion_r94700551,6,modified,2,2,4
16827424,https://api.github.com/repos/grpc/grpc-java,19595793,2501,1014305,92522463,14,s/forcibly/forcible/ (or forced),575011370,2016-12-15 00:36:42 UTC,Statement,3,21,6,122,36,1,9053690,MEMBER,False,2016-12-16T18:48:05Z,https://github.com/grpc/grpc-java/pull/2501#discussion_r92522463,3,modified,4,2,6
16827424,https://api.github.com/repos/grpc/grpc-java,26278382,3204,5551325,126257702,5,Could you please also update the Bazel files?,732147564,2017-07-07 22:26:26 UTC,Clarify,3,12,4,164,144,8,9053690,MEMBER,False,2017-07-10T23:33:13Z,https://github.com/grpc/grpc-java/pull/3204#discussion_r126257702,0,modified,6,3,9
16827424,https://api.github.com/repos/grpc/grpc-java,8591804,677,1014305,35782619,4,When `t` is `null` it seems the Status should be OK. I think `t` is `null` when requested to shutdown (line 187) and when  the connection is closed gracefully (line 180).,284037498,2015-07-29 14:51:07 UTC,Clarify,2,15,1,39,21,7,8943572,MEMBER,False,2015-07-29T22:35:54Z,https://github.com/grpc/grpc-java/pull/677#discussion_r35782619,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,17034642,2262,5551325,82011870,77,What's to be done here?  ,525256808,2016-10-05 16:18:24 UTC,whQuestion,3,86,12,1778,308,73,9053690,MEMBER,False,2016-10-06T23:43:56Z,https://github.com/grpc/grpc-java/pull/2262#discussion_r82011870,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8397056,632,1014305,34827264,223,"If there are more messages, we need to fail. If you put in this optimization, then I think you also have to make sure to `request(2)` at the beginning and to fail appropriately if more than one payload is received.",279850070,2015-07-16 17:21:28 UTC,Clarify,1,13,4,143,132,11,9053690,MEMBER,False,2015-07-17T16:10:07Z,https://github.com/grpc/grpc-java/pull/632#discussion_r34827264,0,modified,80,90,170
16827424,https://api.github.com/repos/grpc/grpc-java,7665647,478,6773014,30925531,154,Probably not much advantage. Not sure 4 is really saving us anything either,261566368,2015-05-22 17:50:42 UTC,Clarify,3,11,1,293,130,20,Not Available,CONTRIBUTOR,True,2015-05-22T20:32:09Z,https://github.com/grpc/grpc-java/pull/478#discussion_r30925531,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,10407293,1202,1014305,45266249,64,"That is the most repetitive (non-code generated) set of indentation I've seen. If you put the public here on the next line, it could be even moar repetitive-looking!    (please don't to change; I just wanted to point out that I noticed :smile:)",348228610,2015-11-18 20:53:30 UTC,Clarify,20,10,1,344,32,14,Not Available,MEMBER,False,2015-11-19T19:00:41Z,https://github.com/grpc/grpc-java/pull/1202#discussion_r45266249,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,36839994,4266,2667165,177820592,76,Switched to public API,957380639,2018-03-28 17:03:09 UTC,Statement,2,22,9,321,97,7,2819812,CONTRIBUTOR,True,2018-04-03T20:21:41Z,https://github.com/grpc/grpc-java/pull/4266#discussion_r177820592,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,17034642,2262,5551325,81249607,135,fits on previous line?,521351028,2016-09-29 22:39:43 UTC,ynQuestion,3,86,12,1778,308,73,9053690,MEMBER,False,2016-10-06T23:43:56Z,https://github.com/grpc/grpc-java/pull/2262#discussion_r81249607,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,10397436,1201,6634728,44608999,64,"""foo.googleapis.com:8080"" will not trigger the exception. Please change it to ""127.0.0.1:8080"".",345017656,2015-11-11 23:47:20 UTC,Reject,4,18,1,162,46,2,8943572,CONTRIBUTOR,False,2015-11-12T01:50:37Z,https://github.com/grpc/grpc-java/pull/1201#discussion_r44608999,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7649713,472,3664876,30837044,5,Are these the only distributions available on maven central?,261053386,2015-05-21 17:17:42 UTC,whQuestion,1,6,1,44,54,3,2811396,MEMBER,False,2015-05-21T20:10:28Z,https://github.com/grpc/grpc-java/pull/472#discussion_r30837044,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,9545626,1073,7689743,41193322,318,My guideline here is it something we can imagine to execute on server side. Followedby and transform (with a restricted transform function) seems to me. I agree we should not re-invent all the combinators of Rx/Java 8 here.,317052175,2015-10-05 18:30:05 UTC,nAnswer,7,18,3,1595,2,13,Not Available,NONE,True,2015-10-13T03:48:17Z,https://github.com/grpc/grpc-java/pull/1073#discussion_r41193322,0,added,423,0,423
16827424,https://api.github.com/repos/grpc/grpc-java,14259244,1724,2489413,61324366,16,Agreed. Used real NCB instance now.,434960299,2016-04-27 19:52:16 UTC,Statement,3,11,3,93,0,4,4779759,MEMBER,True,2016-04-27T19:52:16Z,https://github.com/grpc/grpc-java/pull/1724#discussion_r61324366,0,modified,21,0,21
16827424,https://api.github.com/repos/grpc/grpc-java,17079226,2274,5551325,78918166,59,"Ack to removing it.  

As an aside, my almost-there interpretation of how inlining works is that there is some sort of ""budget"" that causes methods to be inlined.  Specifically, if a chain of calls is short enough all of them get inlined, but may not if there is too much going on, /even/ if it is the same method at the end of the chain.  By that, possibly misguided logic, reducing the size of a method increases its chances of being inlined in whatever context it is being called from.

Do you know if that is how it works?",513016844,2016-09-15 09:01:13 UTC,Clarify,11,80,1,401,325,8,8943572,MEMBER,True,2016-09-19T21:33:08Z,https://github.com/grpc/grpc-java/pull/2274#discussion_r78918166,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,14261900,1726,5551325,61465331,5,"The package name was wrong to begin with, and breaks internal proto db.  This change makes that wrongness more apparent.  It will have to be fixed in other places, but only because we have a ton of copies rather than one true copy.",435098903,2016-04-28 17:09:05 UTC,nAnswer,7,7,1,1691,1677,25,8943572,MEMBER,True,2016-04-28T17:09:05Z,https://github.com/grpc/grpc-java/pull/1726#discussion_r61465331,0,modified,1,1,2
16827424,https://api.github.com/repos/grpc/grpc-java,22477898,2838,6634728,107449566,5,"It's just defined by the implementation, but not what we really want. Calling it undefined means we don't support whatever the current implementation is doing and we are free to change it in the future.",647807917,2017-03-22 15:41:33 UTC,Reject,0,2,1,4,0,1,9053690,CONTRIBUTOR,True,2017-03-22T15:41:34Z,https://github.com/grpc/grpc-java/pull/2838#discussion_r107449566,0,modified,4,0,4
16827424,https://api.github.com/repos/grpc/grpc-java,24116958,2974,6634728,114674648,6,"@bogdandrutu for now we could provide accurate wire size and timing at the same time. But soon with stream-wide compression we will be left with two options:
 1. Provide accurate timing only. NetworkEvent could be added for each message, but the actual wire size is unknown. We could know the uncompressed size for outbound, but will have difficulty (but not impossible) in knowing the uncompressed size for inbound.
 2. Provide accurate wire size and timing for each HTTP2 frame.
",684690033,2017-05-03 23:15:26 UTC,Clarify,1,6,3,264,75,9,Not Available,CONTRIBUTOR,True,2017-05-03T23:15:26Z,https://github.com/grpc/grpc-java/pull/2974#discussion_r114674648,2,modified,20,7,27
16827424,https://api.github.com/repos/grpc/grpc-java,19595793,2501,6634728,92528941,94,"IDLE only transitions via CONNECTING to READY. There is no direct edge from IDLE to READY.    I think we had the conversation WRT initial imbalance, and we thought it was acceptable.",575011370,2016-12-15 01:41:25 UTC,nAnswer,3,21,6,122,36,1,9053690,CONTRIBUTOR,True,2016-12-16T18:48:05Z,https://github.com/grpc/grpc-java/pull/2501#discussion_r92528941,3,modified,4,2,6
16827424,https://api.github.com/repos/grpc/grpc-java,8770292,796,1014305,36875792,4,Shouldn't this use the same indentation as the line above?,293390123,2015-08-12 13:45:21 UTC,Clarify,2,4,1,58,5,3,1962333,MEMBER,False,2015-08-13T23:01:21Z,https://github.com/grpc/grpc-java/pull/796#discussion_r36875792,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,30621632,3647,6634728,148846697,20,These two methods should take the form of the corresponding methods in the builders.,825779846,2017-11-03 17:30:08 UTC,Statement,16,18,9,596,445,18,9053690,CONTRIBUTOR,False,2017-11-07T04:47:48Z,https://github.com/grpc/grpc-java/pull/3647#discussion_r148846697,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8141876,562,1014305,33203130,41,I'm concerned that this would create an incentive to create multiple keys with the same name but different default values.,273716559,2015-06-24 20:12:53 UTC,nAnswer,8,133,1,1178,0,2,Not Available,MEMBER,False,2015-07-21T17:20:57Z,https://github.com/grpc/grpc-java/pull/562#discussion_r33203130,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,9095090,914,1014305,38437674,15,This should be ManagedServer,306823279,2015-09-01 14:08:41 UTC,Statement,5,45,1,533,265,48,Not Available,MEMBER,False,2015-09-03T18:19:19Z,https://github.com/grpc/grpc-java/pull/914#discussion_r38437674,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8647188,669,3691158,36647435,43,"cool, that does simplify the code.",284955237,2015-08-10 13:53:11 UTC,Statement,7,9,1,138,24,10,Not Available,CONTRIBUTOR,True,2015-08-10T16:02:32Z,https://github.com/grpc/grpc-java/pull/669#discussion_r36647435,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,14742930,1827,6634728,65470196,16,"Maybe attach msg.getStatus().asException() as the cause of this UNAVAILABLE status, and also use it in transportReportStatus()? This keeps the most information and makes the event chain more obvious.

I don't have an opinion between UNAVAILABLE or CANCELLED for transportReportStatus().",446545773,2016-06-02 01:06:50 UTC,Clarify,7,10,1,529,19,18,2811396,CONTRIBUTOR,False,2016-06-03T00:40:10Z,https://github.com/grpc/grpc-java/pull/1827#discussion_r65470196,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7954529,534,3664876,32318177,12,"Does the two-arg version use `voidPromise`? If not, it probably should.",269851232,2015-06-12 12:03:23 UTC,Reject,7,21,1,95,52,14,Not Available,MEMBER,False,2015-07-09T19:22:02Z,https://github.com/grpc/grpc-java/pull/534#discussion_r32318177,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,27145413,3300,2489413,131031017,18,Good point. Fixed,751516233,2017-08-03 00:41:13 UTC,Accept,1,12,6,107,43,4,4779759,MEMBER,True,2017-08-04T18:34:55Z,https://github.com/grpc/grpc-java/pull/3300#discussion_r131031017,1,modified,6,1,7
16827424,https://api.github.com/repos/grpc/grpc-java,6470998,156,1014305,25624851,12,Created https://github.com/aantono/gradle-plugin-protobuf/issues/23,224334361,2015-03-02 17:44:26 UTC,Statement,1,4,1,40,7,4,2811396,MEMBER,True,2015-03-02T21:34:59Z,https://github.com/grpc/grpc-java/pull/156#discussion_r25624851,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,15988394,2115,7147247,73438465,13,"Consider adding some comments to these fields to avoid confusion. For example, what's the unit for elapsed. Is it bits or bytes for mbps?",486511140,2016-08-03 23:13:52 UTC,whQuestion,1,29,5,2604,0,99,Not Available,CONTRIBUTOR,False,2017-08-28T20:08:29Z,https://github.com/grpc/grpc-java/pull/2115#discussion_r73438465,2,modified,29,0,29
16827424,https://api.github.com/repos/grpc/grpc-java,13306021,1587,5551325,57353519,55,"If you are going down the builder route, might as well use the (TimeUnit, amount) pattern that is common in the rest of java.",412817633,2016-03-24 17:22:26 UTC,Clarify,13,32,1,190,122,11,8943572,MEMBER,False,2016-03-24T23:15:11Z,https://github.com/grpc/grpc-java/pull/1587#discussion_r57353519,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,6756105,225,3664876,26947162,148,You could probably also just called the super method in this case.  Maybe change the first if to `if (existingStream(streamId) || connection().isGoAway())`,234043527,2015-03-23 14:31:22 UTC,Clarify,15,102,1,849,245,9,Not Available,MEMBER,False,2015-04-07T20:23:00Z,https://github.com/grpc/grpc-java/pull/225#discussion_r26947162,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,6756105,225,6174876,27913310,115,@nmittler it was @ejona86's idea :-).,241411627,2015-04-07 17:52:26 UTC,Statement,15,102,1,849,245,9,Not Available,COLLABORATOR,True,2015-04-07T20:23:00Z,https://github.com/grpc/grpc-java/pull/225#discussion_r27913310,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8542530,644,3664876,37246263,77,Indicate only used by transport thread?,282742353,2015-08-17 20:46:49 UTC,whQuestion,5,52,2,744,317,25,Not Available,MEMBER,False,2015-08-17T22:46:49Z,https://github.com/grpc/grpc-java/pull/644#discussion_r37246263,1,modified,23,36,59
16827424,https://api.github.com/repos/grpc/grpc-java,13163276,1566,1014305,56845367,4,"final, and add another argument to the constructor for it.",409515775,2016-03-21 15:49:55 UTC,Statement,10,9,1,100,2,2,10237908,MEMBER,False,2016-03-21T22:45:28Z,https://github.com/grpc/grpc-java/pull/1566#discussion_r56845367,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,28368010,3439,6634728,138208319,205,"I see. I have moved the lines that reference into `start()`, and create `LoadReportingTask` every time it's scheduled instead of re-using one.",777312861,2017-09-11 22:23:52 UTC,nAnswer,1,10,6,515,115,7,9053690,CONTRIBUTOR,True,2017-09-12T16:40:56Z,https://github.com/grpc/grpc-java/pull/3439#discussion_r138208319,2,modified,40,18,58
16827424,https://api.github.com/repos/grpc/grpc-java,15897963,2093,5551325,74519519,127,Should there be a check here to see if it is already pinging?,489166821,2016-08-11 23:02:56 UTC,Statement,8,53,1,308,15,6,8943572,MEMBER,False,2016-08-17T23:07:44Z,https://github.com/grpc/grpc-java/pull/2093#discussion_r74519519,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,19382692,2479,6634728,91845271,102,"No, the initial state is always.  There won't be a notification for it.  I will make it clear in the documentation.",573201162,2016-12-11 00:29:14 UTC,Reject,12,139,32,1119,0,4,9053690,CONTRIBUTOR,False,2016-12-21T10:50:31Z,https://github.com/grpc/grpc-java/pull/2479#discussion_r91845271,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,15988394,2115,5551325,73445097,118,Is JSONObject lazy?  Will it skip parsing most of the data until it is asked for?,486511140,2016-08-04 00:21:36 UTC,ynQuestion,1,29,5,2604,0,99,Not Available,MEMBER,False,2016-08-04T21:17:19Z,https://github.com/grpc/grpc-java/pull/2115#discussion_r73445097,2,modified,164,0,164
16827424,https://api.github.com/repos/grpc/grpc-java,27933733,3395,1014305,139563892,502,s/INFLATE_BUFFER_SIZE/inflaterInput.length/,782024955,2017-09-18 23:15:17 UTC,Statement,1,35,5,1236,0,3,5067076,MEMBER,False,2017-09-19T18:18:50Z,https://github.com/grpc/grpc-java/pull/3395#discussion_r139563892,1,modified,166,232,398
16827424,https://api.github.com/repos/grpc/grpc-java,27477168,3339,1014305,132798805,12,"Oh, then make your own answer to call fakeClock directly? (Don't use `delegatesTo()` in that case)",758194258,2017-08-11 23:03:38 UTC,Clarify,0,11,5,118,38,2,4779759,MEMBER,False,2017-08-14T21:07:57Z,https://github.com/grpc/grpc-java/pull/3339#discussion_r132798805,0,modified,8,1,9
16827424,https://api.github.com/repos/grpc/grpc-java,15811717,2067,7524125,73773778,52,also removed,486639952,2016-08-05 23:39:58 UTC,Statement,10,84,1,517,0,2,8943572,CONTRIBUTOR,True,2016-08-17T22:19:45Z,https://github.com/grpc/grpc-java/pull/2067#discussion_r73773778,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,24658694,3019,1014305,122816428,48,No need for LogExceptionRunnable. This isn't schedule().,713281772,2017-06-19 20:32:43 UTC,nAnswer,9,81,10,342,37,5,4779759,MEMBER,False,2017-07-19T18:00:54Z,https://github.com/grpc/grpc-java/pull/3019#discussion_r122816428,2,modified,2,1,3
16827424,https://api.github.com/repos/grpc/grpc-java,20505910,2611,9209972,96690414,67,"Good call, fixed. Reshuffled and changed first commit, which is now last (might be worth to merge those fixes as a separate commits, that's why I'm keeping them separate - your call)",599578461,2017-01-18 17:32:44 UTC,Clarify,0,7,4,30,23,2,9053690,COLLABORATOR,True,2017-01-18T18:59:14Z,https://github.com/grpc/grpc-java/pull/2611#discussion_r96690414,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,24658694,3019,6634728,119728398,43,"I think `notifyWhenStateChanged` is more accurate, as it implies the listener is one-shot. `addLIstener` sounds like the listener will stay after being called.",701038479,2017-06-01 21:04:06 UTC,Clarify,9,81,10,342,37,5,4779759,CONTRIBUTOR,False,2017-07-19T18:00:54Z,https://github.com/grpc/grpc-java/pull/3019#discussion_r119728398,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,19382692,2479,6634728,93282879,38,You probably also want to verify that `pickSubchannel()` actually returns `subchannel`.,580003685,2016-12-20 17:14:47 UTC,Clarify,12,139,32,1119,0,4,9053690,CONTRIBUTOR,False,2016-12-21T10:50:31Z,https://github.com/grpc/grpc-java/pull/2479#discussion_r93282879,19,modified,23,3,26
16827424,https://api.github.com/repos/grpc/grpc-java,20909918,2673,5551325,99186053,73,"Hmm, you are right.  The spec was updated that the path should have the leading slash.  Some places add it, some does not. This is going to be confusing.    https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md",609725752,2017-02-02 18:24:35 UTC,Reject,3,24,6,283,15,7,9053690,MEMBER,False,2017-02-03T21:24:01Z,https://github.com/grpc/grpc-java/pull/2673#discussion_r99186053,0,added,229,0,229
16827424,https://api.github.com/repos/grpc/grpc-java,7530929,431,3664876,30325836,128,Why not just flush at the end?,256829053,2015-05-14 12:39:17 UTC,whQuestion,9,67,3,445,129,13,Not Available,MEMBER,False,2015-05-15T16:19:26Z,https://github.com/grpc/grpc-java/pull/431#discussion_r30325836,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,25231954,3068,2667165,120980020,29,"The `ServerStream` API states that close() will close the stream for reading and writing, but did not specify what happens if we keep interacting with it after calling close(). `InProcessTransport` and `AbstractStream`  happen to both ignore all interactions after `close`. I didn't want to rely on what seems like behavior, and opted to never touch the stream again after calling `close()`. If you're ok with adding that behavior to the API, this flag can be removed.",710444922,2017-06-08 19:39:26 UTC,Clarify,3,16,11,297,105,6,2819812,CONTRIBUTOR,True,2017-06-12T21:27:22Z,https://github.com/grpc/grpc-java/pull/3068#discussion_r120980020,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,6756105,225,6174876,27240389,242,@ejona86 sames as above.,235805516,2015-03-26 17:14:36 UTC,Continuer,15,102,1,849,245,9,Not Available,COLLABORATOR,True,2015-04-07T20:23:00Z,https://github.com/grpc/grpc-java/pull/225#discussion_r27240389,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,13282068,1583,6174876,57527565,135,"@louiscryan I believe we don't want a poisson distribution, but an exponential distribution here. See http://stats.stackexchange.com/questions/2092/relationship-between-poisson-and-exponential-distribution

`The distance between two consecutive points of a point process on the real line will be an exponential random variable with parameter lambda` https://en.wikipedia.org/wiki/Poisson_point_process",413592235,2016-03-27 12:23:19 UTC,Clarify,10,98,1,1829,216,18,9046588,COLLABORATOR,False,2016-04-13T20:49:55Z,https://github.com/grpc/grpc-java/pull/1583#discussion_r57527565,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,11697710,1327,1014305,50324514,154,"It shouldn't be necessary to trust the CA of the client cert, even on the client.",375564997,2016-01-20 21:47:12 UTC,Statement,6,16,6,280,5,3,Not Available,MEMBER,False,2016-01-21T19:47:41Z,https://github.com/grpc/grpc-java/pull/1327#discussion_r50324514,1,added,253,0,253
16827424,https://api.github.com/repos/grpc/grpc-java,15897963,2093,7524125,74831433,98,"yup, removed this if",489166821,2016-08-15 20:44:40 UTC,Statement,8,53,1,308,15,6,8943572,CONTRIBUTOR,True,2016-08-17T23:07:44Z,https://github.com/grpc/grpc-java/pull/2093#discussion_r74831433,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,12820112,1526,5551325,55607214,261,"Ok, just wanted to make sure this was intentional, not a side effect.",403323656,2016-03-09 23:08:45 UTC,nAnswer,6,26,1,308,229,5,2811396,MEMBER,False,2016-03-09T23:15:15Z,https://github.com/grpc/grpc-java/pull/1526#discussion_r55607214,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,10102303,1154,6634728,43177276,50,"This is not ideal. Based on @ejona86's suggestion, I have created #1158 and will abandon this one.",337329353,2015-10-27 18:56:45 UTC,Statement,2,6,2,103,9,9,Not Available,CONTRIBUTOR,True,2015-10-27T19:56:45Z,https://github.com/grpc/grpc-java/pull/1154#discussion_r43177276,1,modified,0,1,1
16827424,https://api.github.com/repos/grpc/grpc-java,15886121,2089,7147247,72865240,144,I've moved the channel into GrpcTask and pass stubs in the GrpcRunnable.run so it's not needed to mutate RouteGuideActivity fields.  Also made all the GrpcRunnable.run implementations to correctly throw exceptions instead of just logging them.,482532263,2016-07-29 21:42:42 UTC,nAnswer,1,21,1,1144,0,42,10237908,CONTRIBUTOR,True,2016-08-03T21:53:01Z,https://github.com/grpc/grpc-java/pull/2089#discussion_r72865240,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,18908780,2427,9209972,88391851,57,Would it be more semantically correct if we stored `Status.OK` here and renamed `error` to `status` ?,557829709,2016-11-17 06:09:06 UTC,ynQuestion,9,44,13,1478,6,7,9053690,COLLABORATOR,False,2016-11-23T06:21:21Z,https://github.com/grpc/grpc-java/pull/2427#discussion_r88391851,1,added,114,0,114
16827424,https://api.github.com/repos/grpc/grpc-java,15811717,2067,5551325,72351130,61,"client uses server socket?  and server uses Socket?  Might be worth a comment, since there are two clients and two servers in a proxy.",483011045,2016-07-26 22:37:12 UTC,Other,10,84,1,517,0,2,8943572,MEMBER,False,2016-08-17T22:19:45Z,https://github.com/grpc/grpc-java/pull/2067#discussion_r72351130,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,35931931,4174,2667165,176577463,287,Changed to byte[]. I created a special marshaller and InputStream to avoid making another copy of the data. These will be private classes.,940630739,2018-03-22 21:27:15 UTC,Clarify,2,21,4,615,223,5,2819812,CONTRIBUTOR,True,2018-03-23T00:59:38Z,https://github.com/grpc/grpc-java/pull/4174#discussion_r176577463,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,24664357,3022,5551325,117384032,7,"The check for null should go here.  metadata uses a lot of linear time accesses, so doing it twice is reaching.",696281781,2017-05-19 00:41:58 UTC,Emphasis,1,7,3,15,4,2,5067076,MEMBER,False,2017-05-23T05:22:28Z,https://github.com/grpc/grpc-java/pull/3022#discussion_r117384032,0,modified,1,1,2
16827424,https://api.github.com/repos/grpc/grpc-java,6464593,153,1014305,25579925,42,"Bah, you're right. And that is also why you had to redeclare set and setException in order to give visibility to UnaryStreamToFuture.    LGTM",224015878,2015-03-02 05:16:21 UTC,Reject,1,3,1,149,7,2,9053690,MEMBER,False,2015-03-02T19:04:14Z,https://github.com/grpc/grpc-java/pull/153#discussion_r25579925,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,24664357,3022,3695855,117899798,10,Indentation fixed.,696318396,2017-05-23 05:24:45 UTC,System,1,7,3,15,4,2,5067076,CONTRIBUTOR,True,2017-05-23T05:24:45Z,https://github.com/grpc/grpc-java/pull/3022#discussion_r117899798,1,modified,7,5,12
16827424,https://api.github.com/repos/grpc/grpc-java,36081051,4196,6634728,173573974,5,We can probably instead check channelStateManager.getState() again here.,938938966,2018-03-09 21:34:30 UTC,Clarify,1,4,2,52,0,5,4779759,CONTRIBUTOR,False,2018-03-10T00:18:28Z,https://github.com/grpc/grpc-java/pull/4196#discussion_r173573974,0,modified,6,0,6
16827424,https://api.github.com/repos/grpc/grpc-java,6647549,197,1014305,26397930,45,"Netty seems to use IndexOutOfBoundsException. Okio seems to use ArrayIndexOutOfBoundsException, which extends IOOBE.    But yes, I agree that if they both used something different making this RuntimeException would be very appropriate.",229419033,2015-03-13 15:02:36 UTC,Clarify,4,28,1,1167,272,43,Not Available,MEMBER,False,2015-03-13T19:58:37Z,https://github.com/grpc/grpc-java/pull/197#discussion_r26397930,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7560239,438,1014305,30434837,13,"This is strange. I'd prefer to not have it, and it seems unnecessary.",258671726,2015-05-15 16:46:22 UTC,Statement,4,27,1,431,50,23,Not Available,MEMBER,False,2017-08-28T20:08:26Z,https://github.com/grpc/grpc-java/pull/438#discussion_r30434837,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,19709543,2530,6634728,94169010,597,"If `newCall()` is called after the channel is terminated, the call should fail, but how should we deliver the failure? Currently we deliver the failure to the call listener, which requires the app executor. As we shouldn't use the original app executor after it's returned to the pool, the direct executor seems to be the best bet. The other option is to let `newCall()` throw.",586460237,2016-12-29 19:04:07 UTC,Clarify,1,41,15,2761,7,11,9053690,CONTRIBUTOR,True,2017-01-09T21:16:38Z,https://github.com/grpc/grpc-java/pull/2530#discussion_r94169010,7,modified,20,23,43
16827424,https://api.github.com/repos/grpc/grpc-java,10227966,1182,1014305,43678102,17,"Oh, unless you are saying that `NettyChannelBuilder.protocolNegotiator` should also be `@Internal`, because if so, I agree with that.",340084625,2015-11-02 19:34:21 UTC,Clarify,3,11,3,128,63,8,Not Available,MEMBER,False,2015-11-02T20:47:51Z,https://github.com/grpc/grpc-java/pull/1182#discussion_r43678102,0,modified,19,1,20
16827424,https://api.github.com/repos/grpc/grpc-java,25944867,3145,3695855,128833808,88,"Done, and added test case to AbstractServerStreamTest. It seemed to fit better there than in the abstract transport test, as it's fairly low level.",724578548,2017-07-21 18:42:45 UTC,Clarify,4,55,3,1386,456,40,5067076,CONTRIBUTOR,True,2017-08-11T22:59:25Z,https://github.com/grpc/grpc-java/pull/3145#discussion_r128833808,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7954529,534,6773014,34290129,5,Done but I need to make it public in AbstractStream so it can be called by the handlers.,276388403,2015-07-09 16:55:14 UTC,Statement,7,21,1,95,52,14,Not Available,CONTRIBUTOR,True,2015-07-09T19:22:02Z,https://github.com/grpc/grpc-java/pull/534#discussion_r34290129,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,32144857,3839,12722654,155857782,9,"I suspect it's probably easier to have a per-channel limit.  Otherwise, we need to introduce a global lock of some sort, which we don't otherwise need.

For example, in C-core, this limit would probably be introduced via the ResourceQuota mechanism, which is configured on a per-channel basis.",857895056,2017-12-08 19:36:28 UTC,Reject,4,67,17,287,12,7,4779759,MEMBER,False,2018-01-22T18:08:10Z,https://github.com/grpc/grpc-java/pull/3839#discussion_r155857782,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,25973758,3151,3695855,124616697,4,"I think this should use proto-google-common-protos, not grpc-google-common-protos. See https://github.com/grpc/grpc-java/issues/2961#issuecomment-298370880",725272415,2017-06-28 18:17:00 UTC,nAnswer,7,2,5,6,157,3,4779759,CONTRIBUTOR,False,2017-06-29T22:00:32Z,https://github.com/grpc/grpc-java/pull/3151#discussion_r124616697,0,modified,1,0,1
16827424,https://api.github.com/repos/grpc/grpc-java,13679378,1641,5551325,59309441,50,"Optional: You can use Junit4's ExpectedException, which lets you capture both the Exception class and match the toString() of it.",423647366,2016-04-12 01:32:57 UTC,Clarify,9,61,6,2988,59,10,Not Available,MEMBER,False,2016-04-12T14:43:29Z,https://github.com/grpc/grpc-java/pull/1641#discussion_r59309441,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,35931931,4174,1014305,176279092,287,"Using InputStream might be incompatible with retries, as retries need to serialize the message multiple times. That's fine in a test, though.",940630739,2018-03-22 00:21:10 UTC,nAnswer,2,21,4,615,223,5,2819812,MEMBER,False,2018-03-23T00:59:38Z,https://github.com/grpc/grpc-java/pull/4174#discussion_r176279092,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,17079226,2274,5551325,79055108,461,I think they are prevented from being non binary from the transport.  If not I can force them to be.  We enforce it when setting from a key. ,513543951,2016-09-15 20:32:30 UTC,Statement,11,80,1,401,325,8,8943572,MEMBER,True,2016-09-19T21:33:08Z,https://github.com/grpc/grpc-java/pull/2274#discussion_r79055108,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,9109657,902,6773014,38681087,29,The project name is 'android' which is not what we want here and we cant override it,306959416,2015-09-03 16:39:45 UTC,whQuestion,7,41,1,434,10,11,9046588,CONTRIBUTOR,True,2015-09-03T20:58:58Z,https://github.com/grpc/grpc-java/pull/902#discussion_r38681087,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,9096416,894,5551325,38668264,29,"ChannelImpl, ClientCallImpl, MessageDeframer, and MessageDeframer.  They use a mix of != and ==, in order to be able to use null as well.",306839501,2015-09-03 14:53:39 UTC,Statement,6,36,1,448,185,17,8943572,MEMBER,True,2015-09-04T21:42:59Z,https://github.com/grpc/grpc-java/pull/894#discussion_r38668264,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,30722719,3656,2489413,154162797,420,Will do it in a follow-up PR.,850106016,2017-11-30 18:35:06 UTC,Statement,4,43,17,1382,22,6,4779759,MEMBER,True,2017-11-30T18:35:06Z,https://github.com/grpc/grpc-java/pull/3656#discussion_r154162797,15,modified,4,4,8
16827424,https://api.github.com/repos/grpc/grpc-java,21619375,2743,5551325,102832920,175,"This should have been illegal argument exception, not illegal state.",628601600,2017-02-23 22:14:30 UTC,nAnswer,5,24,2,3538,10944,39,9053690,MEMBER,False,2017-02-25T00:36:20Z,https://github.com/grpc/grpc-java/pull/2743#discussion_r102832920,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,10135575,1169,5551325,43336056,13,"Ah yes, you are right.  I am thinking of a different but ongoing issue also with this file, which exhibits the 1-3 ping-ponging.

In that case, it seems like you would want the verifier to fail on any number other than 0?  Perhaps a Captor would be more appropriate?",337958699,2015-10-28 23:16:31 UTC,Clarify,2,9,1,9,2,1,1962333,MEMBER,False,2015-10-29T15:53:10Z,https://github.com/grpc/grpc-java/pull/1169#discussion_r43336056,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,16842829,2235,5551325,78047396,22,"followup CL, this one is fine.",508306097,2016-09-08 17:04:35 UTC,Statement,10,51,2,961,28,13,1388179,MEMBER,False,2016-09-09T14:06:57Z,https://github.com/grpc/grpc-java/pull/2235#discussion_r78047396,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,23665084,2933,3695855,112572115,31,My mistake. I didn't know toBuilder() existed. Fixed.,674828894,2017-04-20 22:13:06 UTC,Clarify,0,12,2,178,34,10,5067076,CONTRIBUTOR,True,2017-04-20T22:57:41Z,https://github.com/grpc/grpc-java/pull/2933#discussion_r112572115,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,24619849,3016,5551325,118364084,47,"Can you describe a little more why you choose this structure?  It seems like for the change you are making to the SUT needs just one new test method, rather than splitting the whole test class.",704577839,2017-05-24 21:03:03 UTC,Clarify,1,10,17,185,78,4,Not Available,MEMBER,False,2017-06-01T21:54:30Z,https://github.com/grpc/grpc-java/pull/3016#discussion_r118364084,4,modified,5,14,19
16827424,https://api.github.com/repos/grpc/grpc-java,9109657,902,6773014,38337760,4,"Odd, it's used in buildTransportServer",307835019,2015-08-31 15:47:15 UTC,Statement,7,41,1,434,10,11,9046588,CONTRIBUTOR,True,2015-09-03T20:58:58Z,https://github.com/grpc/grpc-java/pull/902#discussion_r38337760,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,9109657,902,6773014,38351815,83,"Seems reasonable, I'll see how that looks",307835019,2015-08-31 17:53:13 UTC,Statement,7,41,1,434,10,11,9046588,CONTRIBUTOR,True,2015-09-03T20:58:58Z,https://github.com/grpc/grpc-java/pull/902#discussion_r38351815,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,15213150,1895,1014305,65627894,18,"This line can be moved before the try, which will also prevent prevCtx from being `null` and throwing an exception in `detach()`",457582662,2016-06-02 22:10:16 UTC,Clarify,1,2,1,10,4,1,8943572,MEMBER,False,2016-06-03T04:42:59Z,https://github.com/grpc/grpc-java/pull/1895#discussion_r65627894,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,27477168,3339,1014305,132796922,105,"Everything calling _schedule_ should be safe to delay, because it is based on time. It seems every usage of schedule should be able to use the fake clock, with the possible (unlikely) exception of when something is scheduled with 0 or negative delay (in the past).",758194258,2017-08-11 22:44:17 UTC,Clarify,0,11,5,118,38,2,4779759,MEMBER,False,2017-08-14T21:07:57Z,https://github.com/grpc/grpc-java/pull/3339#discussion_r132796922,0,modified,61,4,65
16827424,https://api.github.com/repos/grpc/grpc-java,25574357,3098,1014305,122808096,5,What's with these changes? Were they just reordered?,718334288,2017-06-19 19:57:34 UTC,whQuestion,5,13,13,156,7,7,2819812,MEMBER,False,2017-09-09T01:12:07Z,https://github.com/grpc/grpc-java/pull/3098#discussion_r122808096,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,25708644,3119,2667165,138666916,69,"To be more precise, the onReadyHandler executes on a thread pool donated by the user application. We have a default thread pool if none is passed into `ServerBuilder.executor`. The thread pool is used to create sets of serialized executor queues, one for each RPC. This onReadyHandler is serialized on one of these such executors, and the same one would be used to run the onNext, onCompleted, etc. So just as it is fine to block in onNext, it is technically fine to block in onReady. The risk is that no further progress can be made for this RPC stream, and one of the threads on the thread pool will be eaten up. Let's update this comment and the one in the server to clarify that blocking would not cause all of gRPC to hang.",781224940,2017-09-13 16:11:08 UTC,Clarify,14,30,18,405,0,4,2811396,CONTRIBUTOR,False,2017-09-26T15:49:12Z,https://github.com/grpc/grpc-java/pull/3119#discussion_r138666916,12,modified,17,31,48
16827424,https://api.github.com/repos/grpc/grpc-java,16134367,1996,3664876,69307416,69,"FYI, I think the [SimpleChannelPromiseAggregator](https://github.com/netty/netty/blob/4.1/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2CodecUtil.java#L218) is probably the way to go here. Perhaps we should make that a top-level class in Netty and get it out of the HTTP2 package.",471772070,2016-07-01 14:27:32 UTC,nAnswer,8,20,6,602,2,6,Not Available,MEMBER,False,2016-08-02T07:35:14Z,https://github.com/grpc/grpc-java/pull/1996#discussion_r69307416,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,16134367,1996,21077,73055353,91,@buchgr I think you also want to override `close(...)` and `disconnect(...)` and ensure that the buffer is written before you process these.,485134069,2016-08-01 21:21:32 UTC,Clarify,8,20,6,602,2,6,Not Available,NONE,False,2016-08-02T07:35:14Z,https://github.com/grpc/grpc-java/pull/1996#discussion_r73055353,4,modified,9,7,16
16827424,https://api.github.com/repos/grpc/grpc-java,8770486,790,6634728,36896439,35,How about annotating it with `@Internal`? `@Internal` itself will be annotated with `@Internal` too.,293396474,2015-08-12 16:32:23 UTC,whQuestion,7,6,1,231,0,8,9053690,CONTRIBUTOR,True,2015-08-12T22:03:35Z,https://github.com/grpc/grpc-java/pull/790#discussion_r36896439,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,12004743,1379,1014305,51607538,9,"No, I'd rather the compiler help verify that each condition block sets the value.",382736088,2016-02-02 18:01:20 UTC,nAnswer,1,2,1,47,1,2,2811396,MEMBER,True,2016-02-02T18:01:20Z,https://github.com/grpc/grpc-java/pull/1379#discussion_r51607538,0,modified,3,1,4
16827424,https://api.github.com/repos/grpc/grpc-java,9132816,966,6773014,38981114,23,We're now re-entrant safe and we don't need to protect against being multi-threaded in this runnable as the executor is serializing,307186857,2015-09-08 19:13:51 UTC,Emphasis,8,13,2,226,4,6,Not Available,CONTRIBUTOR,True,2015-09-09T00:20:50Z,https://github.com/grpc/grpc-java/pull/966#discussion_r38981114,0,modified,9,2,11
16827424,https://api.github.com/repos/grpc/grpc-java,15988394,2115,5551325,73444759,153,"Don't do this.  If your benchmark creates garbage, it has to pay the garbage collector.",486511140,2016-08-04 00:18:15 UTC,Statement,1,29,5,2604,0,99,Not Available,MEMBER,False,2017-08-28T20:08:29Z,https://github.com/grpc/grpc-java/pull/2115#discussion_r73444759,2,modified,164,0,164
16827424,https://api.github.com/repos/grpc/grpc-java,16842829,2235,6174876,77869608,167,"I wanted to keep it so in case of changes to the headers we can undocument it and re-evaluate the memory usage. I only commented it out, so that we don't have the JOL dependency.",508306097,2016-09-07 17:37:09 UTC,Reject,10,51,2,961,28,13,1388179,COLLABORATOR,True,2016-09-09T14:06:57Z,https://github.com/grpc/grpc-java/pull/2235#discussion_r77869608,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7564398,443,1014305,30536354,37,Let's not bother with the streamId >= 3?,259685004,2015-05-18 16:48:52 UTC,Other,7,5,1,73,30,3,1962333,MEMBER,False,2015-05-18T21:19:01Z,https://github.com/grpc/grpc-java/pull/443#discussion_r30536354,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,26950081,3287,1014305,129919661,14,I'm not excited about having a very different code path during the race vs after (with this case being after). It makes it all the more difficult to find bugs during the race.,746894505,2017-07-27 18:19:35 UTC,Clarify,1,20,1,242,48,4,Not Available,MEMBER,False,2017-08-14T23:15:46Z,https://github.com/grpc/grpc-java/pull/3287#discussion_r129919661,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,25574357,3098,1014305,122809366,51,"I'm not excited about how far away from the usages these are. OkHttp in particular would be very easy to put the discards near where the other keys are added. With Netty, the filtering could happen in GrpcHttp2OutboundHeaders.",718334288,2017-06-19 20:03:15 UTC,Clarify,5,13,13,156,7,7,2819812,MEMBER,False,2017-09-09T01:12:07Z,https://github.com/grpc/grpc-java/pull/3098#discussion_r122809366,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7564398,443,1014305,30536532,59,"This should only be done if we don't call onError(). (i.e., it'd be an `else`)",259685004,2015-05-18 16:50:51 UTC,Other,7,5,1,73,30,3,1962333,MEMBER,False,2015-05-18T21:19:01Z,https://github.com/grpc/grpc-java/pull/443#discussion_r30536532,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,23547444,2923,5551325,111827505,84,protect behind an `isLoggable` ?,672290571,2017-04-17 21:36:08 UTC,whQuestion,1,4,1,391,32,10,2811396,MEMBER,False,2017-04-17T21:37:30Z,https://github.com/grpc/grpc-java/pull/2923#discussion_r111827505,0,added,89,0,89
16827424,https://api.github.com/repos/grpc/grpc-java,28534303,3454,1014305,140618649,30,"This is internal, no need to label experimental.",789456103,2017-09-23 00:08:59 UTC,nAnswer,10,63,22,931,94,25,2819812,MEMBER,False,2017-11-02T22:16:20Z,https://github.com/grpc/grpc-java/pull/3454#discussion_r140618649,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7560239,438,3664876,30448753,13,"Yeah, I recall making a similar comment on a previous PR.",258671726,2015-05-15 19:45:38 UTC,nAnswer,4,27,1,431,50,23,Not Available,MEMBER,False,2017-08-28T20:08:26Z,https://github.com/grpc/grpc-java/pull/438#discussion_r30448753,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,9109657,902,6773014,38666797,21,"Extending OkHttpChannelBuilder would have the undesirable effect of making it's signatures part of a stable API which is what we're explicitly trying to avoid here.

We could drop the ChannelBuilder interface for the moment  as we don't need to dynamically detect the underlying transport today. That said AbstractChannelBuilder is now an internal type and so is not really part of the public contract.",306950698,2015-09-03 14:38:55 UTC,Clarify,7,41,1,434,10,11,9046588,CONTRIBUTOR,True,2015-09-03T20:58:58Z,https://github.com/grpc/grpc-java/pull/902#discussion_r38666797,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,28503257,3453,3141479,139609382,7,Actually i don't think it is needed for the tests at all. I will drop it.,785396534,2017-09-19 06:54:03 UTC,Statement,16,15,1,69,12,6,Not Available,CONTRIBUTOR,True,2017-09-19T19:44:09Z,https://github.com/grpc/grpc-java/pull/3453#discussion_r139609382,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,28534303,3454,2667165,146981368,39,Deframing happens on application threads so we can't easily avoid synchronization the same way we can for framing.,816495903,2017-10-25 20:44:00 UTC,Reject,10,63,22,931,94,25,2819812,CONTRIBUTOR,True,2017-11-02T22:16:20Z,https://github.com/grpc/grpc-java/pull/3454#discussion_r146981368,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,10972789,1271,5551325,47422438,33,Was the comment I added not what you wanted?,357417038,2015-12-12 00:46:37 UTC,Clarify,5,20,2,674,30,14,8943572,MEMBER,True,2015-12-15T00:09:58Z,https://github.com/grpc/grpc-java/pull/1271#discussion_r47422438,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,6756105,225,1014305,27307605,59,No space after the >. :-)    https://google-styleguide.googlecode.com/svn/trunk/javaguide.html#s7.1.2-javadoc-paragraphs,236951214,2015-03-27 15:15:20 UTC,Other,15,102,1,849,245,9,Not Available,MEMBER,False,2015-04-07T20:23:00Z,https://github.com/grpc/grpc-java/pull/225#discussion_r27307605,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,13315543,1592,1014305,57488224,5,"Mentioning ""system clock"" is a bit strange, although it could be fine. You might consider something like, ""If there is no time remaining, the returned duration is how long ago the deadline expired.""",413486094,2016-03-25 20:38:11 UTC,Clarify,10,26,2,209,70,10,Not Available,MEMBER,False,2016-03-25T21:08:39Z,https://github.com/grpc/grpc-java/pull/1592#discussion_r57488224,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,34780900,4066,1014305,168086799,57,"Also `rmdir ""$LOCAL_MVN_TEMP""`?",917027269,2018-02-14 06:34:38 UTC,Other,1,15,4,60,19,3,2819812,MEMBER,False,2018-02-14T19:02:38Z,https://github.com/grpc/grpc-java/pull/4066#discussion_r168086799,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,16893769,2240,1014305,78112537,95,"Oh, I see. Each is being tracked separately. I think I'd prefer it being implicit and unconditional, because otherwise it's a pain to deal with in each method.",508827215,2016-09-09 00:24:41 UTC,nAnswer,6,29,2,642,854,23,Not Available,MEMBER,False,2016-09-09T01:36:18Z,https://github.com/grpc/grpc-java/pull/2240#discussion_r78112537,0,modified,70,42,112
16827424,https://api.github.com/repos/grpc/grpc-java,20816402,2667,1014305,98314472,133,"Comparing to protobuf doesn't help the discussion. It doesn't matter what protobuf does because it could not have done what I'm describing. If I was making the protobuf builder I would have done exactly like they would have, because there is no other option.

More examples requiring:
 * [ProcessBuilder](http://docs.oracle.com/javase/8/docs/api/java/lang/ProcessBuilder.html)
 * [DateTimeFormatterBuilder](http://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatterBuilder.html)'s `toFormatter(Locale)`

I (surprisingly, honestly) have not found an example in a similar circumstance that follows your recommendation.",607154927,2017-01-28 00:20:08 UTC,Clarify,4,25,7,233,115,19,8943572,MEMBER,False,2017-01-30T22:51:30Z,https://github.com/grpc/grpc-java/pull/2667#discussion_r98314472,1,modified,4,3,7
16827424,https://api.github.com/repos/grpc/grpc-java,10467687,1207,5551325,45413057,54,"The problem with this is that its harder to test.  The Runnable is created and run in a way that is inaccessible to a test.  It is really hard to tell when the listener is added (explicitly, and in a controlled way).      Thoughts?",347270268,2015-11-19 21:49:06 UTC,nAnswer,2,10,3,114,44,3,Not Available,MEMBER,True,2015-11-23T18:00:41Z,https://github.com/grpc/grpc-java/pull/1207#discussion_r45413057,1,modified,4,3,7
16827424,https://api.github.com/repos/grpc/grpc-java,11165431,1294,5551325,48274106,14,Updated docs.  I don't think it is feasibly to not call the listener from start.,363384000,2015-12-22 17:03:02 UTC,Reject,2,31,0,0,0,0,Not Available,MEMBER,True,2016-01-06T20:16:04Z,https://github.com/grpc/grpc-java/pull/1294#discussion_r48274106,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,17205983,2286,6634728,79741925,73,Changed to create lazily.,516032115,2016-09-21 00:36:09 UTC,Statement,3,11,1,690,21,6,9053690,CONTRIBUTOR,True,2016-09-21T00:44:25Z,https://github.com/grpc/grpc-java/pull/2286#discussion_r79741925,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,29111872,3511,5551325,143313310,108,"Fair enough.  I was hoping that the behavior was identical, which is why I didn't bring it up.  ",801798584,2017-10-06 23:40:46 UTC,nAnswer,0,5,3,173,106,3,8943572,MEMBER,True,2017-10-06T23:40:46Z,https://github.com/grpc/grpc-java/pull/3511#discussion_r143313310,2,modified,2,0,2
16827424,https://api.github.com/repos/grpc/grpc-java,8745738,697,1014305,36659417,57,"It could, but I'm not sure how much point to it there is, since either the value passed to `shutdown()` is `connectionStatus` or `connectionStatus` will be ignored.",292937036,2015-08-10 15:32:17 UTC,Clarify,2,16,6,62,80,4,2811396,MEMBER,True,2015-08-10T20:28:20Z,https://github.com/grpc/grpc-java/pull/697#discussion_r36659417,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,16396096,2184,6634728,75967189,64,checkNotNull for attributes.,498347654,2016-08-23 22:58:52 UTC,Statement,8,25,2,328,122,16,Not Available,CONTRIBUTOR,False,2016-08-24T17:06:52Z,https://github.com/grpc/grpc-java/pull/2184#discussion_r75967189,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,11120285,1289,1014305,48180859,4,"@madongfly, should we use BiMap in core/? Would that disappoint some of our Android users?",361957235,2015-12-21 19:29:09 UTC,Statement,8,15,1,114,95,11,8943572,MEMBER,False,2015-12-21T19:29:09Z,https://github.com/grpc/grpc-java/pull/1289#discussion_r48180859,0,modified,30,38,68
16827424,https://api.github.com/repos/grpc/grpc-java,6510455,166,1014305,25952742,48,This doesn't seem to follow https://github.com/grpc/grpc-common/blob/master/PROTOCOL-HTTP2.md,225434592,2015-03-06 14:42:36 UTC,nAnswer,5,13,1,119,4,2,6493296,MEMBER,False,2015-03-09T20:48:29Z,https://github.com/grpc/grpc-java/pull/166#discussion_r25952742,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8912535,837,5551325,37467176,125,Does serializingExecutor need to be released too?  It still has a reference to it right?,299044393,2015-08-19 18:58:33 UTC,ynQuestion,11,29,1,379,306,15,Not Available,MEMBER,False,2015-08-25T15:36:04Z,https://github.com/grpc/grpc-java/pull/837#discussion_r37467176,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,17034642,2262,5551325,82301123,62,does this fit on the previous line now?,525349349,2016-10-06 22:44:38 UTC,Emphasis,3,86,12,1778,308,73,9053690,MEMBER,False,2016-10-06T23:43:56Z,https://github.com/grpc/grpc-java/pull/2262#discussion_r82301123,10,modified,10,10,20
16827424,https://api.github.com/repos/grpc/grpc-java,6756105,225,3664876,26998650,82,"let's just call this something simpler, like `delegate`.  WDYT?",235431921,2015-03-24 01:07:28 UTC,Other,15,102,1,849,245,9,Not Available,MEMBER,False,2015-04-07T20:23:00Z,https://github.com/grpc/grpc-java/pull/225#discussion_r26998650,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7158157,313,1014305,28822658,9,"Looking at this some more, it doesn't seem there will be any performance difference between the two. So I do think I would prefer us improving OutboundFlowState.writeBytes().",247337189,2015-04-21 19:10:30 UTC,Clarify,11,23,3,143,53,14,Not Available,MEMBER,False,2015-04-23T23:58:31Z,https://github.com/grpc/grpc-java/pull/313#discussion_r28822658,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,17034642,2262,5551325,81250746,152,Please clarify what should happen if bytes is 0,521351028,2016-09-29 22:48:14 UTC,Other,3,86,12,1778,308,73,9053690,MEMBER,False,2016-10-06T23:43:56Z,https://github.com/grpc/grpc-java/pull/2262#discussion_r81250746,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,11622315,1321,1014305,49880098,27,"To communicate which calls produce which exceptions, since we are dealing with `RuntimeExceptions` here.",373399006,2016-01-15 17:27:10 UTC,whQuestion,3,2,1,111,83,6,2811396,MEMBER,True,2016-01-15T22:26:35Z,https://github.com/grpc/grpc-java/pull/1321#discussion_r49880098,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,13306021,1587,5551325,57353731,111,"Typically builders check if arguments are valid on build, rather than on set.",412817633,2016-03-24 17:23:29 UTC,Other,13,32,1,190,122,11,8943572,MEMBER,False,2016-03-24T23:15:11Z,https://github.com/grpc/grpc-java/pull/1587#discussion_r57353731,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,20547461,2618,6634728,99884095,75,"For my own record, the issue is `setStream()` may be scheduled for an unbounded period of time into the future. For example, `CallCredentials` may take a long time to fetch the credentials before triggering `setStream()` (in `MetadataApplierImpl`), prior to which the RPC may be cancelled due to deadline-exceeded. In those cases, real stream are created before `setStream()` is called, only to be started (as required by cancel()) and then cancelled. `start()` typically involve I/O, e.g., sending headers, which are wasted. If the delay before `setStream()` is long enough, this will have a high chance to happen, unlike typical race conditions with low likelihood.",600368625,2017-02-07 17:49:25 UTC,Clarify,2,7,3,226,60,6,Not Available,CONTRIBUTOR,True,2017-02-07T17:51:21Z,https://github.com/grpc/grpc-java/pull/2618#discussion_r99884095,2,modified,9,0,9
16827424,https://api.github.com/repos/grpc/grpc-java,8321297,794,5551325,36812500,87,Increase consistency across the code base.  Other places in the code already do this as precedent.,279282297,2015-08-11 21:32:59 UTC,Clarify,4,57,1,361,68,15,8943572,MEMBER,True,2015-08-17T18:33:05Z,https://github.com/grpc/grpc-java/pull/794#discussion_r36812500,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,21864681,2771,1014305,103736581,13,Hint (no need to change): you can mark the method as `@Deprecated` instead of suppressing the warning.,634682382,2017-03-01 17:08:11 UTC,nAnswer,2,1,3,567,514,3,5067076,MEMBER,False,2017-03-01T17:38:11Z,https://github.com/grpc/grpc-java/pull/2771#discussion_r103736581,0,renamed,7,1,8
16827424,https://api.github.com/repos/grpc/grpc-java,15811717,2067,5551325,72352273,124,why sleep?,483011045,2016-07-26 22:46:19 UTC,whQuestion,10,84,1,517,0,2,8943572,MEMBER,False,2016-08-17T22:19:45Z,https://github.com/grpc/grpc-java/pull/2067#discussion_r72352273,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,13533897,1627,5551325,58568837,69,"Yes, but since this code doesn't actually use it yet, it would hurt our coverage numbers.  Added a TODO to add one.  It should be easy to copy paste when it is needed.",417836487,2016-04-05 16:20:43 UTC,Clarify,5,11,1,265,81,6,8943572,MEMBER,True,2016-04-05T18:33:32Z,https://github.com/grpc/grpc-java/pull/1627#discussion_r58568837,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,30984870,3699,1014305,150051411,183,Would you mind assigning these in the same order each time? So this would be the last line of this block.,832332777,2017-11-09 18:46:14 UTC,Clarify,2,17,5,476,0,4,2819812,MEMBER,False,2017-11-28T19:32:52Z,https://github.com/grpc/grpc-java/pull/3699#discussion_r150051411,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,22181325,2811,1014305,106272246,31,This looks unnecessary. Remove the logger import?,641596159,2017-03-15 20:18:34 UTC,Statement,1,2,1,7,9,1,5067076,MEMBER,False,2017-03-15T20:19:03Z,https://github.com/grpc/grpc-java/pull/2811#discussion_r106272246,0,modified,7,9,16
16827424,https://api.github.com/repos/grpc/grpc-java,14870158,1846,372583,65419504,27,You're right.  I pushed an update.,452667311,2016-06-01 18:44:55 UTC,Statement,14,17,1,132,2,4,8943572,CONTRIBUTOR,True,2016-06-01T21:41:29Z,https://github.com/grpc/grpc-java/pull/1846#discussion_r65419504,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,17034642,2262,6634728,78774932,92,"This is problematic. I wanted to have `messageReceived()` called once for each message, so that if tracing will want to expose message reading events, it will get it right. Now it may be recorded as multiple messageReceived events, depending on how fine-grained it is read.

Alternatively, I could do this in `close()`, but that requires all Marshallers to close the InputStream. No Marshaller does it today. This would be an API change. Not that it would break users, but that stats won't work correctly if the implementation doesn't follow the new API. I think it should be fine. @ejona86 WDYT?",512070930,2016-09-14 15:39:49 UTC,Clarify,3,86,12,1778,308,73,9053690,CONTRIBUTOR,True,2016-10-06T23:43:56Z,https://github.com/grpc/grpc-java/pull/2262#discussion_r78774932,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7665647,478,6773014,30922784,32,"Not sure, the concept is pertinent for things like the Marshaller. Im inclined to keep it here",261566368,2015-05-22 17:08:48 UTC,Statement,3,11,1,293,130,20,Not Available,CONTRIBUTOR,True,2015-05-22T20:32:09Z,https://github.com/grpc/grpc-java/pull/478#discussion_r30922784,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,18908780,2427,1014305,88390828,289,"Just call `handleTermination` here? Ditto in `transportTerminated`? I'm still digging into the threading, but it seems like running the executor is assumed to be safe in `gotoState()`.

Honestly, I don't care too much whether it stays the way it is, but it looked like the use of `terminated` was just because of the history of the code.",557829709,2016-11-17 05:54:52 UTC,Clarify,9,44,13,1478,6,7,9053690,MEMBER,False,2016-11-23T06:21:21Z,https://github.com/grpc/grpc-java/pull/2427#discussion_r88390828,1,modified,141,241,382
16827424,https://api.github.com/repos/grpc/grpc-java,17079226,2274,5551325,79057766,461,"This is in the toString method right?  Do you care that much about this being correct?  This ctor sets all the high bits in the char array to be 0, which will just show up as random charcaters.  Is having the hex output that valuable?",513543951,2016-09-15 20:45:34 UTC,Clarify,11,80,1,401,325,8,8943572,MEMBER,True,2016-09-19T21:33:08Z,https://github.com/grpc/grpc-java/pull/2274#discussion_r79057766,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,15988840,2126,5551325,74512588,218,"Avoid personal pronouns in comments, they get out date soon when multiple people are editing the code.",491824046,2016-08-11 22:05:08 UTC,Clarify,10,117,1,400,1,6,8943572,MEMBER,False,2016-08-19T22:54:29Z,https://github.com/grpc/grpc-java/pull/2126#discussion_r74512588,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,35063190,4093,2667165,169184870,55,"`awaitTermination` in the forwarding class is a nice way to do this, we can remove the interface as well.",919451753,2018-02-19 22:46:33 UTC,nAnswer,0,21,4,529,192,7,2819812,CONTRIBUTOR,True,2018-02-22T18:39:53Z,https://github.com/grpc/grpc-java/pull/4093#discussion_r169184870,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,29199329,3518,1014305,146094781,5,This is a different version than used elsewhere.,814398302,2017-10-21 02:49:25 UTC,Clarify,2,18,14,1999,3,32,Not Available,MEMBER,False,2017-12-22T20:51:24Z,https://github.com/grpc/grpc-java/pull/3518#discussion_r146094781,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8382399,625,1014305,35270625,174,"Acquiring the lock only once greatly eases proving correctness. I don't see the benefit of only calling `onReady()` from one place outweighing the greater difficulty in auditing. It seems the ""simple function"" doesn't really help the methods that are calling it, in that they would be more clear and the overall code shorter if they just did the logic inline.

It _can_ go in as-is, but I do have reservations about it.",279908164,2015-07-22 20:12:38 UTC,Clarify,5,24,1,193,84,4,8943572,MEMBER,False,2015-07-22T22:28:31Z,https://github.com/grpc/grpc-java/pull/625#discussion_r35270625,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,15616315,1989,5551325,68787611,74,"would this be simpler as a for loop over queue?    I see that there is a lock, but it seems like it would make more sense to atomic compare and swap the current queue with a shadow queue, and avoid the copy altogether.",470590070,2016-06-28 16:03:14 UTC,Statement,13,19,3,299,45,15,Not Available,MEMBER,False,2016-06-29T17:13:36Z,https://github.com/grpc/grpc-java/pull/1989#discussion_r68787611,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,20612811,2634,5551325,97177221,6,is this correct?  how come the project(':grpc-core') dep above is not enough?,601127426,2017-01-20 23:39:21 UTC,Clarify,0,6,3,48,26,10,9053690,MEMBER,False,2017-01-21T00:15:24Z,https://github.com/grpc/grpc-java/pull/2634#discussion_r97177221,0,modified,4,0,4
16827424,https://api.github.com/repos/grpc/grpc-java,29199329,3518,1014305,160555686,20,Why use this? Why not just pick one of jcenter or mavenCentral?,871701106,2018-01-09 23:39:45 UTC,Clarify,2,18,14,1999,3,32,Not Available,MEMBER,False,2018-01-09T23:55:22Z,https://github.com/grpc/grpc-java/pull/3518#discussion_r160555686,13,modified,2,1,3
16827424,https://api.github.com/repos/grpc/grpc-java,8286534,665,1014305,35452755,151,This needs to be done with the lock held.,278833911,2015-07-24 16:36:07 UTC,Statement,8,53,15,196,58,2,Not Available,MEMBER,False,2015-07-27T16:23:08Z,https://github.com/grpc/grpc-java/pull/665#discussion_r35452755,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,9109657,902,7000520,38338112,83,"So there are three types in io.grpc.netty.NegotiationType: `TLS`, `PLAINTEXT_UPGRADE` and `PLAINTEXT`, why don't we move it to io.grpc package for all transports use? Is there any transport-specified negotiation type expected in the future?",307835019,2015-08-31 15:50:13 UTC,whQuestion,7,41,1,434,10,11,9046588,CONTRIBUTOR,False,2015-09-03T20:58:58Z,https://github.com/grpc/grpc-java/pull/902#discussion_r38338112,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,25944867,3145,1014305,126021518,39,"Please extend ServerStreamListenerBase instead of using a mock with the Answer. Ditto below in this same file. (It looks harder in other files, so I'm not asking for that.)    The implementation can still be in-line if you want.",724578536,2017-07-06 21:31:58 UTC,Clarify,4,55,3,1386,456,40,5067076,MEMBER,False,2017-08-11T22:59:25Z,https://github.com/grpc/grpc-java/pull/3145#discussion_r126021518,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,16366952,2175,1014305,75543794,67,Checkstyle is failing because this needs one more space.,496773299,2016-08-19 20:05:48 UTC,Clarify,3,6,2,298,10,4,Not Available,MEMBER,False,2016-08-22T14:26:50Z,https://github.com/grpc/grpc-java/pull/2175#discussion_r75543794,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,22060108,2795,12473429,105312589,43,Added a comment.,640787230,2017-03-10 01:25:07 UTC,Continuer,4,14,1,22,1,1,18316330,CONTRIBUTOR,True,2017-03-14T19:38:02Z,https://github.com/grpc/grpc-java/pull/2795#discussion_r105312589,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,10781220,1248,6773014,46995885,113,I'm inclined to have threads because I'm using blocking client intentionally,351729874,2015-12-08 18:52:47 UTC,nAnswer,3,16,1,316,0,1,9046588,CONTRIBUTOR,True,2016-02-17T18:57:47Z,https://github.com/grpc/grpc-java/pull/1248#discussion_r46995885,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,14982452,1856,3664876,64471729,42,What is the purpose for this class? Don't we only have one implementation?,451888667,2016-05-24 20:51:56 UTC,whQuestion,12,24,1,822,70,5,8943572,MEMBER,False,2016-05-26T00:25:28Z,https://github.com/grpc/grpc-java/pull/1856#discussion_r64471729,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,18908780,2427,6634728,88573363,435,"Yes that's a good idea. scheduleBackoff() needed to be out of the lock because it used to call `delayedTransport.startBackoff()`, otherwise there would be deadlock. Now as delayed transport is gone, we can make this simpler.",558389459,2016-11-17 23:47:35 UTC,Clarify,9,44,13,1478,6,7,9053690,CONTRIBUTOR,True,2016-11-23T06:21:21Z,https://github.com/grpc/grpc-java/pull/2427#discussion_r88573363,6,modified,5,2,7
16827424,https://api.github.com/repos/grpc/grpc-java,22478073,2839,5551325,107813719,89,Optional: consider moving the assignment of the method along with assignment of the path,647816079,2017-03-24 00:20:11 UTC,ynQuestion,3,32,1,306,51,11,10237908,MEMBER,False,2017-03-30T21:24:52Z,https://github.com/grpc/grpc-java/pull/2839#discussion_r107813719,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,9426544,1048,6634728,41415053,66,I just talked with @a11r. We can assume the authority we use to create connections for actual RPCs is always the same as the service name that the naming system gives us. Do you want me to remove serviceName?,325121767,2015-10-07 14:49:26 UTC,Clarify,5,61,1,1511,214,29,9053690,CONTRIBUTOR,True,2015-10-21T00:29:22Z,https://github.com/grpc/grpc-java/pull/1048#discussion_r41415053,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,30871298,3670,1014305,149251976,20,I'd either want to throw or do nothing. I'd be fine swapping to throwing.,829378408,2017-11-07 01:26:00 UTC,Clarify,1,9,2,123,10,6,2811396,MEMBER,True,2017-11-10T00:00:48Z,https://github.com/grpc/grpc-java/pull/3670#discussion_r149251976,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,30233435,3604,475246,147564916,9,"Even w/ dependencyConvergence, it may still converge to a wrong version, and/or worse yet, enforcing a newer version of netty, but w/ an incompatible version of tcnative.",818509474,2017-10-28 21:29:16 UTC,Clarify,12,19,8,59,1,2,2811396,CONTRIBUTOR,True,2017-10-30T17:42:10Z,https://github.com/grpc/grpc-java/pull/3604#discussion_r147564916,6,modified,2,0,2
16827424,https://api.github.com/repos/grpc/grpc-java,23479137,2916,1014305,111764939,15,"I don't follow. I only see values `1000` and INF used. If `1000` is too small, make it larger.",670521190,2017-04-17 16:07:06 UTC,nAnswer,0,5,2,39,10,5,4779759,MEMBER,False,2017-04-17T21:53:26Z,https://github.com/grpc/grpc-java/pull/2916#discussion_r111764939,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,23479137,2916,2489413,111651100,15,"if `enableKeepAlive` is true, the original nano values are too small. `keepAliveTimeout` being 1 nano definitely fails the test.",670521190,2017-04-14 23:51:34 UTC,Clarify,0,5,2,39,10,5,4779759,MEMBER,True,2017-04-17T21:53:26Z,https://github.com/grpc/grpc-java/pull/2916#discussion_r111651100,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7483798,417,3402699,30081276,106,"I redid this. I realized that calling `writePing` from an arbitrary app thread could mistakenly break up the two underlying writes (frame header and then payload), interleaving them with other writes.

I changed it to use `ctx.write(Object)` and followed the command pattern already in place for other such writes. That should end up issuing the writes from a `ChannelHandlerInvoker`, which should be correct for expected thread-safety. I'm hoping you or @ejona86 have enough Netty-fu to help me make sure I'm doing it correctly.

In any event, the new code that writes the ping frame now also does a flush. Digging through everything else, it looked like you were right and that it is necessary.",255372112,2015-05-11 18:59:45 UTC,Clarify,10,35,1,821,14,9,2811396,MEMBER,True,2015-06-10T16:25:59Z,https://github.com/grpc/grpc-java/pull/417#discussion_r30081276,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,18272660,2381,1014305,85243845,123,Read can return less than the requested amount.,543173313,2016-10-26 23:51:51 UTC,Clarify,9,37,5,668,518,34,Not Available,MEMBER,False,2017-01-06T10:54:17Z,https://github.com/grpc/grpc-java/pull/2381#discussion_r85243845,0,modified,51,9,60
16827424,https://api.github.com/repos/grpc/grpc-java,11948985,1374,5551325,51337648,5,"It nags when building, and I did not know what the correct alternative is.  CIH adds a bunch of methods unrelated to how we are using CH here, so I left it as a todo.",381291083,2016-01-30 01:52:42 UTC,whQuestion,1,2,1,18,9,7,8943572,MEMBER,True,2016-01-30T01:55:26Z,https://github.com/grpc/grpc-java/pull/1374#discussion_r51337648,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,30725885,3659,2667165,148841016,57,now catching all Throwables,826019457,2017-11-03 17:07:25 UTC,Statement,0,15,5,192,3,3,2819812,CONTRIBUTOR,True,2017-11-06T18:23:28Z,https://github.com/grpc/grpc-java/pull/3659#discussion_r148841016,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,29199329,3518,1014305,160555668,18,Why use this?,871701106,2018-01-09 23:39:36 UTC,whQuestion,2,18,14,1999,3,32,Not Available,MEMBER,False,2018-01-09T23:55:22Z,https://github.com/grpc/grpc-java/pull/3518#discussion_r160555668,13,modified,2,1,3
16827424,https://api.github.com/repos/grpc/grpc-java,30767746,3663,2667165,148913666,31,nit: the whitespace here and on 1188 don't match 1156 and 1215. My IDE seems to think 1156 is the correct one.,826858697,2017-11-03 23:41:23 UTC,Statement,0,9,3,96,10,1,8943572,CONTRIBUTOR,False,2017-11-06T19:39:43Z,https://github.com/grpc/grpc-java/pull/3663#discussion_r148913666,0,modified,106,10,116
16827424,https://api.github.com/repos/grpc/grpc-java,20909918,2673,5551325,99022649,12,checkNotNull?,609725752,2017-02-01 23:28:30 UTC,ynQuestion,3,24,6,283,15,7,9053690,MEMBER,False,2017-02-03T21:24:01Z,https://github.com/grpc/grpc-java/pull/2673#discussion_r99022649,0,modified,3,0,3
16827424,https://api.github.com/repos/grpc/grpc-java,6756105,225,6174876,27609272,103,@ejona86 We don't need the check at all. The encoder will take care of this.,236951214,2015-04-01 18:41:36 UTC,Clarify,15,102,1,849,245,9,Not Available,COLLABORATOR,True,2015-04-07T20:23:00Z,https://github.com/grpc/grpc-java/pull/225#discussion_r27609272,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,6756105,225,1014305,27085241,24,"Remove ""and await"" from comment.",235805516,2015-03-24 22:58:24 UTC,Clarify,15,102,1,849,245,9,Not Available,MEMBER,False,2015-04-07T20:23:00Z,https://github.com/grpc/grpc-java/pull/225#discussion_r27085241,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,12307686,1422,1014305,53228849,153,Use `ForwardingServerCallListener` or `ForwardingServerCallListener.SimpleForwardingServerCallListener`,389691455,2016-02-17 20:48:24 UTC,Clarify,13,12,1,409,65,6,Not Available,MEMBER,False,2016-02-22T01:40:44Z,https://github.com/grpc/grpc-java/pull/1422#discussion_r53228849,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,7955256,530,1014305,33193516,72,Why is this static?,273701717,2015-06-24 18:42:39 UTC,whQuestion,9,52,1,2392,0,22,1962333,MEMBER,False,2015-06-26T22:31:54Z,https://github.com/grpc/grpc-java/pull/530#discussion_r33193516,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,15470150,1919,5551325,66847115,56,"Sometimes there is an overhead just for having something as part of the system.  Usually doubling the number of custom options should be double the total runtime, but its usually off by a constant.  Having a size of 0 should reveal what that constant is.

Also, We expect 0 to be extremely common as the number of custom call options, so it is representative. ",463700580,2016-06-13 18:56:50 UTC,Clarify,2,7,1,136,10,3,1388179,MEMBER,False,2016-06-15T08:25:15Z,https://github.com/grpc/grpc-java/pull/1919#discussion_r66847115,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8054791,553,3691158,32794441,4,nice! thanks for moving,272413438,2015-06-18 23:07:46 UTC,Emphasis,2,14,3,424,82,7,2811396,CONTRIBUTOR,False,2015-06-26T19:20:37Z,https://github.com/grpc/grpc-java/pull/553#discussion_r32794441,Not Available,Not Available,Not Available,Not Available,Not Available
16827424,https://api.github.com/repos/grpc/grpc-java,8320907,678,3664876,36791978,47,This is so that it's easily changed locally.  Agreed that it's strange but it's temporary.,279279033,2015-08-11 18:06:45 UTC,Reject,3,20,1,148,55,10,6493296,MEMBER,True,2015-08-14T18:21:25Z,https://github.com/grpc/grpc-java/pull/678#discussion_r36791978,Not Available,Not Available,Not Available,Not Available,Not Available
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,22602540,383,299591,109655659,1,"(Note: I don't care about the order, I think we should just keep them grouped for readability)",650195642,2017-04-04 13:04:12 UTC,Clarify,2,4,5,30,25,4,40213,CONTRIBUTOR,False,2017-04-04T13:04:13Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/383#discussion_r109655659,4,modified,22,22,44
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,21700738,330,299591,102898338,20,We can drop `request.disableRetries();` which is just a convenience method that calls `setRetryPolicy`,630899289,2017-02-24 08:36:45 UTC,Clarify,0,2,2,5,1,1,40213,CONTRIBUTOR,False,2017-02-24T13:27:01Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/330#discussion_r102898338,0,modified,5,0,5
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,36453262,756,6647042,177137009,177,"Similarly to [this comment](https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/756#discussion_r175779590), it doesn't seem like we need the extra overhead of `data` classes here (and for the inner classes as well), since these are only generated by Gson and don't require getters/setters/etc.",956834027,2018-03-26 15:38:28 UTC,Clarify,3,35,21,754,1,11,1079756,CONTRIBUTOR,False,2018-03-28T08:44:13Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/756#discussion_r177137009,15,modified,1,1,2
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,30133783,589,205127,146329620,23,We need to update this comment as well.,814331450,2017-10-23 16:57:45 UTC,Statement,0,2,5,105,55,4,662023,CONTRIBUTOR,False,2017-10-23T19:13:15Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/589#discussion_r146329620,3,modified,29,7,36
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,22548141,375,6647042,106954823,178,Future reader: it turned out that @maxme had `Align when multiline` enabled in AS under `Editor` > `Code Style` > `Java` > `Wrapping and Braces` > `Binary expressions`. Default settings won out.,649492679,2017-03-20 16:54:00 UTC,Other,1,3,6,50,51,1,40213,CONTRIBUTOR,True,2017-03-20T16:54:00Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/375#discussion_r106954823,5,modified,3,2,5
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,35986072,736,299591,173092327,4,Should we add `s` for static field names?,937635182,2018-03-08 08:36:06 UTC,Other,7,14,13,54,18,5,40213,CONTRIBUTOR,False,2018-03-08T13:40:20Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/736#discussion_r173092327,2,modified,1,0,1
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,21486463,322,6647042,101846318,117,Isn't this also going to include local (non-uploaded) media that's in a pending/failed/etc state?,620066152,2017-02-17 21:01:21 UTC,nAnswer,7,21,38,215,180,9,9613966,CONTRIBUTOR,False,2017-02-23T12:56:50Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/322#discussion_r101846318,18,modified,8,2,10
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,31311727,620,1719788,151488659,6,I added the new constructor in 307309616c510f23ef800ef67c7b69f383f270c5.  I moved the parsing logic in 5846d60900a0455bd6b9c3cfbe6f7869c0d37eb9.,838927650,2017-11-16 17:49:22 UTC,nAnswer,1,2,3,34,22,2,9613966,CONTRIBUTOR,True,2017-11-16T17:49:22Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/620#discussion_r151488659,0,modified,5,1,6
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,20912800,300,6647042,98758563,6,Is this change necessary? Can't we just bump the `wellsql` dependency to `1.1.1` and get the https://github.com/wordpress-mobile/wellsql/pull/6 fix?,609746369,2017-01-31 20:07:43 UTC,nAnswer,1,2,5,67,4,3,4031052,CONTRIBUTOR,False,2017-02-02T05:58:27Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/300#discussion_r98758563,3,modified,1,1,2
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,21069148,306,299591,99752249,85,Fixed in  b7d51b0 ,612467488,2017-02-07 06:18:18 UTC,Statement,1,4,7,334,92,17,9613966,CONTRIBUTOR,True,2017-02-07T06:18:18Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/306#discussion_r99752249,5,modified,8,51,59
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,27538372,533,3407236,137310222,4,"Good to know! thank you for pointing out exactly what the changes were, so we make sure it won't affect existing systems ???? ",775118820,2017-09-06 15:53:19 UTC,Emphasis,19,24,56,3008,46,32,40213,CONTRIBUTOR,False,2017-09-21T14:19:47Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/533#discussion_r137310222,41,modified,2,2,4
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,28043718,542,2037006,136213700,48,> especially since it's a public method (which it shouldn't be)?    I think `removeThemes` needs to be exposed so they can be deleted when self-hosted sites are removed in WPAndroid. That's the case I was thinking of at least.,771482869,2017-08-30 23:20:14 UTC,Clarify,2,32,50,1054,0,17,662023,CONTRIBUTOR,True,2017-08-30T23:33:31Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/542#discussion_r136213700,42,modified,3,12,15
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,30035626,584,205127,145811557,51,"We should extract `mThemeStore.getThemeByThemeId(testThemeId, false)` into a variable so we don't have to call it again in the next line.",812465868,2017-10-19 20:17:36 UTC,Reject,0,40,41,751,63,7,662023,CONTRIBUTOR,False,2017-10-23T21:40:26Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/584#discussion_r145811557,20,modified,5,5,10
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,30940982,605,408496,158224733,4,"Good point, done with be030a2.",868432764,2017-12-21 08:59:12 UTC,Statement,5,10,15,115,31,8,662023,CONTRIBUTOR,True,2017-12-22T09:22:09Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/605#discussion_r158224733,7,modified,1,2,3
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,36453262,756,1512784,177324873,24,I haven't noticed that! thanks ???? ,956834027,2018-03-27 07:00:40 UTC,Emphasis,3,35,21,754,1,11,1079756,CONTRIBUTOR,True,2018-03-28T08:44:13Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/756#discussion_r177324873,15,added,76,0,76
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,20914106,301,299591,98845431,26,Updated in  	336e284,609754616,2017-02-01 08:27:15 UTC,Statement,1,3,2,10,5,1,9613966,CONTRIBUTOR,True,2017-02-01T08:27:15Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/301#discussion_r98845431,0,modified,9,4,13
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,28043718,542,205127,135794131,49,"Can the `themeId` be empty? I am guessing it can, but I am curious about how it can.",770590822,2017-08-29 13:49:09 UTC,nAnswer,2,32,50,1054,0,17,662023,CONTRIBUTOR,False,2017-08-30T23:33:31Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/542#discussion_r135794131,30,added,77,0,77
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,16227367,122,299591,83203024,70,Same branch `feature/39-media-store-small-fixes` will work,532207175,2016-10-13 12:23:34 UTC,Clarify,21,32,184,4471,78,40,40213,CONTRIBUTOR,False,2016-10-26T15:57:27Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/122#discussion_r83203024,Not Available,Not Available,Not Available,Not Available,Not Available
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,28043718,542,205127,135791993,20,"I don't know how the fetch wp themes network call works, but if we are getting all the available wp themes and not a subset of them, we should be deleting every theme before inserting the new ones as there could be some themes removed on the remote. If that's not the case, please ignore this comment.",770590822,2017-08-29 13:41:18 UTC,Clarify,2,32,50,1054,0,17,662023,CONTRIBUTOR,False,2017-08-30T23:33:31Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/542#discussion_r135791993,30,added,77,0,77
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,21486463,322,205127,102069231,145,Fixed in db1bb0b2135ea92db336ebd5d2d64b0742aa36b1,620066152,2017-02-20 18:02:02 UTC,Statement,7,21,38,215,180,9,9613966,CONTRIBUTOR,True,2017-02-23T12:56:50Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/322#discussion_r102069231,18,modified,8,2,10
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,19068818,236,6647042,89407140,33,"Same as above, should be `assertTrue(...)`",562280415,2016-11-23 22:09:23 UTC,Other,2,4,24,424,62,13,9613966,CONTRIBUTOR,False,2016-11-24T07:39:43Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/236#discussion_r89407140,20,modified,37,33,70
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,32680850,655,205127,158393338,74,"We need to throw an error here if we don't expect it to happen. Otherwise the test will pass if we ever get `INVALID_INPUT` error when we expect the call to actually succeed. (Not in it's current form, in it's current form it'll just hang because we never call `mCountDownLatch.countDown();`, but I assume we'll cover the success path)",868547197,2017-12-21 22:31:15 UTC,Clarify,4,27,27,241,1,8,662023,CONTRIBUTOR,False,2017-12-27T18:37:20Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/655#discussion_r158393338,10,modified,54,1,55
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,32680850,655,205127,158095610,28,"Similar to my previous comment, we should have information about which `account` and `username` this even is related to.",868547201,2017-12-20 18:07:54 UTC,Clarify,4,27,27,241,1,8,662023,CONTRIBUTOR,False,2017-12-27T18:37:20Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/655#discussion_r158095610,6,modified,20,0,20
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,28105661,546,205127,136116619,22,"That's my bad @aforcier, I'll remove that commit.",771884710,2017-08-30 16:13:04 UTC,Statement,1,4,4,15,13,4,4031052,CONTRIBUTOR,True,2017-08-30T16:16:16Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/546#discussion_r136116619,Not Available,Not Available,Not Available,Not Available,Not Available
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,29017818,566,299591,143450556,5,"Ok, last time I checked there was a very long discussion about performances of the Android injectors, I'm not sure if it's a big deal or if it's solved.",803619601,2017-10-09 12:14:45 UTC,Clarify,3,3,14,216,199,30,40213,CONTRIBUTOR,False,2017-10-09T12:23:01Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/566#discussion_r143450556,12,modified,1,1,2
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,16418505,77,299591,76271633,435,"Humm, what about removing the post from the DB here? (or dispatching  `REMOVE_POST`) so the app doesn't have to ""refresh"" the post list or call remove.",499660668,2016-08-25 15:56:45 UTC,Clarify,7,18,115,4234,52,41,40213,CONTRIBUTOR,False,2016-08-26T15:58:31Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/77#discussion_r76271633,Not Available,Not Available,Not Available,Not Available,Not Available
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,36240789,749,1790890,175254508,72,"I wondered this myself. The response to the upload request does return a list of successfully uploaded media so we should be able to compare that list to the list we asked to upload and figure out what failed, but that's a task for another day.",946222049,2018-03-17 10:40:39 UTC,Clarify,2,26,31,270,24,8,662023,CONTRIBUTOR,True,2018-03-20T10:27:38Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/749#discussion_r175254508,18,modified,96,0,96
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,18554814,221,6647042,90147167,84,"Agreed - interestingly, `getClass() != other.getClass()` is what the IntelliJ default spits out if you use the generator.",563765508,2016-11-30 00:35:10 UTC,Reject,4,32,31,2468,41,27,4031052,CONTRIBUTOR,True,2016-11-30T15:22:59Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/221#discussion_r90147167,21,modified,17,0,17
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,35275617,717,205127,169705335,143,"We should add a comment about this though, so it's not added by someone else by mistake later. I'll do that before we merge this.",923000859,2018-02-21 16:55:52 UTC,Clarify,1,5,28,357,65,4,3903757,CONTRIBUTOR,True,2018-02-21T16:55:53Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/717#discussion_r169705335,27,modified,7,0,7
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,20948939,302,6647042,99178619,37,Isn't this dangerous? What if a user adds a self-hosted Jetpack site connected to a WP.com account other than the one logged into? Then things like `SiteStore.getWPComSites()` no longer mean what we might think they mean.,611089339,2017-02-02 17:47:35 UTC,Clarify,6,13,16,216,130,12,9613966,CONTRIBUTOR,False,2017-02-08T16:33:30Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/302#discussion_r99178619,5,modified,7,2,9
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,21554258,325,6647042,102237509,23,Do you know why we're setting the progress to `0` here while the corresponding cases in `MediaRestClient` send progress `1`?,628106427,2017-02-21 15:41:38 UTC,Clarify,7,4,8,94,27,5,9613966,CONTRIBUTOR,False,2017-02-22T11:25:55Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/325#discussion_r102237509,3,modified,33,9,42
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,28043718,542,205127,135791478,181,I haven't checked the `ThemeSqlUtils` yet but shouldn't this method be named as `insertOrUpdate`?,770590822,2017-08-29 13:39:28 UTC,Clarify,2,32,50,1054,0,17,662023,CONTRIBUTOR,False,2017-08-30T23:33:31Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/542#discussion_r135791478,30,modified,1,1,2
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,36240789,749,6647042,175460559,33,"`ReleaseStack_WPComBase` 's `mNextEvent` is private, and the `mNextEvent = TestEvents.NONE` in there doesn't actually affect `mNextEvent` in its subclasses - they're two different objects. So, it's still necessary to reset the `mNextEvent` here if we want to ensure a clean start for each test.",942643651,2018-03-19 14:46:40 UTC,Clarify,2,26,31,270,24,8,662023,CONTRIBUTOR,False,2018-03-20T10:27:38Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/749#discussion_r175460559,10,modified,1,1,2
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,27538372,533,6647042,137299994,72,"Great suggestion! I made some `.json` file resources instead, I think it's the cleanest way to do this: adbcb2d.",775118820,2017-09-06 15:19:59 UTC,Emphasis,19,24,56,3008,46,32,40213,CONTRIBUTOR,True,2017-09-21T14:19:47Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/533#discussion_r137299994,41,modified,8,0,8
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,30967492,606,205127,149830329,15,"I even thought that this would stand out and I should mention it in the PR description, but completely forgot about it.",831381707,2017-11-08 23:40:36 UTC,Clarify,2,3,6,123,2,3,4031052,CONTRIBUTOR,True,2017-11-08T23:40:36Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/606#discussion_r149830329,5,modified,8,5,13
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,16093741,109,6647042,74266760,6,"If we don't plan on supporting any sub-endpoints anytime soon (`.../post-formats/new/`?), we can simplify this to `new WPComEndpoint(getEndpoint() + ""post-formats/"")` and drop `PostFormatsEndpoint` (see, e.g., the `/users/new/` endpoint below).",489087626,2016-08-10 15:24:38 UTC,Clarify,1,6,13,344,19,15,9613966,CONTRIBUTOR,False,2016-08-10T16:42:51Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/109#discussion_r74266760,9,modified,83,38,121
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,29017818,566,299591,143449520,5,We should switch to Android injectors at some point,803619601,2017-10-09 12:09:30 UTC,Clarify,3,3,14,216,199,30,40213,CONTRIBUTOR,False,2017-10-09T12:23:01Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/566#discussion_r143449520,12,modified,1,1,2
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,25467610,469,6647042,123369743,22,We can probably name this something like `removeWPComRestSitesAbsentFromList` for a bit of extra clarity - what do you think?,714121967,2017-06-21 21:23:24 UTC,Clarify,4,8,17,142,5,7,9613966,CONTRIBUTOR,False,2017-06-27T14:59:07Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/469#discussion_r123369743,6,modified,4,6,10
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,28043718,542,205127,136010020,49,Another issue here is that `getSiteId` will return the remote id and not the local one. We should be using the local one here.,771482869,2017-08-30 08:56:02 UTC,Clarify,2,32,50,1054,0,17,662023,CONTRIBUTOR,False,2017-08-30T23:33:31Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/542#discussion_r136010020,42,modified,3,12,15
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,16418505,77,299591,76272838,435,"Note: If we decide to not do that, then we should update the example app and dispatch REMOVE_POST in OnPostChanged, so if we tap the ""Delete Post"" button several time in the example it won't do weird things.",499660668,2016-08-25 16:02:42 UTC,Reject,7,18,115,4234,52,41,40213,CONTRIBUTOR,False,2016-08-26T15:58:31Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/77#discussion_r76272838,Not Available,Not Available,Not Available,Not Available,Not Available
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,25467610,469,6647042,123368527,17,We should still handle the [duplicate sites case](https://github.com/wordpress-mobile/WordPress-FluxC-Android/blob/619b1804f03d1faa2dd18be6131c1c252c052043/fluxc/src/main/java/org/wordpress/android/fluxc/store/SiteStore.java#L842-L844) here.,714121967,2017-06-21 21:18:05 UTC,Clarify,4,8,17,142,5,7,9613966,CONTRIBUTOR,False,2017-06-27T14:59:07Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/469#discussion_r123368527,6,modified,1,0,1
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,35986072,736,299591,173092478,12,"Note I changed that to run `Restyle code` without changing every javadoc, but we could re-enable it.",937635182,2018-03-08 08:36:53 UTC,Clarify,7,14,13,54,18,5,40213,CONTRIBUTOR,False,2018-03-08T13:40:20Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/736#discussion_r173092478,2,modified,1,0,1
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,18054027,195,6647042,84303833,5,"Fixed in c165101, was meant to be Bordeaux!",538165589,2016-10-20 15:05:46 UTC,Emphasis,1,3,10,299,12,9,40213,CONTRIBUTOR,True,2016-10-20T15:16:41Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/195#discussion_r84303833,8,modified,8,8,16
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,23795778,424,6647042,113179355,17,"> we should call `notifyMediaUploaded` with an error and we should also call `removeCallFromCurrentUploadsMap`

Done in 83e0939.

> (I wonder if we should move this to `notifyMediaUploaded` to make sure we don't forget it)

My thoughts exactly - noticed a few other pre-existing cases where we aren't calling `removeCallFromCurrentUploadsMap()`. Moved in b592064.",677789525,2017-04-25 12:20:11 UTC,Clarify,2,13,11,141,39,3,40213,CONTRIBUTOR,True,2017-04-25T19:21:56Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/424#discussion_r113179355,2,modified,31,8,39
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,32929253,666,1790890,159007093,15,"Before I started the code review I commented that updating an existing tag isn't working, and I believe this is why. If I edit a tag name, then the updated slug will be passed here. Instead, it needs to pass the pre-existing slug.",875357738,2017-12-28 22:36:01 UTC,Clarify,3,6,6,118,50,5,3903757,CONTRIBUTOR,False,2017-12-28T22:36:01Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/666#discussion_r159007093,5,modified,5,1,6
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,20314703,274,205127,101021610,408,"Same issue mentioned in [handleMediaFetched](https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/274/files#r101021343) could happen here. This is slightly different as there is no later `null` check, but we should probably check for it before adding to list.",618086895,2017-02-14 12:16:06 UTC,Clarify,3,66,90,1350,1049,15,662023,CONTRIBUTOR,False,2017-02-15T13:46:26Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/274#discussion_r101021610,66,modified,5,5,10
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,32197858,641,6647042,155698699,5,"This is pretty minor, but I think we may as well check that the string is not empty here, as an extra verification that we're parsing it properly/it's not returned empty from the server.",858634558,2017-12-08 03:43:43 UTC,nAnswer,2,2,4,24,1,5,9613966,CONTRIBUTOR,False,2017-12-08T03:55:46Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/641#discussion_r155698699,2,modified,3,0,3
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,22883766,400,299591,109009749,12,"Yes, please, it's much easier to use dagger for this.",657931485,2017-03-30 19:00:08 UTC,Reject,3,8,19,181,155,20,Not Available,CONTRIBUTOR,False,2017-04-07T14:17:28Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/400#discussion_r109009749,Not Available,Not Available,Not Available,Not Available,Not Available
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,23648886,418,2037006,112699400,12,"It was a questionable decision on my end. I decided to do it since none of the `PostStore` action handlers (`fetchPosts`, `deletePost`, etc...) did any error checking, they are simply pass-throughs to the appropriate client. I'm 100% on board with removing this and simply emitting and error from `PostStore` directly.",674727075,2017-04-21 14:25:32 UTC,Clarify,2,8,18,214,5,5,662023,CONTRIBUTOR,True,2017-04-21T15:09:48Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/418#discussion_r112699400,13,modified,1,1,2
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,24940288,454,6647042,120926270,29,"I can see that we get an `unknown : Unknown error communicating with the Jetpack site` error if we exceed both `upload_max_filesize` and `post_max_size`, and I guess that's why you're changing the error for `unknown` too. But I'm not sure that we should make this change for `unknown` errors, as we could get those legitimately for other reasons (we could get the HMAC one too I guess, but that's less likely).",702603610,2017-06-08 15:49:15 UTC,Clarify,4,2,4,14,2,1,9613966,CONTRIBUTOR,False,2017-06-09T15:01:09Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/454#discussion_r120926270,1,modified,1,1,2
42639030,https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android,17912168,186,299591,84468602,42,"Good catch, I updated `genericToCommentError` for REST, and added a comment for XMLRPC.",538974589,2016-10-21 12:19:22 UTC,Clarify,2,8,99,2397,16,24,9613966,CONTRIBUTOR,True,2016-10-21T14:03:14Z,https://github.com/wordpress-mobile/WordPress-FluxC-Android/pull/186#discussion_r84468602,88,modified,10,3,13
14932800,https://api.github.com/repos/Netflix/iep,19059465,285,15698,89119408,29,"Specify a locale for the toLowerCase conversion, otherwise it is system dependent. `Locale.US` should work fine for this purpose. ",561174279,2016-11-22 13:57:19 UTC,nAnswer,1,3,7,115,117,5,Not Available,CONTRIBUTOR,False,2016-11-22T21:09:41Z,https://github.com/Netflix/iep/pull/285#discussion_r89119408,2,modified,5,2,7
14932800,https://api.github.com/repos/Netflix/iep,21075773,293,15698,99959057,33,Can you follow the typical java/scala comment format so these will show up in scaladoc or similar tools?    ```  /**    * ...    */  ```,612561165,2017-02-07 23:38:37 UTC,Clarify,1,6,3,167,268,10,1289028,CONTRIBUTOR,False,2017-02-08T03:32:50Z,https://github.com/Netflix/iep/pull/293#discussion_r99959057,Not Available,Not Available,Not Available,Not Available,Not Available
14932800,https://api.github.com/repos/Netflix/iep,21075773,293,15698,99959949,47,"The url should be configurable. Perhaps a constructor param?

Why not use iep-rxhttp? It is already being used by many of our projects, has the standard metrics/logging we expect, and since it would generate an observable could be used more cleanly without a blocking thread in the background.",612561165,2017-02-07 23:44:04 UTC,Clarify,1,6,3,167,268,10,1289028,CONTRIBUTOR,False,2017-02-08T03:32:50Z,https://github.com/Netflix/iep/pull/293#discussion_r99959949,Not Available,Not Available,Not Available,Not Available,Not Available
14932800,https://api.github.com/repos/Netflix/iep,33960923,347,3918284,163408839,13,"That's fair. The (complete) removal of archaius1 is on the TODO list, but it will involve some significant restructuring of the project so is not as trivial.",896757865,2018-01-23 23:22:24 UTC,Statement,1,4,2,10,2,1,1289028,NONE,False,2018-01-23T23:22:25Z,https://github.com/Netflix/iep/pull/347#discussion_r163408839,1,modified,9,5,14
14932800,https://api.github.com/repos/Netflix/iep,33960923,347,3918284,163405200,13,"Out of curiosity, have you guys looked at eureka-client-archaius2? It is entirely archaius2 based and does not instantiate any archaius1 classes at all.",896757865,2018-01-23 23:03:12 UTC,ynQuestion,1,4,2,10,2,1,1289028,NONE,False,2018-01-23T23:03:12Z,https://github.com/Netflix/iep/pull/347#discussion_r163405200,1,modified,9,5,14
14932800,https://api.github.com/repos/Netflix/iep,21075773,293,48090,99985922,121,Will fix in a future commit.  ,612561165,2017-02-08 03:33:00 UTC,Continuer,1,6,3,167,268,10,1289028,CONTRIBUTOR,True,2017-02-08T03:33:00Z,https://github.com/Netflix/iep/pull/293#discussion_r99985922,Not Available,Not Available,Not Available,Not Available,Not Available
14932800,https://api.github.com/repos/Netflix/iep,19059465,285,15698,89119519,27,s/if(/if (/    Should we allow null values to be passed in? Maybe this should be a NullPointerException.,561174279,2016-11-22 13:57:59 UTC,Other,1,3,7,115,117,5,Not Available,CONTRIBUTOR,False,2016-11-22T21:09:41Z,https://github.com/Netflix/iep/pull/285#discussion_r89119519,2,modified,5,2,7
14932800,https://api.github.com/repos/Netflix/iep,6498020,21,108154,25667389,6,@brharrington That makes sense.,225160396,2015-03-03 06:24:20 UTC,Continuer,3,2,1,3,0,1,1289028,CONTRIBUTOR,True,2015-03-03T07:24:20Z,https://github.com/Netflix/iep/pull/21#discussion_r25667389,0,modified,3,0,3
14932800,https://api.github.com/repos/Netflix/iep,21075773,293,15698,99960347,53,"Personally I prefer to avoid alignment with the opening paren. I find it harder to read and it causes unnecessary diffs when refactoring that changes where the start is. If it won't fit on the line I prefer:

```scala
case class EddaAutoScalingGroup(
    name: String,
    start: Long,
    slot: Int)
```",612561165,2017-02-07 23:46:35 UTC,Clarify,1,6,3,167,268,10,1289028,CONTRIBUTOR,False,2017-02-08T03:32:50Z,https://github.com/Netflix/iep/pull/293#discussion_r99960347,Not Available,Not Available,Not Available,Not Available,Not Available
14932800,https://api.github.com/repos/Netflix/iep,33960923,347,15698,163386935,5,This isn't always done. The reason we do not do it automatically as a transitive dependency is that the app may be configuring archaius1 in some other way.,896709736,2018-01-23 21:46:12 UTC,Reject,1,4,2,10,2,1,1289028,CONTRIBUTOR,False,2018-01-23T21:51:14Z,https://github.com/Netflix/iep/pull/347#discussion_r163386935,0,modified,5,1,6
14932800,https://api.github.com/repos/Netflix/iep,14859543,256,364933,63940911,4,"There is no need to remove the final from this usage here. You want to remove final from the name() method so it can be overriden by WebServer.

https://github.com/copperlight/iep/blob/a9ab01dec2897d23b86694ad0ea6166346d96104/iep-service/src/main/java/com/netflix/iep/service/AbstractService.java#L39
",448986774,2016-05-19 19:35:49 UTC,Statement,3,1,1,1,1,1,Not Available,CONTRIBUTOR,False,2016-05-19T19:35:49Z,https://github.com/Netflix/iep/pull/256#discussion_r63940911,0,modified,1,1,2
14932800,https://api.github.com/repos/Netflix/iep,19560174,288,15698,91770860,1,Rename the file to IepModule to match the new class name.,573184202,2016-12-09 18:43:13 UTC,Clarify,0,1,1,1644,4,14,43517,CONTRIBUTOR,False,2016-12-09T18:48:36Z,https://github.com/Netflix/iep/pull/288#discussion_r91770860,Not Available,Not Available,Not Available,Not Available,Not Available
14932800,https://api.github.com/repos/Netflix/iep,6498020,21,15698,25649668,6,I think it would be better to move it to the beginning of the function and do something like:    ```java  if (servers.isEmpty()) {    return Collections.emptyList();  }  ```,225160396,2015-03-02 22:29:57 UTC,Clarify,3,2,1,3,0,1,1289028,CONTRIBUTOR,False,2015-03-02T23:29:57Z,https://github.com/Netflix/iep/pull/21#discussion_r25649668,0,modified,3,0,3
14932800,https://api.github.com/repos/Netflix/iep,19059465,285,15698,89119140,15,"This would do the conversion work on each access, it would be better to do it early when the data is cached.",561174279,2016-11-22 13:55:59 UTC,Clarify,1,3,7,115,117,5,Not Available,CONTRIBUTOR,False,2016-11-22T21:09:41Z,https://github.com/Netflix/iep/pull/285#discussion_r89119140,2,modified,5,2,7
14932800,https://api.github.com/repos/Netflix/iep,21075773,293,48090,99985701,47,"This is still something of a WIP.  I plan on converting it over to use more standard idioms before considering it done, but this is good enough for tomorrow's work.",612561165,2017-02-08 03:30:35 UTC,Clarify,1,6,3,167,268,10,1289028,CONTRIBUTOR,True,2017-02-08T03:32:50Z,https://github.com/Netflix/iep/pull/293#discussion_r99985701,Not Available,Not Available,Not Available,Not Available,Not Available
14932800,https://api.github.com/repos/Netflix/iep,33960923,347,15698,163407654,13,"I looked at it a little bit, but never got around to trying it. One minor disappointment is that it would still pull archaius1 into the classpath even though it shouldn't get used. I would like to shed archaius1 entirely so that it is no longer discoverable and we don't get regressions because someones IDE found the old classes. I feel like it is a risk and our systems are harder to reason about when it is in the classpath but may or may not be setup and initialized. The current behavior means we notice pretty quickly if archaius1 is not initialized properly since we can remove it entirely.",896757865,2018-01-23 23:15:42 UTC,Clarify,1,4,2,10,2,1,1289028,CONTRIBUTOR,False,2018-01-23T23:16:18Z,https://github.com/Netflix/iep/pull/347#discussion_r163407654,1,modified,9,5,14
14932800,https://api.github.com/repos/Netflix/iep,21075773,293,15698,99960718,121,It would seem more idiomatic to me to use something like [Observable.interval](http://reactivex.io/documentation/operators/interval.html) to trigger the refresh.,612561165,2017-02-07 23:49:22 UTC,Clarify,1,6,3,167,268,10,1289028,CONTRIBUTOR,False,2017-02-08T03:32:50Z,https://github.com/Netflix/iep/pull/293#discussion_r99960718,Not Available,Not Available,Not Available,Not Available,Not Available
17422,https://api.github.com/repos/gamerson/liferay-ide,4540841,645,16826,17162173,14,Remove contributors section,155362872,2014-09-05 06:48:11 UTC,Statement,1,14,1,4502,26,60,Not Available,OWNER,False,2014-09-05T08:48:11Z,https://github.com/gamerson/liferay-ide/pull/645#discussion_r17162173,0,added,45,0,45
17422,https://api.github.com/repos/gamerson/liferay-ide,27937810,2429,8066534,135969677,9,"sorry , I don't get you , to which version?",770641925,2017-08-30 04:54:33 UTC,whQuestion,15,9,4,245,245,39,Not Available,NONE,True,2017-09-04T07:58:40Z,https://github.com/gamerson/liferay-ide/pull/2429#discussion_r135969677,Not Available,Not Available,Not Available,Not Available,Not Available
17422,https://api.github.com/repos/gamerson/liferay-ide,9888122,1199,16826,42224487,74,Use the static method MessageDialog.openConfirm(),331290724,2015-10-16 07:33:02 UTC,Statement,3,3,1,67,0,1,Not Available,OWNER,False,2015-10-16T09:33:02Z,https://github.com/gamerson/liferay-ide/pull/1199#discussion_r42224487,0,modified,67,0,67
17422,https://api.github.com/repos/gamerson/liferay-ide,3241855,487,16826,10556498,31,Lets also add a new test called testIncludeSampleCode() that will just create a project leaving the sample code as true and then make sure that the getElements().getLength() is set to 1,95883691,2014-03-13 07:56:44 UTC,Clarify,0,2,1,62,0,1,Not Available,OWNER,False,2014-03-13T08:56:44Z,https://github.com/gamerson/liferay-ide/pull/487#discussion_r10556498,0,modified,62,0,62
3281281,https://api.github.com/repos/wildfly/wildfly,3844992,6360,10235,13803755,42,"That won't work.  The super.populateModel(...) logic isn't handled by AbstractAddStepHandler, but in StoreAddHandler.",121035908,2014-06-16 11:08:57 UTC,Statement,9,39,4,3285,2894,113,299242,CONTRIBUTOR,True,2014-06-16T20:43:46Z,https://github.com/wildfly/wildfly/pull/6360#discussion_r13803755,Not Available,Not Available,Not Available,Not Available,Not Available
3281281,https://api.github.com/repos/wildfly/wildfly,8529091,7790,10267,35099194,8,this are default values ,282433300,2015-07-21 11:09:40 UTC,Statement,28,23,2,45,38,12,299242,CONTRIBUTOR,True,2015-07-22T10:25:19Z,https://github.com/wildfly/wildfly/pull/7790#discussion_r35099194,Not Available,Not Available,Not Available,Not Available,Not Available
3281281,https://api.github.com/repos/wildfly/wildfly,36621445,11033,35174,175926685,24,"Logging should be done at debug level or lower, normal test execution should produce no log output.",950671409,2018-03-20 21:21:26 UTC,Clarify,7,6,1,166,0,4,328571,CONTRIBUTOR,False,2018-03-26T08:57:53Z,https://github.com/wildfly/wildfly/pull/11033#discussion_r175926685,Not Available,Not Available,Not Available,Not Available,Not Available
3281281,https://api.github.com/repos/wildfly/wildfly,3681864,6281,35174,12753097,12,There are not really any cases where this can be used without causing potential backwards compatibility problems.,111022514,2014-05-16 16:32:02 UTC,Reject,3,4,1,103,78,9,299242,CONTRIBUTOR,True,2014-05-16T18:32:02Z,https://github.com/wildfly/wildfly/pull/6281#discussion_r12753097,0,modified,0,8,8
3281281,https://api.github.com/repos/wildfly/wildfly,16084006,8984,38993,74359941,4,"This change helped but we also need the same line added to org.jboss.as.test.integration.hibernate.secondlevelcache.SFSB, after line 82.  This helped with my local testing.",489516574,2016-08-11 01:33:29 UTC,Clarify,35,3,54,6874,1949,572,Not Available,CONTRIBUTOR,False,2016-10-06T19:25:59Z,https://github.com/wildfly/wildfly/pull/8984#discussion_r74359941,Not Available,Not Available,Not Available,Not Available,Not Available
3281281,https://api.github.com/repos/wildfly/wildfly,1840333,4841,82816,5472338,4,"Not directly related to this PR, but I wonder why the spec introduced a JMS specific IllegalStateException.  ",52032392,2013-07-30 07:58:23 UTC,nAnswer,10,10,1,965,2,12,Not Available,CONTRIBUTOR,False,2013-08-01T16:51:37Z,https://github.com/wildfly/wildfly/pull/4841#discussion_r5472338,Not Available,Not Available,Not Available,Not Available,Not Available
3281281,https://api.github.com/repos/wildfly/wildfly,1395907,4438,82816,3988351,34,WildFly instead of AS 8  ,38223386,2013-04-27 01:39:00 UTC,Clarify,8,14,4,33,32,11,Not Available,CONTRIBUTOR,False,2013-05-08T13:08:17Z,https://github.com/wildfly/wildfly/pull/4438#discussion_r3988351,0,modified,10,10,20
3281281,https://api.github.com/repos/wildfly/wildfly,17314265,9217,10267,84307228,64,log.trace if anything,518377170,2016-10-20 15:20:25 UTC,Statement,17,68,6,2301,134,36,49927,CONTRIBUTOR,False,2016-11-09T14:52:45Z,https://github.com/wildfly/wildfly/pull/9217#discussion_r84307228,Not Available,Not Available,Not Available,Not Available,Not Available
3281281,https://api.github.com/repos/wildfly/wildfly,17314265,9217,136637,86975470,62,"True, I can's see any reason why it should not be thrown. Can't remember my reason for this.",550943587,2016-11-08 12:05:54 UTC,Clarify,17,68,6,2301,134,36,49927,CONTRIBUTOR,True,2016-11-09T14:52:45Z,https://github.com/wildfly/wildfly/pull/9217#discussion_r86975470,Not Available,Not Available,Not Available,Not Available,Not Available
1958,https://api.github.com/repos/infinispan/infinispan,24751418,5143,179340,121914821,5,this change isn't needed.,713769129,2017-06-14 10:52:18 UTC,Statement,15,104,1,2584,1973,63,1492066,CONTRIBUTOR,False,2017-06-29T07:18:52Z,https://github.com/infinispan/infinispan/pull/5143#discussion_r121914821,Not Available,Not Available,Not Available,Not Available,Not Available
1958,https://api.github.com/repos/infinispan/infinispan,18286764,4635,488804,100021538,117,"I should have pointed this out sooner, but this is missing cache stores. Since `Cache` doesn't have proper async API, you could create `GetCacheEntryCommand` and invoke it using async interceptor stack yourselves.",611930412,2017-02-08 09:24:16 UTC,nAnswer,24,132,1,2743,232,85,392478,MEMBER,False,2017-06-15T20:33:39Z,https://github.com/infinispan/infinispan/pull/4635#discussion_r100021538,Not Available,Not Available,Not Available,Not Available,Not Available
1958,https://api.github.com/repos/infinispan/infinispan,6915373,3354,10239,27909675,125,Why shouldn't this always be uncommented?,241667362,2015-04-07 17:07:21 UTC,whQuestion,9,21,1,845,17,12,Not Available,MEMBER,False,2015-04-07T19:07:21Z,https://github.com/infinispan/infinispan/pull/3354#discussion_r27909675,0,added,212,0,212
1958,https://api.github.com/repos/infinispan/infinispan,30060018,5525,10236,149781321,24,"Just for completeness, we should add BINARY.",813314211,2017-11-08 20:01:11 UTC,Statement,8,5,2,113,22,7,648175,MEMBER,False,2017-11-08T23:54:31Z,https://github.com/infinispan/infinispan/pull/5525#discussion_r149781321,Not Available,Not Available,Not Available,Not Available,Not Available
1958,https://api.github.com/repos/infinispan/infinispan,30892244,5570,179340,152814440,97,"can you explain what is happening here? the counter-name, storage and initial-value can't be changed and they are set when you define a counter. ",845263637,2017-11-23 14:32:32 UTC,whQuestion,35,131,1,1452,4,29,765332,CONTRIBUTOR,False,2017-12-06T12:38:09Z,https://github.com/infinispan/infinispan/pull/5570#discussion_r152814440,Not Available,Not Available,Not Available,Not Available,Not Available
1958,https://api.github.com/repos/infinispan/infinispan,30892244,5570,10238,152778010,53,"ok, thanks @pruivo ",843292479,2017-11-23 11:30:41 UTC,Statement,35,131,1,1452,4,29,765332,MEMBER,True,2017-12-06T12:38:09Z,https://github.com/infinispan/infinispan/pull/5570#discussion_r152778010,Not Available,Not Available,Not Available,Not Available,Not Available
1958,https://api.github.com/repos/infinispan/infinispan,25757330,5227,488804,124530487,110,@karesti I think that this means that this has to wait until ISPN-7990 is done.,720667945,2017-06-28 12:47:26 UTC,Clarify,19,54,2,576,49,32,Not Available,MEMBER,False,2017-07-20T10:41:58Z,https://github.com/infinispan/infinispan/pull/5227#discussion_r124530487,Not Available,Not Available,Not Available,Not Available,Not Available
1958,https://api.github.com/repos/infinispan/infinispan,20986027,4827,10239,113763414,124,"Sorry, I guess I got confused by my old codes then: looking at the table now, I have no idea why I didn't make all the codes at least 4 digits, or why I didn't write which node owns the key in the initial topology and in the final one :)",612566456,2017-04-27 18:02:45 UTC,Clarify,4,52,3,1890,1190,135,Not Available,MEMBER,False,2017-04-27T18:02:45Z,https://github.com/infinispan/infinispan/pull/4827#discussion_r113763414,2,modified,406,323,729
1958,https://api.github.com/repos/infinispan/infinispan,30604818,5556,179340,149403252,21,all changes in this class can be reverted!,829163102,2017-11-07 15:27:37 UTC,Emphasis,15,100,3,1704,330,110,50187,CONTRIBUTOR,False,2017-11-10T08:05:50Z,https://github.com/infinispan/infinispan/pull/5556#discussion_r149403252,Not Available,Not Available,Not Available,Not Available,Not Available
1958,https://api.github.com/repos/infinispan/infinispan,40976,967,10250,500542,4,"the approach we use in order to keep a class's creators is by using the @author javadoc tag. Generally if your modifications added to a class impacts its functionality, as they obviously are in many of the classes this patch touched, then you should add your name to the list of the authors.  ",4089474,2012-02-29 08:27:20 UTC,Clarify,1,75,1,3539,1094,57,Not Available,CONTRIBUTOR,False,2012-02-29T09:27:20Z,https://github.com/infinispan/infinispan/pull/967#discussion_r500542,0,modified,5,1,6
1958,https://api.github.com/repos/infinispan/infinispan,14753275,4350,488804,91070554,121,Why is this an element (I would make single-attribute element just an attribute).,572853256,2016-12-06 12:47:43 UTC,Statement,19,55,1,7220,0,85,392478,MEMBER,False,2017-04-28T13:34:53Z,https://github.com/infinispan/infinispan/pull/4350#discussion_r91070554,Not Available,Not Available,Not Available,Not Available,Not Available
1958,https://api.github.com/repos/infinispan/infinispan,7462131,3449,167550,30210363,78,I don't see why not...,254912923,2015-05-13 06:19:01 UTC,Statement,7,42,4,1046,190,26,Not Available,CONTRIBUTOR,True,2015-05-13T17:20:39Z,https://github.com/infinispan/infinispan/pull/3449#discussion_r30210363,Not Available,Not Available,Not Available,Not Available,Not Available
1958,https://api.github.com/repos/infinispan/infinispan,8335353,3577,10239,38417169,8,"I still think the entry equivalence isn't necessary... the `Collection.retainAll()` javadoc says ""Retains only the elements in this collection that are contained in the specified collection"", so it's defined based on the collection parameter's `contains()`, not on our `contains()`.",279446839,2015-09-01 11:21:35 UTC,Statement,25,58,1,3615,308,79,Not Available,MEMBER,False,2015-09-01T15:15:03Z,https://github.com/infinispan/infinispan/pull/3577#discussion_r38417169,Not Available,Not Available,Not Available,Not Available,Not Available
1958,https://api.github.com/repos/infinispan/infinispan,8335353,3577,10239,34988077,267,`entrySet()` shouldn't support `add()` and `addAll()`,279446839,2015-07-20 10:09:56 UTC,Statement,25,58,1,3615,308,79,Not Available,MEMBER,False,2015-09-01T15:15:03Z,https://github.com/infinispan/infinispan/pull/3577#discussion_r34988077,Not Available,Not Available,Not Available,Not Available,Not Available
1958,https://api.github.com/repos/infinispan/infinispan,30604818,5556,10234,149375870,22,"AttributeDefinitions are final static, so this works, although it's probably better to implement equals",829163102,2017-11-07 14:06:59 UTC,Statement,15,100,3,1704,330,110,50187,MEMBER,True,2017-11-10T08:05:50Z,https://github.com/infinispan/infinispan/pull/5556#discussion_r149375870,Not Available,Not Available,Not Available,Not Available,Not Available
1958,https://api.github.com/repos/infinispan/infinispan,18844115,4667,10233,89115336,37,Shouldn't this be a compile time dependency?,556565151,2016-11-22 13:33:50 UTC,Statement,2,17,1,1351,28,31,392478,MEMBER,False,2016-11-28T13:42:52Z,https://github.com/infinispan/infinispan/pull/4667#discussion_r89115336,Not Available,Not Available,Not Available,Not Available,Not Available
